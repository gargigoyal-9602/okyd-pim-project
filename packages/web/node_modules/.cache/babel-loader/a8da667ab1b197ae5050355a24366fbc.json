{"ast":null,"code":"var _jsxFileName = \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/react-native-elements/src/checkbox/CheckBoxIcon.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FAIcon from 'react-native-vector-icons/FontAwesome';\nimport getIconType from '../helpers/getIconType';\n\nconst CheckBoxIcon = ({\n  checked,\n  onIconPress,\n  onLongIconPress,\n  size,\n  checkedIcon,\n  uncheckedIcon,\n  iconType,\n  checkedColor,\n  uncheckedColor\n}) => {\n  if (checked && React.isValidElement(checkedIcon)) {\n    return checkedIcon;\n  }\n\n  if (!checked && React.isValidElement(uncheckedIcon)) {\n    return uncheckedIcon;\n  }\n\n  const VectorIcon = iconType ? getIconType(iconType) : FAIcon;\n  return /*#__PURE__*/React.createElement(VectorIcon, {\n    color: checked ? checkedColor : uncheckedColor,\n    name: checked ? checkedIcon : uncheckedIcon,\n    size: size || 24,\n    style: {\n      minWidth: size || 24\n    },\n    onLongPress: onLongIconPress,\n    onPress: onIconPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  });\n};\n\nCheckBoxIcon.propTypes = {\n  checked: PropTypes.bool,\n  onIconPress: PropTypes.func,\n  onLongIconPress: PropTypes.func,\n  size: PropTypes.number,\n  checkedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  uncheckedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  iconType: PropTypes.string,\n  checkedColor: PropTypes.string,\n  uncheckedColor: PropTypes.string\n};\nexport default CheckBoxIcon;","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/react-native-elements/src/checkbox/CheckBoxIcon.js"],"names":["React","PropTypes","FAIcon","getIconType","CheckBoxIcon","checked","onIconPress","onLongIconPress","size","checkedIcon","uncheckedIcon","iconType","checkedColor","uncheckedColor","isValidElement","VectorIcon","minWidth","propTypes","bool","func","number","oneOfType","string","element"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,OADoB;AAEpBC,EAAAA,WAFoB;AAGpBC,EAAAA,eAHoB;AAIpBC,EAAAA,IAJoB;AAKpBC,EAAAA,WALoB;AAMpBC,EAAAA,aANoB;AAOpBC,EAAAA,QAPoB;AAQpBC,EAAAA,YARoB;AASpBC,EAAAA;AAToB,CAAD,KAUf;AACJ,MAAIR,OAAO,IAAIL,KAAK,CAACc,cAAN,CAAqBL,WAArB,CAAf,EAAkD;AAChD,WAAOA,WAAP;AACD;;AAED,MAAI,CAACJ,OAAD,IAAYL,KAAK,CAACc,cAAN,CAAqBJ,aAArB,CAAhB,EAAqD;AACnD,WAAOA,aAAP;AACD;;AAED,QAAMK,UAAU,GAAGJ,QAAQ,GAAGR,WAAW,CAACQ,QAAD,CAAd,GAA2BT,MAAtD;AAEA,sBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEG,OAAO,GAAGO,YAAH,GAAkBC,cADlC;AAEE,IAAA,IAAI,EAAER,OAAO,GAAGI,WAAH,GAAiBC,aAFhC;AAGE,IAAA,IAAI,EAAEF,IAAI,IAAI,EAHhB;AAIE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAER,IAAI,IAAI;AAApB,KAJT;AAKE,IAAA,WAAW,EAAED,eALf;AAME,IAAA,OAAO,EAAED,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CA/BD;;AAiCAF,YAAY,CAACa,SAAb,GAAyB;AACvBZ,EAAAA,OAAO,EAAEJ,SAAS,CAACiB,IADI;AAEvBZ,EAAAA,WAAW,EAAEL,SAAS,CAACkB,IAFA;AAGvBZ,EAAAA,eAAe,EAAEN,SAAS,CAACkB,IAHJ;AAIvBX,EAAAA,IAAI,EAAEP,SAAS,CAACmB,MAJO;AAKvBX,EAAAA,WAAW,EAAER,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACqB,MAAX,EAAmBrB,SAAS,CAACsB,OAA7B,CAApB,CALU;AAMvBb,EAAAA,aAAa,EAAET,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACqB,MAAX,EAAmBrB,SAAS,CAACsB,OAA7B,CAApB,CANQ;AAOvBZ,EAAAA,QAAQ,EAAEV,SAAS,CAACqB,MAPG;AAQvBV,EAAAA,YAAY,EAAEX,SAAS,CAACqB,MARD;AASvBT,EAAAA,cAAc,EAAEZ,SAAS,CAACqB;AATH,CAAzB;AAYA,eAAelB,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FAIcon from 'react-native-vector-icons/FontAwesome';\n\nimport getIconType from '../helpers/getIconType';\n\nconst CheckBoxIcon = ({\n  checked,\n  onIconPress,\n  onLongIconPress,\n  size,\n  checkedIcon,\n  uncheckedIcon,\n  iconType,\n  checkedColor,\n  uncheckedColor,\n}) => {\n  if (checked && React.isValidElement(checkedIcon)) {\n    return checkedIcon;\n  }\n\n  if (!checked && React.isValidElement(uncheckedIcon)) {\n    return uncheckedIcon;\n  }\n\n  const VectorIcon = iconType ? getIconType(iconType) : FAIcon;\n\n  return (\n    <VectorIcon\n      color={checked ? checkedColor : uncheckedColor}\n      name={checked ? checkedIcon : uncheckedIcon}\n      size={size || 24}\n      style={{ minWidth: size || 24 }}\n      onLongPress={onLongIconPress}\n      onPress={onIconPress}\n    />\n  );\n};\n\nCheckBoxIcon.propTypes = {\n  checked: PropTypes.bool,\n  onIconPress: PropTypes.func,\n  onLongIconPress: PropTypes.func,\n  size: PropTypes.number,\n  checkedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  uncheckedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  iconType: PropTypes.string,\n  checkedColor: PropTypes.string,\n  uncheckedColor: PropTypes.string,\n};\n\nexport default CheckBoxIcon;\n"]},"metadata":{},"sourceType":"module"}