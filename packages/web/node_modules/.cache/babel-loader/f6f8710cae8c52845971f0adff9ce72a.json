{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport RichTextEditor from 'react-rte';\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport { orderBy } from \"lodash\"; // Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"./assets\";\n// Customizable Area End\n\nexport const configJSON = require(\"./brands.config\");\nexport default class BrandsController extends BlockComponent {\n  constructor(props) {\n    super(props);\n    this.auth = window.localStorage.getItem(\"auth\");\n    this.getBrandApiCallId = \"\";\n    this.brandDetailsApiCallId = \"\";\n    this.brandCreateApiCallId = \"\";\n    this.brandUpdateApiCallId = \"\";\n    this.deleteBrandApiCallId = \"\";\n\n    this.getBrandList = () => {\n      this.setState({\n        loader: true\n      });\n      const headers = {\n        \"Content-Type\": configJSON.apiContentType,\n        token: this.auth\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getBrandApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.apiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpGetType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.brandDetails = accountId => {\n      const headers = {\n        \"Content-Type\": configJSON.apiContentType,\n        token: this.auth\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.brandDetailsApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), \"\".concat(configJSON.apiEndPoint, \"/\").concat(accountId));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpGetType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.createBrand = values => {\n      const headers = {\n        \"Content-Type\": configJSON.apiContentType,\n        token: this.auth\n      };\n      const httpBody = values;\n      const apiEndPoint = configJSON.apiEndPoint;\n      const methodType = configJSON.httpPostType;\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.brandCreateApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), apiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(httpBody));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), methodType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.updateBrand = values => {\n      const brandId = values.brandId,\n            restValues = _objectWithoutProperties(values, [\"brandId\"]);\n\n      const headers = {\n        \"Content-Type\": configJSON.apiContentType,\n        token: this.auth\n      };\n      const httpBody = {\n        brand: _objectSpread({}, restValues)\n      };\n      const apiEndPoint = \"\".concat(configJSON.apiEndPoint, \"/\").concat(values.brandId);\n      const methodType = configJSON.httpPutType;\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.brandUpdateApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), apiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(httpBody));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), methodType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.deleteBrandHandler = accountId => {\n      const headers = {\n        token: this.auth\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.deleteBrandApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), \"\".concat(configJSON.apiEndPoint, \"/\").concat(accountId));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpDeleteType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.updateActiveStatus = (brandId, active) => {\n      this.brandDetails(brandId);\n      setTimeout(() => {\n        var _brandDetails$attribu, _brandDetails$attribu2, _brandDetails$attribu3, _brandDetails$attribu4, _brandDetails$attribu5, _brandDetails$attribu6;\n\n        const brandDetails = this.state.brandDetailsData;\n        const values = {\n          brandId: brandId,\n          name: brandDetails === null || brandDetails === void 0 ? void 0 : (_brandDetails$attribu = brandDetails.attributes) === null || _brandDetails$attribu === void 0 ? void 0 : _brandDetails$attribu.name,\n          description: brandDetails === null || brandDetails === void 0 ? void 0 : (_brandDetails$attribu2 = brandDetails.attributes) === null || _brandDetails$attribu2 === void 0 ? void 0 : _brandDetails$attribu2.description,\n          discount: brandDetails === null || brandDetails === void 0 ? void 0 : (_brandDetails$attribu3 = brandDetails.attributes) === null || _brandDetails$attribu3 === void 0 ? void 0 : _brandDetails$attribu3.discount,\n          active: active,\n          private: brandDetails === null || brandDetails === void 0 ? void 0 : (_brandDetails$attribu4 = brandDetails.attributes) === null || _brandDetails$attribu4 === void 0 ? void 0 : _brandDetails$attribu4.private,\n          meta_title: brandDetails === null || brandDetails === void 0 ? void 0 : (_brandDetails$attribu5 = brandDetails.attributes) === null || _brandDetails$attribu5 === void 0 ? void 0 : _brandDetails$attribu5.meta_title,\n          meta_description: brandDetails === null || brandDetails === void 0 ? void 0 : (_brandDetails$attribu6 = brandDetails.attributes) === null || _brandDetails$attribu6 === void 0 ? void 0 : _brandDetails$attribu6.meta_description\n        };\n        this.updateBrand(values);\n        setTimeout(() => {\n          this.getBrandList();\n        }, 1000);\n      }, 1000);\n    };\n\n    this.handleImageUpload = event => {\n      var file = event.target.files[0];\n      const reader = new FileReader();\n      var url = reader.readAsDataURL(file);\n\n      reader.onloadend = e => {\n        this.setState({\n          selectedFile: [reader.result]\n        });\n      };\n\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onMenuToggle = () => {\n      this.setState({\n        menuCollapsed: !this.state.menuCollapsed\n      });\n    };\n\n    this.openSnackBarHandler = (type, message) => {\n      this.setState({\n        snackBar: {\n          show: true,\n          message: message,\n          type\n        }\n      });\n    };\n\n    this.closeSnackBarHandler = () => {\n      this.setState({\n        snackBar: {\n          show: false,\n          message: this.state.snackBar.message,\n          type: this.state.snackBar.type\n        }\n      });\n    };\n\n    this.handleSortingName = () => {\n      this.setState({\n        sortName: this.state.sortName !== 'asc' ? 'asc' : 'desc'\n      });\n      setTimeout(() => {\n        const sortedData = orderBy(this.state.brandsData, item => item.attributes.name.toLowerCase(), this.state.sortName);\n        this.setState({\n          brandsData: sortedData\n        });\n      }, 500);\n    };\n\n    this.handleSortingDiscount = () => {\n      this.setState({\n        sortDiscount: this.state.sortDiscount !== 'asc' ? 'asc' : 'desc'\n      });\n      setTimeout(() => {\n        const sortedData = orderBy(this.state.brandsData, item => item.attributes.discount, this.state.sortDiscount);\n        this.setState({\n          brandsData: sortedData\n        });\n      }, 500);\n    };\n\n    this.receive = this.receive.bind(this); // Customizable Area Start\n\n    this.subScribedMessages = [getName(MessageEnum.RestAPIResponceMessage)];\n    this.state = {\n      auth: \"\",\n      userType: configJSON.subscriber,\n      menuCollapsed: false,\n      brandsData: [],\n      brandDetailsData: [],\n      modulesData: [],\n      rolesUpdateModal: false,\n      checkbox: false,\n      snackBar: {\n        show: false\n      },\n      loader: false,\n      selectedFile: null,\n      editor: RichTextEditor.createEmptyValue(),\n      sortDiscount: null,\n      sortName: null\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(this, this.subScribedMessages);\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _this.getBrandList();\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  } // Handler for Get Catrgory List\n\n\n  receive(from, message) {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var responseJson, errorReponse, apiRequestCallId, _responseJson$data$at, errors, _this2$props;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            // Customizable Area Start\n            runEngine.debugLog(\"Message Recevied\", message);\n\n            if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n              responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n              errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n              apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n\n              if (responseJson && !responseJson.errors) {\n                if (apiRequestCallId != null) {\n                  // Store All Brands data\n                  if (apiRequestCallId === _this2.getBrandApiCallId && responseJson !== undefined) {\n                    _this2.setState({\n                      brandsData: responseJson.data,\n                      loader: false\n                    });\n\n                    _this2.handleSortingName();\n                  } // Store Brand detaills\n\n\n                  if (apiRequestCallId === _this2.brandDetailsApiCallId && responseJson !== undefined) {\n                    _this2.setState({\n                      brandDetailsData: responseJson.data,\n                      editor: RichTextEditor.createValueFromString((_responseJson$data$at = responseJson.data.attributes) === null || _responseJson$data$at === void 0 ? void 0 : _responseJson$data$at.description, 'html')\n                    });\n                  } // Create Brand\n\n\n                  if (apiRequestCallId === _this2.brandCreateApiCallId && responseJson !== undefined) {\n                    _this2.openSnackBarHandler('success', configJSON.successCreateMsgText);\n\n                    setTimeout(() => {\n                      //@ts-ignore\n                      _this2.props.history.push('/brands');\n                    }, 1000);\n                  } // Update Brand\n\n\n                  if (apiRequestCallId === _this2.brandUpdateApiCallId && responseJson !== undefined) {\n                    _this2.openSnackBarHandler('success', configJSON.successUpdateMsgText);\n\n                    setTimeout(() => {\n                      //@ts-ignore\n                      _this2.props.history.push('/brands');\n                    }, 1000);\n                  } // Delete Brand\n\n\n                  if (apiRequestCallId === _this2.deleteBrandApiCallId && responseJson !== undefined) {\n                    _this2.openSnackBarHandler('success', configJSON.deleteBrandMsgText);\n\n                    _this2.getBrandList();\n                  }\n                }\n              } else {\n                errors = responseJson.errors;\n\n                _this2.parseApiCatchErrorResponse(errorReponse);\n\n                if (errors[0].token === 'Invalid token' || errors[0].token === 'Token has Expired') {\n                  AsyncStorage.setItem(\"auth\", \"\"); //@ts-ignore\n\n                  (_this2$props = _this2.props) === null || _this2$props === void 0 ? void 0 : _this2$props.history.push(\"/login\");\n                } else if (errors[0].message) {\n                  _this2.openSnackBarHandler('error', errors[0].message);\n                } else {\n                  if (apiRequestCallId === _this2.brandCreateApiCallId) {\n                    _this2.openSnackBarHandler('error', configJSON.errorCreateMsgText);\n                  }\n                }\n              }\n            } // Customizable Area End\n\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  } // Customizable Area End\n\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/categoriessubcategories/src/BrandsController.web.tsx"],"names":["RichTextEditor","Message","BlockComponent","MessageEnum","getName","runEngine","orderBy","configJSON","require","BrandsController","constructor","props","auth","window","localStorage","getItem","getBrandApiCallId","brandDetailsApiCallId","brandCreateApiCallId","brandUpdateApiCallId","deleteBrandApiCallId","getBrandList","setState","loader","headers","apiContentType","token","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","apiEndPoint","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","httpGetType","sendMessage","id","brandDetails","accountId","createBrand","values","httpBody","methodType","httpPostType","RestAPIRequestBodyMessage","updateBrand","brandId","restValues","brand","httpPutType","deleteBrandHandler","httpDeleteType","updateActiveStatus","active","setTimeout","state","brandDetailsData","name","attributes","description","discount","private","meta_title","meta_description","handleImageUpload","event","file","target","files","reader","FileReader","url","readAsDataURL","onloadend","e","selectedFile","result","onMenuToggle","menuCollapsed","openSnackBarHandler","type","message","snackBar","show","closeSnackBarHandler","handleSortingName","sortName","sortedData","brandsData","item","toLowerCase","handleSortingDiscount","sortDiscount","receive","bind","subScribedMessages","RestAPIResponceMessage","userType","subscriber","modulesData","rolesUpdateModal","checkbox","editor","createEmptyValue","attachBuildingBlock","componentDidMount","from","debugLog","responseJson","getData","RestAPIResponceSuccessMessage","errorReponse","RestAPIResponceErrorMessage","apiRequestCallId","RestAPIResponceDataMessage","errors","undefined","data","createValueFromString","successCreateMsgText","history","push","successUpdateMsgText","deleteBrandMsgText","parseApiCatchErrorResponse","AsyncStorage","setItem","errorCreateMsgText"],"mappings":"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","sourcesContent":["import { AsyncStorage } from \"react-native\";\nimport RichTextEditor from 'react-rte';\nimport { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName,\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport {orderBy} from \"lodash\"\n\n// Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"./assets\";\n// Customizable Area End\n\nexport const configJSON = require(\"./brands.config\");\n\ninterface SelectOptions {\n  value: string;\n  label: string;\n}\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  match: any;\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  auth: string | null | undefined;\n  userType: string;\n  menuCollapsed: boolean;\n  brandsData: object[];\n  modulesData: object[];\n  brandDetailsData: any;\n  rolesUpdateModal: boolean;\n  checkbox: boolean;\n  snackBar: {\n    show: boolean,\n    message?: string,\n    type?: \"success\" | \"info\" | \"warning\" | \"error\" | undefined\n  };\n  loader: boolean,\n  selectedFile: any,\n  editor: any,\n  sortDiscount:any,\n  sortName: any\n  // Customizable Area End\n}\n\ninterface SS {\n  id: any;\n}\n\nexport default class BrandsController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n  auth: string | null | undefined = window.localStorage.getItem(\"auth\");\n  getBrandApiCallId: string = \"\";\n  brandDetailsApiCallId: string = \"\";\n  brandCreateApiCallId: string = \"\";\n  brandUpdateApiCallId: string = \"\";\n  deleteBrandApiCallId: string = \"\";\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [getName(MessageEnum.RestAPIResponceMessage)];\n\n    this.state = {\n      auth: \"\",\n      userType: configJSON.subscriber,\n      menuCollapsed: false,\n      brandsData: [],\n      brandDetailsData: [],\n      modulesData: [],\n      rolesUpdateModal: false,\n      checkbox: false,\n      snackBar: {\n        show: false,\n      },\n      loader: false,\n      selectedFile: null,\n      editor: RichTextEditor.createEmptyValue(),\n      sortDiscount:null,\n      sortName:null\n    };\n    // Customizable Area End\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n\n  async componentDidMount() {\n    this.getBrandList();\n  }\n\n  // Handler for Get Catrgory List\n  getBrandList = (): boolean => {\n    this.setState({\n      loader: true\n    });\n\n    const headers = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.auth,\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.getBrandApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.apiEndPoint\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.httpGetType\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  // Handler for Brand Details\n  brandDetails = (accountId: number): boolean => {\n    const headers = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.auth,\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.brandDetailsApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      `${configJSON.apiEndPoint}/${accountId}`\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.httpGetType\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  // Create Brand Handler\n  createBrand = (values: any): boolean => {\n    const headers = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.auth,\n    };\n    const httpBody = values;\n    const apiEndPoint = configJSON.apiEndPoint;\n    const methodType = configJSON.httpPostType;\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.brandCreateApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), apiEndPoint);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(httpBody));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), methodType);\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  // Update Brand Handler\n  updateBrand = (values: any): boolean => {\n    const {brandId, ...restValues}  = values;\n    const headers = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.auth,\n    };\n    const httpBody = {\n      brand: {...restValues},\n    };\n    const apiEndPoint = `${configJSON.apiEndPoint}/${values.brandId}`;\n    const methodType = configJSON.httpPutType;\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.brandUpdateApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), apiEndPoint);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(httpBody));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), methodType);\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  // Delete Brand handler\n  deleteBrandHandler = (accountId: number): boolean => {\n    const headers = {\n      token: this.auth,\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.deleteBrandApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      `${configJSON.apiEndPoint}/${accountId}`\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.httpDeleteType\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  // Update Brand Active Status\n  updateActiveStatus = (brandId: number, active: boolean) => {\n    this.brandDetails(brandId);\n    setTimeout(() => {\n      const brandDetails = this.state.brandDetailsData;\n      const values = {\n        brandId: brandId,\n        name: brandDetails?.attributes?.name,\n        description: brandDetails?.attributes?.description,\n        discount: brandDetails?.attributes?.discount,\n        active: active,\n        private: brandDetails?.attributes?.private,\n        meta_title: brandDetails?.attributes?.meta_title,\n        meta_description: brandDetails?.attributes?.meta_description\n      };\n      this.updateBrand(values);\n      setTimeout(() => {\n        this.getBrandList();\n      }, 1000);\n    }, 1000);\n  };\n\n  handleImageUpload = (event: any) => {\n    var file = event.target.files[0];\n    const reader = new FileReader();\n    var url = reader.readAsDataURL(file);\n\n    reader.onloadend = (e: any) => {\n      this.setState({ selectedFile: [reader.result] });\n    };\n\n    this.setState({\n      selectedFile: event.target.files[0],\n    });\n  };\n\n  async receive(from: string, message: Message) {\n    // Customizable Area Start\n    runEngine.debugLog(\"Message Recevied\", message);\n\n    if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      var errorReponse = message.getData(\n        getName(MessageEnum.RestAPIResponceErrorMessage)\n      );\n      const apiRequestCallId = message.getData(\n        getName(MessageEnum.RestAPIResponceDataMessage)\n      );\n      if (responseJson && !responseJson.errors) {\n        if (apiRequestCallId != null) {\n          // Store All Brands data\n          if (\n            apiRequestCallId === this.getBrandApiCallId &&\n            responseJson !== undefined\n          ) {\n            this.setState({ \n              brandsData: responseJson.data,\n              loader: false\n            });\n            this.handleSortingName()\n          }\n\n          // Store Brand detaills\n          if (\n            apiRequestCallId === this.brandDetailsApiCallId &&\n            responseJson !== undefined\n          ) {\n            this.setState({\n              brandDetailsData: responseJson.data,\n              editor:  RichTextEditor.createValueFromString(responseJson.data.attributes?.description, 'html')\n            });\n          }\n\n          // Create Brand\n          if (apiRequestCallId === this.brandCreateApiCallId && responseJson !== undefined) {\n            this.openSnackBarHandler('success', configJSON.successCreateMsgText);\n            setTimeout(() => {\n              //@ts-ignore\n              this.props.history.push('/brands');\n            }, 1000);\n          }\n\n          // Update Brand\n          if (apiRequestCallId === this.brandUpdateApiCallId && responseJson !== undefined) {\n            this.openSnackBarHandler('success', configJSON.successUpdateMsgText);\n            setTimeout(() => {\n              //@ts-ignore\n              this.props.history.push('/brands');\n            }, 1000);\n          }\n\n          // Delete Brand\n          if (apiRequestCallId === this.deleteBrandApiCallId && responseJson !== undefined) {\n            this.openSnackBarHandler('success', configJSON.deleteBrandMsgText);\n            this.getBrandList();\n          }\n        }\n      } else {\n        const errors = responseJson.errors;\n        this.parseApiCatchErrorResponse(errorReponse);\n\n        if(errors[0].token === 'Invalid token' ||errors[0].token ===  'Token has Expired') {\n          AsyncStorage.setItem(\"auth\", \"\");\n          //@ts-ignore\n          this.props?.history.push(\"/login\");\n        } else if(errors[0].message) {\n          this.openSnackBarHandler('error', errors[0].message);\n        } else {\n          if (apiRequestCallId === this.brandCreateApiCallId) {\n            this.openSnackBarHandler('error', configJSON.errorCreateMsgText);\n          }\n        }\n      }\n    }\n    // Customizable Area End\n  }\n\n  onMenuToggle = () => {\n    this.setState({\n      menuCollapsed: !this.state.menuCollapsed,\n    });\n  };\n\n  // Open View Details Modal\n  openSnackBarHandler = (type: \"success\" | \"info\" | \"warning\" | \"error\" | undefined,  message: string): void => {\n    this.setState({ snackBar: {\n      show: true,\n      message: message,\n      type\n    } });\n  };\n\n  // Close View Details Modal\n  closeSnackBarHandler = () => {\n    this.setState({ snackBar: {\n      show: false,\n      message: this.state.snackBar.message,\n      type: this.state.snackBar.type\n    }});\n  };\n\n  // handle sorting of roleData\nhandleSortingName =()=>{\n   \n  this.setState({\n    sortName :this.state.sortName !== 'asc' ? 'asc' : 'desc'\n  })\n\n  \n  setTimeout(() => {\n    const sortedData = orderBy(this.state.brandsData, (item:any)=> item.attributes.name.toLowerCase(), this.state.sortName);\n  this.setState({\n    brandsData :sortedData \n  })\n    \n  }, 500);\n}\n\n  // handle sorting of roleData\n  handleSortingDiscount =()=>{\n   \n    this.setState({\n      sortDiscount :this.state.sortDiscount !== 'asc' ? 'asc' : 'desc'\n    })\n\n    \n    setTimeout(() => {\n      const sortedData = orderBy(this.state.brandsData, (item:any)=> item.attributes.discount, this.state.sortDiscount);\n    this.setState({\n      brandsData :sortedData \n    })\n      \n    }, 500);\n\n  }\n  // Customizable Area End\n}\n"]},"metadata":{},"sourceType":"module"}