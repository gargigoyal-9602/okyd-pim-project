{"ast":null,"code":"export const _ = '';\nexport class Channel {\n  constructor(topic) {\n    this.subscribers = void 0;\n    this.topic = void 0;\n    this.topic = topic;\n    this.subscribers = [];\n  }\n\n  pub(from, message) {\n    this.subscribers.forEach(subscriber => {\n      try {\n        subscriber.receive(from, message);\n      } catch (_unused) {}\n    });\n  }\n\n  sub(subscriber) {\n    this.subscribers.push(subscriber);\n  }\n\n  unsub(subscriber) {\n    for (let i = 0; i < this.subscribers.length; i++) {\n      if (this.subscribers[i] === subscriber) {\n        this.subscribers.splice(i, 1);\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/framework/src/Channel.tsx"],"names":["_","Channel","constructor","topic","subscribers","pub","from","message","forEach","subscriber","receive","sub","push","unsub","i","length","splice"],"mappings":"AAGA,OAAO,MAAMA,CAAC,GAAG,EAAV;AAEP,OAAO,MAAMC,OAAN,CAAc;AAKnBC,EAAAA,WAAW,CAACC,KAAD,EAAgB;AAAA,SAJ3BC,WAI2B;AAAA,SAF3BD,KAE2B;AACzB,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACD;;AAEDC,EAAAA,GAAG,CAACC,IAAD,EAAeC,OAAf,EAAiC;AAClC,SAAKH,WAAL,CAAiBI,OAAjB,CAAyBC,UAAU,IAAI;AACrC,UAAI;AACFA,QAAAA,UAAU,CAACC,OAAX,CAAmBJ,IAAnB,EAAyBC,OAAzB;AACD,OAFD,CAEE,gBAAM,CAAE;AACX,KAJD;AAKD;;AAEDI,EAAAA,GAAG,CAACF,UAAD,EAAqB;AACtB,SAAKL,WAAL,CAAiBQ,IAAjB,CAAsBH,UAAtB;AACD;;AAEDI,EAAAA,KAAK,CAACJ,UAAD,EAAqB;AACxB,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKV,WAAL,CAAiBW,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAChD,UAAI,KAAKV,WAAL,CAAiBU,CAAjB,MAAwBL,UAA5B,EAAwC;AACtC,aAAKL,WAAL,CAAiBY,MAAjB,CAAwBF,CAAxB,EAA2B,CAA3B;AACD;AACF;AACF;;AA5BkB","sourcesContent":["import { IBlock } from './IBlock';\nimport { Message } from './Message';\n\nexport const _ = '';\n\nexport class Channel {\n  subscribers: IBlock[];\n\n  topic: string;\n\n  constructor(topic: string) {\n    this.topic = topic;\n    this.subscribers = [];\n  }\n\n  pub(from: string, message: Message) {\n    this.subscribers.forEach(subscriber => {\n      try {\n        subscriber.receive(from, message);\n      } catch {}\n    });\n  }\n\n  sub(subscriber: IBlock) {\n    this.subscribers.push(subscriber);\n  }\n\n  unsub(subscriber: IBlock) {\n    for (let i = 0; i < this.subscribers.length; i++) {\n      if (this.subscribers[i] === subscriber) {\n        this.subscribers.splice(i, 1);\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}