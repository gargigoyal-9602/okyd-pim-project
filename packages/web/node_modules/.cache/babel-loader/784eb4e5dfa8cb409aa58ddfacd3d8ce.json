{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createExtension = createExtension;\n/**\n * Copyright (c) React Native Community.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n// Methods available in storage API, to be excluded from the extension\n\nconst EXCLUDED_METHODS = ['getSingle', 'setSingle', 'getMany', 'setMany', 'removeSingle', 'removeMany', 'getKeys', 'dropStorage'];\n/*\n * Extension is an object containing 'public', function-type properties of Storage instance\n * To property be include in the extension, it has to meet three conditions:\n * - has public accessor\n * - has to be a function\n * - cannot start with an underscore (convention considered private in JS)\n *\n * All methods in the extensions are called in Storage instance context\n */\n\nfunction createExtension(storageInstance) {\n  const propertyNames = Object.getOwnPropertyNames(storageInstance).filter(propName => {\n    return EXCLUDED_METHODS.indexOf(propName) === -1 && !propName.startsWith('_') && // @ts-ignore this is a property on the instance\n    typeof storageInstance[propName] === 'function';\n  });\n  let extension = {};\n  propertyNames.forEach(propName => {\n    const desc = {\n      enumerable: true,\n      get: function get() {\n        // @ts-ignore this is a property on the instance\n        return storageInstance[propName].bind(storageInstance);\n      }\n    };\n    Object.defineProperty(extension, propName, desc);\n  });\n  Object.seal(extension);\n  return extension;\n}","map":null,"metadata":{},"sourceType":"script"}