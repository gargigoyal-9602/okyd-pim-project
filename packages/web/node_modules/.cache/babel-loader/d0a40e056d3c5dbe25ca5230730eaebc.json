{"ast":null,"code":"import RestClientBlock from './Blocks/RestApiClientBlock';\nimport SessionManagerBlock from './Blocks/SessionManagerBlock';\nimport UserAccountManagerBlock from './Blocks/UserAccountManagerBlock';\nimport AuthManagerBlock from './Blocks/AuthManagerBlock';\n\nvar SingletonFactory = function () {\n  let restBlockInstance;\n  let sessionManagerInstance;\n  let userManagerInstance;\n  let authManagerInstance;\n  return {\n    getRestBlockInstance: function getRestBlockInstance() {\n      if (!restBlockInstance) {\n        restBlockInstance = RestClientBlock.getInstance(); // Hide the constructor so the returned object can't be new'd...\n\n        restBlockInstance.constructor = null;\n      }\n\n      return restBlockInstance;\n    },\n    getSessionBlockInstance: function getSessionBlockInstance() {\n      if (!sessionManagerInstance) {\n        sessionManagerInstance = SessionManagerBlock.getInstance(); // Hide the constructor so the returned object can't be new'd...\n\n        sessionManagerInstance.constructor = null;\n      }\n\n      return sessionManagerInstance;\n    },\n    getUserManagerInstance: function getUserManagerInstance() {\n      if (!userManagerInstance) {\n        userManagerInstance = UserAccountManagerBlock.getInstance(); // Hide the constructor so the returned object can't be new'd...\n\n        userManagerInstance.constructor = null;\n      }\n\n      return userManagerInstance;\n    },\n    getAuthManagerInstance: function getAuthManagerInstance() {\n      if (!authManagerInstance) {\n        authManagerInstance = AuthManagerBlock.getInstance(); // Hide the constructor so the returned object can't be new'd...\n\n        authManagerInstance.constructor = null;\n      }\n\n      return authManagerInstance;\n    }\n  };\n}();\n\nexport default SingletonFactory;","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/framework/src/SingletonFactory.tsx"],"names":["RestClientBlock","SessionManagerBlock","UserAccountManagerBlock","AuthManagerBlock","SingletonFactory","restBlockInstance","sessionManagerInstance","userManagerInstance","authManagerInstance","getRestBlockInstance","getInstance","constructor","getSessionBlockInstance","getUserManagerInstance","getAuthManagerInstance"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,6BAA5B;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,uBAAP,MAAoC,kCAApC;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;;AAEA,IAAIC,gBAAgB,GAAI,YAAW;AACjC,MAAIC,iBAAJ;AACA,MAAIC,sBAAJ;AACA,MAAIC,mBAAJ;AACA,MAAIC,mBAAJ;AAEA,SAAO;AACLC,IAAAA,oBAAoB,EAAE,gCAAW;AAC/B,UAAI,CAACJ,iBAAL,EAAwB;AACtBA,QAAAA,iBAAiB,GAAGL,eAAe,CAACU,WAAhB,EAApB,CADsB,CAEtB;;AACAL,QAAAA,iBAAiB,CAACM,WAAlB,GAAgC,IAAhC;AACD;;AACD,aAAON,iBAAP;AACD,KARI;AASLO,IAAAA,uBAAuB,EAAE,mCAAW;AAClC,UAAI,CAACN,sBAAL,EAA6B;AAC3BA,QAAAA,sBAAsB,GAAGL,mBAAmB,CAACS,WAApB,EAAzB,CAD2B,CAE3B;;AACAJ,QAAAA,sBAAsB,CAACK,WAAvB,GAAqC,IAArC;AACD;;AACD,aAAOL,sBAAP;AACD,KAhBI;AAkBLO,IAAAA,sBAAsB,EAAE,kCAAW;AACjC,UAAI,CAACN,mBAAL,EAA0B;AACxBA,QAAAA,mBAAmB,GAAGL,uBAAuB,CAACQ,WAAxB,EAAtB,CADwB,CAExB;;AACAH,QAAAA,mBAAmB,CAACI,WAApB,GAAkC,IAAlC;AACD;;AACD,aAAOJ,mBAAP;AACD,KAzBI;AA2BLO,IAAAA,sBAAsB,EAAE,kCAAW;AACjC,UAAI,CAACN,mBAAL,EAA0B;AACxBA,QAAAA,mBAAmB,GAAGL,gBAAgB,CAACO,WAAjB,EAAtB,CADwB,CAExB;;AACAF,QAAAA,mBAAmB,CAACG,WAApB,GAAkC,IAAlC;AACD;;AACD,aAAOH,mBAAP;AACD;AAlCI,GAAP;AAoCD,CA1CsB,EAAvB;;AA4CA,eAAeJ,gBAAf","sourcesContent":["import RestClientBlock from './Blocks/RestApiClientBlock';\nimport SessionManagerBlock from './Blocks/SessionManagerBlock';\nimport UserAccountManagerBlock from './Blocks/UserAccountManagerBlock';\nimport AuthManagerBlock from './Blocks/AuthManagerBlock';\n\nvar SingletonFactory = (function() {\n  let restBlockInstance: any;\n  let sessionManagerInstance: any;\n  let userManagerInstance: any;\n  let authManagerInstance: any;\n\n  return {\n    getRestBlockInstance: function() {\n      if (!restBlockInstance) {\n        restBlockInstance = RestClientBlock.getInstance();\n        // Hide the constructor so the returned object can't be new'd...\n        restBlockInstance.constructor = null;\n      }\n      return restBlockInstance;\n    },\n    getSessionBlockInstance: function() {\n      if (!sessionManagerInstance) {\n        sessionManagerInstance = SessionManagerBlock.getInstance();\n        // Hide the constructor so the returned object can't be new'd...\n        sessionManagerInstance.constructor = null;\n      }\n      return sessionManagerInstance;\n    },\n\n    getUserManagerInstance: function() {\n      if (!userManagerInstance) {\n        userManagerInstance = UserAccountManagerBlock.getInstance();\n        // Hide the constructor so the returned object can't be new'd...\n        userManagerInstance.constructor = null;\n      }\n      return userManagerInstance;\n    },\n\n    getAuthManagerInstance: function() {\n      if (!authManagerInstance) {\n        authManagerInstance = AuthManagerBlock.getInstance();\n        // Hide the constructor so the returned object can't be new'd...\n        authManagerInstance.constructor = null;\n      }\n      return authManagerInstance;\n    },\n  };\n})();\n\nexport default SingletonFactory;\n"]},"metadata":{},"sourceType":"module"}