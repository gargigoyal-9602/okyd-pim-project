{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport RichTextEditor from \"react-rte\"; // Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\nexport default class CatalogueController extends BlockComponent {\n  constructor(props) {\n    super(props);\n    this.getProductApiCallId = void 0;\n    this.getProductListingApiCallId = void 0;\n    this.getBrandListingApiCallId = void 0;\n\n    this.openSnackBarHandler = (type, message) => {\n      this.setState({\n        snackBar: {\n          show: true,\n          message: message,\n          type\n        }\n      });\n    };\n\n    this.getProductListing = () => {\n      const headers = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: window.localStorage.getItem(\"auth\")\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getProductListingApiCallId = requestMessage.messageId;\n      console.log(\"this.getProductListingApiCallId\", this.getProductListingApiCallId);\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.productListApiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.getBrandListing = () => {\n      const headers = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: window.localStorage.getItem(\"auth\")\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getBrandListingApiCallId = requestMessage.messageId;\n      console.log(\"this.getProductListingApiCallId\", this.getProductListingApiCallId);\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.brandListApiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.getToken = () => {\n      const msg = new Message(getName(MessageEnum.SessionRequestMessage));\n      this.send(msg);\n    };\n\n    this.handleCheckBox = (index, value) => {\n      // console.log(index, value);\n      let arr = Object.assign([], this.state.displayProducts, {\n        [index]: _objectSpread(_objectSpread({}, this.state.displayProducts[index]), {}, {\n          checkboxStatus: value\n        })\n      }); // let link;\n      // this.state.displayProducts.includes();\n      // console.log(\"link\", link);\n\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        displayProducts: arr\n      }));\n    };\n\n    this.handleToggle = (index, value) => {\n      let arr = Object.assign([], this.state.displayProducts, {\n        [index]: _objectSpread(_objectSpread({}, this.state.displayProducts[index]), {}, {\n          activeStatus: value\n        })\n      });\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        displayProducts: arr\n      }));\n    };\n\n    this.onMenuToggle = () => {\n      this.setState({\n        menuCollapsed: !this.state.menuCollapsed\n      });\n    };\n\n    this.handleToggleAddProductModal = () => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        addNewProductModal: !this.state.addNewProductModal\n      }));\n    };\n\n    this.handleToggleAddVariationModal = () => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        addNewVariationModal: !this.state.addNewVariationModal\n      }));\n    };\n\n    this.handleImageUpload = event => {\n      var file = event.target.files[0];\n      const reader = new FileReader();\n      var url = reader.readAsDataURL(file);\n\n      reader.onloadend = e => {\n        this.setState({\n          selectedFile: [reader.result]\n        });\n      };\n\n      console.log(url);\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.handleOnDrop = file => {\n      this.setState({\n        acceptedFiles: this.state.acceptedFiles.concat(file)\n      });\n    };\n\n    this.receive = this.receive.bind(this); // Customizable Area Start\n\n    this.subScribedMessages = [getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.SessionSaveMessage), getName(MessageEnum.SessionResponseMessage)];\n    this.state = {\n      allCheckboxStatus: true,\n      arrayHolder: [],\n      menuCollapsed: false,\n      acceptedFiles: [],\n      userType: configJSON.subscriber,\n      token: \"\",\n      addNewVariationModal: false,\n      snackBar: {\n        show: false\n      },\n      addNewProductModal: false,\n      selectedFile: null,\n      editor: RichTextEditor.createEmptyValue(),\n      displayProducts: \"\",\n      brandData: []\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(this, this.subScribedMessages);\n  } //   async componentDidMount() {\n  //     super.componentDidMount();\n  //     this.getToken();\n  //     if (this.isPlatformWeb() === false) {\n  //       this.props.navigation.addListener(\"willFocus\", () => {\n  //         this.getToken();\n  //       });\n  //     }\n  //   }\n  // Customizable Area Start\n\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _this.getProductListing();\n\n            _this.getBrandListing();\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  receive(from, message) {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var responseJson, apiRequestCallId, errors, errorReponse, _this2$props;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            // Customizable Area Start\n            // runEngine.debugLog(\"Message Recived\", message);\n            if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n              responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n\n              if (responseJson) {\n                apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n\n                if (apiRequestCallId != null) {\n                  if (apiRequestCallId === _this2.getProductListingApiCallId) {\n                    console.log(\"here is your listing response\", responseJson.data);\n\n                    _this2.setState({\n                      displayProducts: responseJson.data\n                    });\n                  }\n\n                  if (apiRequestCallId === _this2.getBrandListingApiCallId) {\n                    console.log(\"here is your brand listing response\", responseJson.data); // this.setState({\n                    //   displayProducts : responseJson.data\n                    // })\n                  }\n                }\n              } else {\n                errors = responseJson.errors;\n                errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                _this2.parseApiCatchErrorResponse(errorReponse);\n\n                if (errors[0].token === 'Invalid token' || 'Token has Expired') {\n                  // @ts-ignore\n                  localStorage.setItem(\"auth\", \"\"); //@ts-ignore\n\n                  (_this2$props = _this2.props) === null || _this2$props === void 0 ? void 0 : _this2$props.history.push(\"/login\");\n                } else if (errors[0].message) {\n                  _this2.openSnackBarHandler('error', errors[0].message);\n                }\n              }\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  } // Open View Details Modal\n  // Customizable Area Start\n  // Customizable Area End\n\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/catalogue/src/CatalogueController.web.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","RichTextEditor","configJSON","require","CatalogueController","constructor","props","getProductApiCallId","getProductListingApiCallId","getBrandListingApiCallId","openSnackBarHandler","type","message","setState","snackBar","show","getProductListing","headers","productApiContentType","token","window","localStorage","getItem","requestMessage","RestAPIRequestMessage","messageId","console","log","addData","RestAPIResponceEndPointMessage","productListApiEndPoint","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","apiMethodTypeGet","sendMessage","id","getBrandListing","brandListApiEndPoint","getToken","msg","SessionRequestMessage","send","handleCheckBox","index","value","arr","Object","assign","state","displayProducts","checkboxStatus","handleToggle","activeStatus","onMenuToggle","menuCollapsed","handleToggleAddProductModal","addNewProductModal","handleToggleAddVariationModal","addNewVariationModal","handleImageUpload","event","file","target","files","reader","FileReader","url","readAsDataURL","onloadend","e","selectedFile","result","handleOnDrop","acceptedFiles","concat","receive","bind","subScribedMessages","RestAPIResponceMessage","SessionSaveMessage","SessionResponseMessage","allCheckboxStatus","arrayHolder","userType","subscriber","editor","createEmptyValue","brandData","attachBuildingBlock","componentDidMount","from","responseJson","getData","RestAPIResponceSuccessMessage","apiRequestCallId","RestAPIResponceDataMessage","data","errors","errorReponse","RestAPIResponceErrorMessage","parseApiCatchErrorResponse","setItem","history","push"],"mappings":"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","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName,\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport RichTextEditor from \"react-rte\";\n\n// Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  arrayHolder: any;\n  menuCollapsed: boolean;\n  userType: string;\n  token: string;\n  displayProducts: any;\n  allCheckboxStatus: any;\n  addNewProductModal: any;\n  addNewVariationModal: any;\n  acceptedFiles: any;\n  selectedFile: any;\n  snackBar: {\n    show: boolean;\n    message?: string;\n    type?: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n  };\n  editor: any;\n  brandData:any\n  // Customizable Area End\n}\n\ninterface SS {\n  id: any;\n}\n\nexport default class CatalogueController extends BlockComponent<Props, S, SS> {\n  getProductApiCallId: any;\n  getProductListingApiCallId: any;\n  getBrandListingApiCallId: any;\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.SessionSaveMessage),\n      getName(MessageEnum.SessionResponseMessage),\n    ];\n\n    this.state = {\n      allCheckboxStatus: true,\n      arrayHolder: [],\n      menuCollapsed: false,\n      acceptedFiles: [],\n      userType: configJSON.subscriber,\n      token: \"\",\n      addNewVariationModal: false,\n      snackBar: {\n        show: false,\n      },\n      addNewProductModal: false,\n      selectedFile: null,\n      editor: RichTextEditor.createEmptyValue(),\n      displayProducts :\"\",\n      brandData:[]\n    };\n    // Customizable Area End\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n  //   async componentDidMount() {\n  //     super.componentDidMount();\n  //     this.getToken();\n  //     if (this.isPlatformWeb() === false) {\n  //       this.props.navigation.addListener(\"willFocus\", () => {\n  //         this.getToken();\n  //       });\n  //     }\n  //   }\n\n  // Customizable Area Start\n\n  async componentDidMount() {\n    this.getProductListing();\n    this.getBrandListing()\n  }\n\n  async receive(from: string, message: Message) {\n    // Customizable Area Start\n    // runEngine.debugLog(\"Message Recived\", message);\n\n    if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n\n      if (responseJson) {\n        const apiRequestCallId = message.getData(\n          getName(MessageEnum.RestAPIResponceDataMessage)\n        );\n\n        if (apiRequestCallId != null) {\n          if (apiRequestCallId === this.getProductListingApiCallId) {\n            console.log(\"here is your listing response\", responseJson.data);\n            this.setState({\n              displayProducts : responseJson.data\n            })\n          }\n          if (apiRequestCallId === this.getBrandListingApiCallId) {\n            console.log(\"here is your brand listing response\", responseJson.data);\n            // this.setState({\n            //   displayProducts : responseJson.data\n            // })\n          }\n        }\n      } \n      \n      else {\n        const errors = responseJson.errors;\n        var errorReponse = message.getData(\n          getName(MessageEnum.RestAPIResponceErrorMessage)\n        );\n        this.parseApiCatchErrorResponse(errorReponse);\n\n         if(errors[0].token === 'Invalid token' || 'Token has Expired') {\n           // @ts-ignore\n          localStorage.setItem(\"auth\", \"\");\n          //@ts-ignore\n          this.props?.history.push(\"/login\");\n        } else if(errors[0].message) {\n          this.openSnackBarHandler('error', errors[0].message);\n        } \n      }\n    }\n  }\n\n  // Open View Details Modal\n  openSnackBarHandler = (\n    type: \"success\" | \"info\" | \"warning\" | \"error\" | undefined,\n    message: string\n  ): void => {\n    this.setState({\n      snackBar: {\n        show: true,\n        message: message,\n        type,\n      },\n    });\n  };\n\n  // Handler Product Listing\n  getProductListing = (): boolean => {\n    const headers = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: window.localStorage.getItem(\"auth\"),\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.getProductListingApiCallId = requestMessage.messageId;\n    console.log(\n      \"this.getProductListingApiCallId\",\n      this.getProductListingApiCallId\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.productListApiEndPoint\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  ///getBrands api\n\n  getBrandListing = (): boolean => {\n    const headers = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: window.localStorage.getItem(\"auth\"),\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.getBrandListingApiCallId = requestMessage.messageId;\n    console.log(\n      \"this.getProductListingApiCallId\",\n      this.getProductListingApiCallId\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.brandListApiEndPoint\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  getToken = () => {\n    const msg: Message = new Message(\n      getName(MessageEnum.SessionRequestMessage)\n    );\n    this.send(msg);\n  };\n\n  handleCheckBox = (index: any, value: any) => {\n    // console.log(index, value);\n    let arr = Object.assign([], this.state.displayProducts, {\n      [index]: {\n        ...this.state.displayProducts[index],\n        checkboxStatus: value,\n      },\n    });\n\n    // let link;\n    // this.state.displayProducts.includes();\n    // console.log(\"link\", link);\n    this.setState({\n      ...this.state,\n      displayProducts: arr,\n    });\n  };\n\n  handleToggle = (index: any, value: any) => {\n    let arr = Object.assign([], this.state.displayProducts, {\n      [index]: {\n        ...this.state.displayProducts[index],\n        activeStatus: value,\n      },\n    });\n\n    this.setState({\n      ...this.state,\n      displayProducts: arr,\n    });\n  };\n\n  onMenuToggle = () => {\n    this.setState({\n      menuCollapsed: !this.state.menuCollapsed,\n    });\n  };\n\n  handleToggleAddProductModal = () => {\n    this.setState({\n      ...this.state,\n      addNewProductModal: !this.state.addNewProductModal,\n    });\n  };\n\n  handleToggleAddVariationModal = () => {\n    this.setState({\n      ...this.state,\n      addNewVariationModal: !this.state.addNewVariationModal,\n    });\n  };\n\n  handleImageUpload = (event: any) => {\n    var file = event.target.files[0];\n    const reader = new FileReader();\n    var url = reader.readAsDataURL(file);\n\n    reader.onloadend = (e: any) => {\n      this.setState({\n        selectedFile: [reader.result],\n      });\n    };\n    console.log(url);\n\n    this.setState({\n      selectedFile: event.target.files[0],\n    });\n  };\n\n  handleOnDrop = (file: any) => {\n    this.setState({\n      acceptedFiles: this.state.acceptedFiles.concat(file),\n    });\n  };\n  // Customizable Area Start\n  // Customizable Area End\n}\n"]},"metadata":{},"sourceType":"module"}