{"ast":null,"code":"var _jsxFileName = \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/forgot-password/src/ForgotPassword.tsx\";\nimport React from \"react\"; //Customizable Area Start\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Formik } from \"formik\";\nimport { Input } from \"react-native-elements\";\nimport * as Yup from \"yup\";\nimport CountryCodeSelector from \"../../country-code-selector/src/CountryCodeSelector\";\nimport ForgotPasswordController from \"./ForgotPasswordController\"; //Customizable Area End\n\nexport default class ForgotPassword extends ForgotPasswordController {\n  constructor(props) {\n    super(props); //Customizable Area Start\n    //Customizable Area End\n  }\n\n  render() {\n    const navigation = this.props.navigation;\n    return /*#__PURE__*/React.createElement(KeyboardAvoidingView, {\n      behavior: this.isPlatformiOS() ? \"padding\" : undefined,\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ScrollView, {\n      keyboardShouldPersistTaps: \"always\",\n      style: this.isPlatformWeb() ? styles.containerWeb : styles.containerMobile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n      onPress: () => this.hideKeyboard(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: styles.headline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: styles.titleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, this.labelTextIsAccountRecovery), this.state.accountStatus === \"ChooseAccountType\" ? /*#__PURE__*/React.createElement(Text, {\n      style: styles.stepText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, this.secondLabelText) : null, this.state.accountStatus === \"EnterEmail\" ? /*#__PURE__*/React.createElement(Text, {\n      style: styles.stepText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, this.thirdLabelText) : null, this.state.accountStatus === \"EnterEmailOTP\" ? /*#__PURE__*/React.createElement(Text, {\n      style: styles.stepText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, this.forthLabelText) : null, this.state.accountStatus === \"EnterEmailOTP\" ? /*#__PURE__*/React.createElement(Text, {\n      style: styles.emailText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, this.state.emailValue) : null, this.state.accountStatus === \"EnterPhone\" ? /*#__PURE__*/React.createElement(Text, {\n      style: styles.stepText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, this.fifthLabelText) : null, this.state.accountStatus === \"EnterPhoneOTP\" ? /*#__PURE__*/React.createElement(Text, {\n      style: styles.stepText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, this.sixthLabelText) : null, this.state.accountStatus === \"EnterPhoneOTP\" ? /*#__PURE__*/React.createElement(Text, {\n      style: styles.emailText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, this.state.phoneValue) : null), this.state.accountStatus === \"EnterEmail\" ? /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        accountType: \"email_account\",\n        email: \"\"\n      },\n      validationSchema: Yup.object().shape(this.state.emailSchema),\n      validateOnMount: true,\n      validateOnChange: true,\n      onSubmit: (values, actions) => {\n        this.goToOtpAfterEmailValidation(values);\n        actions.setSubmitting(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, ({\n      handleChange,\n      handleSubmit,\n      errors,\n      setFieldTouched,\n      touched\n    }) => /*#__PURE__*/React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: this.isPlatformWeb() ? styles.webInput : styles.mobileInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      testID: \"txtInputEmail\",\n      autoCompleteType: this.firstInputAutoCompleteType,\n      keyboardType: this.firstInputKeyboardStyle,\n      inputContainerStyle: this.isPlatformWeb() ? styles.webInput : styles.noBorder,\n      placeholder: this.firstInputPlaceholder,\n      onChangeText: handleChange(\"email\"),\n      onBlur: () => setFieldTouched(\"email\"),\n      errorStyle: {\n        color: this.firstInputErrorColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }), touched.email && errors.email ? /*#__PURE__*/React.createElement(Text, {\n      style: styles.errorStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 27\n      }\n    }, errors.email) : null), /*#__PURE__*/React.createElement(View, {\n      style: {\n        zIndex: -1,\n        padding: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      testID: \"btnGetOtpForEmailButton\",\n      title: this.buttonTextIsNext,\n      color: this.buttonColorForNextButton,\n      onPress: () => handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    })))) : null, this.state.accountStatus === \"EnterPhone\" ? /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        countryCode: \"\",\n        phone: \"\"\n      },\n      validationSchema: Yup.object().shape(this.state.phoneSchema),\n      validateOnMount: true,\n      validateOnChange: true,\n      onSubmit: (values, actions) => {\n        this.goToOtpAfterPhoneValidation(values);\n        actions.setSubmitting(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, ({\n      handleChange,\n      handleSubmit,\n      errors,\n      setFieldTouched,\n      touched\n    }) => /*#__PURE__*/React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: this.isPlatformWeb() ? styles.bgRectWeb : styles.bgRectBorder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CountryCodeSelector, {\n      style: {},\n      navigation: this.isPlatformWeb() ? null : navigation,\n      id: \"CountryCodeSelector\",\n      placeHolder: this.countryCodeSelectorPlaceholder,\n      disable: false,\n      value: this.state.countryCodeSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      style: this.isPlatformWeb() ? styles.webInput : styles.mobileInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      testID: \"txtInputPhoneNumber\",\n      autoCompleteType: this.secondInputAutoCompleteType,\n      keyboardType: this.secondInputKeyboardType,\n      inputContainerStyle: this.isPlatformWeb() ? styles.webInput : styles.noBorder,\n      placeholder: this.secondInputPlaceholder,\n      onChangeText: handleChange(\"phone\"),\n      onBlur: () => setFieldTouched(\"phone\"),\n      errorStyle: {\n        color: this.secondInputErrorColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }), this.isPlatformWeb() && touched.phone && errors.phone ? /*#__PURE__*/React.createElement(Text, {\n      style: styles.errorStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 27\n      }\n    }, errors.phone) : null), /*#__PURE__*/React.createElement(View, {\n      style: {\n        zIndex: -1,\n        padding: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      testID: \"btnOtpForPhoneNumberButton\",\n      title: this.buttonTextIsNext,\n      color: this.buttonColorForNextButton,\n      onPress: () => handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    })))) : null, this.state.accountStatus === \"EnterPhoneOTP\" || this.state.accountStatus === \"EnterEmailOTP\" ? /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        otpCode: \"\"\n      },\n      validationSchema: Yup.object().shape(this.state.otpSchema),\n      validateOnMount: true,\n      validateOnChange: true,\n      onSubmit: (values, actions) => {\n        this.goToChangePasswordAfterOtp(values);\n        actions.setSubmitting(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, ({\n      handleChange,\n      handleSubmit,\n      errors,\n      setFieldTouched,\n      touched\n    }) => /*#__PURE__*/React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: this.isPlatformWeb() ? styles.webInput : styles.mobileInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      testID: \"txtInputOtpCode\",\n      inputContainerStyle: this.isPlatformWeb() ? styles.webInput : styles.noBorder,\n      placeholder: this.thirdInputPlaceholder,\n      onChangeText: handleChange(\"otpCode\"),\n      onBlur: () => setFieldTouched(\"otpCode\"),\n      errorStyle: {\n        color: this.thirdInputErrorColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }\n    }), this.isPlatformWeb() && touched.otpCode && errors.otpCode ? /*#__PURE__*/React.createElement(Text, {\n      style: styles.errorStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 27\n      }\n    }, errors.otpCode) : null), /*#__PURE__*/React.createElement(View, {\n      style: {\n        zIndex: -1,\n        padding: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      testID: \"handleSubmitButtonForOtpCode\",\n      title: this.buttonTextIsNext,\n      color: this.buttonColorForNextButton,\n      onPress: () => handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    })))) : null, this.state.accountStatus === \"ChooseAccountType\" ? /*#__PURE__*/React.createElement(View, {\n      style: {\n        zIndex: -1,\n        padding: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      testID: \"startForgotPasswordButtonForForgotPasswordSMS\",\n      title: this.buttonTitleIsSMSPhoneAccount,\n      color: this.buttonColorForNextButton,\n      onPress: () => this.startForgotPassword(\"sms\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(View, {\n      style: {\n        zIndex: -1,\n        padding: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      testID: \"startForgotPasswordButtonForForgotEmail\",\n      title: this.buttonTitleIsEmailAccount,\n      color: this.buttonColorForNextButton,\n      onPress: () => this.startForgotPassword(\"email\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }\n    })) : null))));\n  }\n\n} // Customizable Area Start\n\nconst styles = StyleSheet.create({\n  containerMobile: {\n    flex: 1,\n    padding: 16,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    maxWidth: 650,\n    backgroundColor: \"#fff\"\n  },\n  containerWeb: {\n    padding: 16,\n    width: \"50%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    maxWidth: 650\n  },\n  countryCodeSelector: {\n    flex: 3,\n    marginTop: 20,\n    textAlign: \"left\",\n    textAlignVertical: \"center\"\n  },\n  button: {\n    marginTop: 16,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"80%\",\n    zIndex: -1\n  },\n  flexContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-start\",\n    width: \"100%\"\n  },\n  headline: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\"\n  },\n  webInput: {\n    marginTop: 20,\n    width: \"100%\",\n    zIndex: -1\n  },\n  inputAfterCountryCode: {\n    width: \"100%\",\n    zIndex: -1\n  },\n  mobileInput: {\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n    fontSize: 16,\n    textAlign: \"left\",\n    backgroundColor: \"#00000000\",\n    marginTop: 20,\n    borderWidth: 1,\n    borderColor: \"#767676\",\n    borderRadius: 2,\n    includeFontPadding: true\n  },\n  codeInput: {\n    marginTop: 20,\n    width: \"30%\"\n  },\n  phoneInput: {\n    flex: 3,\n    marginTop: 20\n  },\n  noBorder: {\n    borderBottomWidth: 0\n  },\n  titleText: {\n    fontSize: 32,\n    color: \"#6200EE\",\n    fontWeight: \"bold\"\n  },\n  stepText: {\n    marginBottom: 32,\n    fontSize: 16,\n    textAlign: \"left\",\n    marginVertical: 8\n  },\n  emailText: {\n    marginBottom: 16,\n    fontSize: 16,\n    textAlign: \"left\",\n    marginVertical: 8,\n    fontWeight: \"bold\"\n  },\n  bgRectBorder: {\n    borderWidth: 1,\n    borderColor: \"#767676\",\n    borderRadius: 2,\n    marginTop: 20,\n    minHeight: 40,\n    fontSize: 18,\n    textAlignVertical: \"center\",\n    padding: 10\n  },\n  bgRectWeb: {\n    marginTop: 40\n  },\n  errorStyle: {\n    color: \"red\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/forgot-password/src/ForgotPassword.tsx"],"names":["React","Formik","Input","Yup","CountryCodeSelector","ForgotPasswordController","ForgotPassword","constructor","props","render","navigation","isPlatformiOS","undefined","flex","isPlatformWeb","styles","containerWeb","containerMobile","hideKeyboard","headline","titleText","labelTextIsAccountRecovery","state","accountStatus","stepText","secondLabelText","thirdLabelText","forthLabelText","emailText","emailValue","fifthLabelText","sixthLabelText","phoneValue","accountType","email","object","shape","emailSchema","values","actions","goToOtpAfterEmailValidation","setSubmitting","handleChange","handleSubmit","errors","setFieldTouched","touched","webInput","mobileInput","firstInputAutoCompleteType","firstInputKeyboardStyle","noBorder","firstInputPlaceholder","color","firstInputErrorColor","errorStyle","zIndex","padding","buttonTextIsNext","buttonColorForNextButton","countryCode","phone","phoneSchema","goToOtpAfterPhoneValidation","bgRectWeb","bgRectBorder","countryCodeSelectorPlaceholder","countryCodeSelected","secondInputAutoCompleteType","secondInputKeyboardType","secondInputPlaceholder","secondInputErrorColor","otpCode","otpSchema","goToChangePasswordAfterOtp","thirdInputPlaceholder","thirdInputErrorColor","buttonTitleIsSMSPhoneAccount","startForgotPassword","buttonTitleIsEmailAccount","StyleSheet","create","marginLeft","marginRight","width","maxWidth","backgroundColor","countryCodeSelector","marginTop","textAlign","textAlignVertical","button","justifyContent","alignItems","flexContainer","flexDirection","flexWrap","inputAfterCountryCode","fontSize","borderWidth","borderColor","borderRadius","includeFontPadding","codeInput","phoneInput","borderBottomWidth","fontWeight","marginBottom","marginVertical","minHeight"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n//Customizable Area Start\nimport {\n  View,\n  Button,\n  StyleSheet,\n  ScrollView,\n  Text,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedback\n} from \"react-native\";\n\nimport { Formik } from \"formik\";\nimport { Input } from \"react-native-elements\";\nimport * as Yup from \"yup\";\nimport CountryCodeSelector from \"../../country-code-selector/src/CountryCodeSelector\";\nimport ForgotPasswordController, { Props } from \"./ForgotPasswordController\";\n//Customizable Area End\n\nexport default class ForgotPassword extends ForgotPasswordController {\n  constructor(props: Props) {\n    super(props);\n    //Customizable Area Start\n    //Customizable Area End\n  }\n\n  render() {\n    const { navigation } = this.props;\n\n    return (\n      <KeyboardAvoidingView\n        behavior={this.isPlatformiOS() ? \"padding\" : undefined}\n        style={{ flex: 1 }}\n      >\n        <ScrollView\n          keyboardShouldPersistTaps=\"always\"\n          style={\n            this.isPlatformWeb() ? styles.containerWeb : styles.containerMobile\n          }\n        >\n          <TouchableWithoutFeedback onPress={() => this.hideKeyboard()}>\n            {/* Customizable Area Start */}\n            <View>\n              {/* headline */}\n              <View style={styles.headline}>\n                <Text style={styles.titleText}>\n                  {this.labelTextIsAccountRecovery}\n                  {/* ----------------------------------------------------CHOOSE ACCOUNT TEXT---------------------------------------------------------------------- */}\n                </Text>\n                {this.state.accountStatus === \"ChooseAccountType\" ? (\n                  <Text style={styles.stepText}>{this.secondLabelText}</Text>\n                ) : null}\n\n                {/* ---------------------------------------------------------EMAIL TEXT-------------------------------------------------------------------------- */}\n\n                {/* EnterEmail status */}\n                {this.state.accountStatus === \"EnterEmail\" ? (\n                  <Text style={styles.stepText}>{this.thirdLabelText}</Text>\n                ) : null}\n\n                {/* EnterOTP status */}\n                {this.state.accountStatus === \"EnterEmailOTP\" ? (\n                  <Text style={styles.stepText}>{this.forthLabelText}</Text>\n                ) : null}\n                {/* EnterOTP status */}\n                {this.state.accountStatus === \"EnterEmailOTP\" ? (\n                  <Text style={styles.emailText}>{this.state.emailValue}</Text>\n                ) : null}\n\n                {/* ---------------------------------------------------------PHONE TEXT----------------------------------------------------------------------- */}\n\n                {/* EnterEmail status */}\n                {this.state.accountStatus === \"EnterPhone\" ? (\n                  <Text style={styles.stepText}>{this.fifthLabelText}</Text>\n                ) : null}\n\n                {/* EnterOTP status */}\n                {this.state.accountStatus === \"EnterPhoneOTP\" ? (\n                  <Text style={styles.stepText}>{this.sixthLabelText}</Text>\n                ) : null}\n                {/* EnterOTP status */}\n                {this.state.accountStatus === \"EnterPhoneOTP\" ? (\n                  <Text style={styles.emailText}>{this.state.phoneValue}</Text>\n                ) : null}\n              </View>\n\n              {/* ---------------------------------------------------------ENTER EMAIL---------------------------------------------------------------------- */}\n\n              {this.state.accountStatus === \"EnterEmail\" ? (\n                <Formik\n                  initialValues={{ accountType: \"email_account\", email: \"\" }}\n                  validationSchema={Yup.object().shape(this.state.emailSchema)}\n                  validateOnMount={true}\n                  validateOnChange={true}\n                  onSubmit={(values, actions) => {\n                    this.goToOtpAfterEmailValidation(values);\n                    actions.setSubmitting(false);\n                  }}\n                >\n                  {({\n                    handleChange,\n                    handleSubmit,\n                    errors,\n                    setFieldTouched,\n                    touched\n                  }) => (\n                    <View>\n                      <View\n                        style={\n                          this.isPlatformWeb()\n                            ? styles.webInput\n                            : styles.mobileInput\n                        }\n                      >\n                        <Input\n                          testID={\"txtInputEmail\"}\n                          autoCompleteType={this.firstInputAutoCompleteType}\n                          keyboardType={this.firstInputKeyboardStyle}\n                          inputContainerStyle={\n                            this.isPlatformWeb()\n                              ? styles.webInput\n                              : styles.noBorder\n                          }\n                          placeholder={this.firstInputPlaceholder}\n                          onChangeText={handleChange(\"email\")}\n                          onBlur={() => setFieldTouched(\"email\")}\n                          errorStyle={{ color: this.firstInputErrorColor }}\n                        />\n                        {touched.email && errors.email ? (\n                          <Text style={styles.errorStyle}>{errors.email}</Text>\n                        ) : null}\n                      </View>\n\n                      <View style={{ zIndex: -1, padding: 15 }}>\n                        <Button\n                          testID={\"btnGetOtpForEmailButton\"}\n                          title={this.buttonTextIsNext}\n                          color={this.buttonColorForNextButton}\n                          onPress={() => handleSubmit()}\n                        />\n                      </View>\n                    </View>\n                  )}\n                </Formik>\n              ) : null}\n              {/* ---------------------------------------------------------ENTER PHONE #---------------------------------------------------------------------- */}\n\n              {this.state.accountStatus === \"EnterPhone\" ? (\n                <Formik\n                  initialValues={{ countryCode: \"\", phone: \"\" }}\n                  validationSchema={Yup.object().shape(this.state.phoneSchema)}\n                  validateOnMount={true}\n                  validateOnChange={true}\n                  onSubmit={(values, actions) => {\n                    this.goToOtpAfterPhoneValidation(values);\n                    actions.setSubmitting(false);\n                  }}\n                >\n                  {({\n                    handleChange,\n                    handleSubmit,\n                    errors,\n                    setFieldTouched,\n                    touched\n                  }) => (\n                    <View>\n                      <View\n                        style={\n                          this.isPlatformWeb()\n                            ? styles.bgRectWeb\n                            : styles.bgRectBorder\n                        }\n                      >\n                        <CountryCodeSelector\n                          style={{}}\n                          navigation={this.isPlatformWeb() ? null : navigation}\n                          id={\"CountryCodeSelector\"}\n                          placeHolder={this.countryCodeSelectorPlaceholder}\n                          disable={false}\n                          value={this.state.countryCodeSelected}\n                        />\n                      </View>\n\n                      <View\n                        style={\n                          this.isPlatformWeb()\n                            ? styles.webInput\n                            : styles.mobileInput\n                        }\n                      >\n                        <Input\n                          testID={\"txtInputPhoneNumber\"}\n                          autoCompleteType={this.secondInputAutoCompleteType}\n                          keyboardType={this.secondInputKeyboardType}\n                          inputContainerStyle={\n                            this.isPlatformWeb()\n                              ? styles.webInput\n                              : styles.noBorder\n                          }\n                          placeholder={this.secondInputPlaceholder}\n                          onChangeText={handleChange(\"phone\")}\n                          onBlur={() => setFieldTouched(\"phone\")}\n                          errorStyle={{ color: this.secondInputErrorColor }}\n                        />\n                        {this.isPlatformWeb() &&\n                        touched.phone &&\n                        errors.phone ? (\n                          <Text style={styles.errorStyle}>{errors.phone}</Text>\n                        ) : null}\n                      </View>\n\n                      <View style={{ zIndex: -1, padding: 15 }}>\n                        <Button\n                          testID={\"btnOtpForPhoneNumberButton\"}\n                          title={this.buttonTextIsNext}\n                          color={this.buttonColorForNextButton}\n                          onPress={() => handleSubmit()}\n                        />\n                      </View>\n                    </View>\n                  )}\n                </Formik>\n              ) : null}\n              {/* -------------------------------------------------------ENTER OTP-------------------------------------------------------------------- */}\n\n              {this.state.accountStatus === \"EnterPhoneOTP\" ||\n              this.state.accountStatus === \"EnterEmailOTP\" ? (\n                <Formik\n                  initialValues={{ otpCode: \"\" }}\n                  validationSchema={Yup.object().shape(this.state.otpSchema)}\n                  validateOnMount={true}\n                  validateOnChange={true}\n                  onSubmit={(values, actions) => {\n                    this.goToChangePasswordAfterOtp(values);\n                    actions.setSubmitting(false);\n                  }}\n                >\n                  {({\n                    handleChange,\n                    handleSubmit,\n                    errors,\n                    setFieldTouched,\n                    touched\n                  }) => (\n                    <View>\n                      <View\n                        style={\n                          this.isPlatformWeb()\n                            ? styles.webInput\n                            : styles.mobileInput\n                        }\n                      >\n                        <Input\n                          testID={\"txtInputOtpCode\"}\n                          inputContainerStyle={\n                            this.isPlatformWeb()\n                              ? styles.webInput\n                              : styles.noBorder\n                          }\n                          placeholder={this.thirdInputPlaceholder}\n                          onChangeText={handleChange(\"otpCode\")}\n                          onBlur={() => setFieldTouched(\"otpCode\")}\n                          errorStyle={{ color: this.thirdInputErrorColor }}\n                        />\n                        {this.isPlatformWeb() &&\n                        touched.otpCode &&\n                        errors.otpCode ? (\n                          <Text style={styles.errorStyle}>\n                            {errors.otpCode}\n                          </Text>\n                        ) : null}\n                      </View>\n\n                      <View style={{ zIndex: -1, padding: 15 }}>\n                        <Button\n                          testID={\"handleSubmitButtonForOtpCode\"}\n                          title={this.buttonTextIsNext}\n                          color={this.buttonColorForNextButton}\n                          onPress={() => handleSubmit()}\n                        />\n                      </View>\n                    </View>\n                  )}\n                </Formik>\n              ) : null}\n              {/* -----------------------------------------------------CHOOSE ACCOUNT----------------------------------------------------------------------- */}\n\n              {this.state.accountStatus === \"ChooseAccountType\" ? (\n                <View style={{ zIndex: -1, padding: 15 }}>\n                  <Button\n                    testID={\"startForgotPasswordButtonForForgotPasswordSMS\"}\n                    title={this.buttonTitleIsSMSPhoneAccount}\n                    color={this.buttonColorForNextButton}\n                    onPress={() => this.startForgotPassword(\"sms\")}\n                  />\n                  <View style={{ zIndex: -1, padding: 15 }} />\n                  <Button\n                    testID={\"startForgotPasswordButtonForForgotEmail\"}\n                    title={this.buttonTitleIsEmailAccount}\n                    color={this.buttonColorForNextButton}\n                    onPress={() => this.startForgotPassword(\"email\")}\n                  />\n                </View>\n              ) : null}\n            </View>\n            {/* Customizable Area End */}\n          </TouchableWithoutFeedback>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\n// Customizable Area Start\nconst styles = StyleSheet.create({\n  containerMobile: {\n    flex: 1,\n    padding: 16,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    maxWidth: 650,\n    backgroundColor: \"#fff\"\n  },\n  containerWeb: {\n    padding: 16,\n    width: \"50%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    maxWidth: 650\n  },\n  countryCodeSelector: {\n    flex: 3,\n    marginTop: 20,\n    textAlign: \"left\",\n    textAlignVertical: \"center\"\n  },\n  button: {\n    marginTop: 16,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"80%\",\n    zIndex: -1\n  },\n\n  flexContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-start\",\n    width: \"100%\"\n  },\n\n  headline: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\"\n  },\n\n  webInput: {\n    marginTop: 20,\n    width: \"100%\",\n    zIndex: -1\n  },\n\n  inputAfterCountryCode: {\n    width: \"100%\",\n    zIndex: -1\n  },\n\n  mobileInput: {\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n    fontSize: 16,\n    textAlign: \"left\",\n    backgroundColor: \"#00000000\",\n    marginTop: 20,\n    borderWidth: 1,\n    borderColor: \"#767676\",\n    borderRadius: 2,\n    includeFontPadding: true\n  },\n\n  codeInput: {\n    marginTop: 20,\n    width: \"30%\"\n  },\n\n  phoneInput: {\n    flex: 3,\n    marginTop: 20\n  },\n\n  noBorder: {\n    borderBottomWidth: 0\n  },\n\n  titleText: {\n    fontSize: 32,\n    color: \"#6200EE\",\n    fontWeight: \"bold\"\n  },\n\n  stepText: {\n    marginBottom: 32,\n    fontSize: 16,\n    textAlign: \"left\",\n    marginVertical: 8\n  },\n\n  emailText: {\n    marginBottom: 16,\n    fontSize: 16,\n    textAlign: \"left\",\n    marginVertical: 8,\n    fontWeight: \"bold\"\n  },\n\n  bgRectBorder: {\n    borderWidth: 1,\n    borderColor: \"#767676\",\n    borderRadius: 2,\n    marginTop: 20,\n    minHeight: 40,\n    fontSize: 18,\n    textAlignVertical: \"center\",\n    padding: 10\n  },\n\n  bgRectWeb: {\n    marginTop: 40\n  },\n\n  errorStyle: {\n    color: \"red\",\n    textAlign: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}