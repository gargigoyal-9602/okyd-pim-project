{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\"; // Customizable Area Start\n\nimport { imgPasswordInVisible, imgPasswordVisible } from \"./assets\"; // Customizable Area End\n\nexport const configJSON = require(\"./config\");\nexport default class CustomFormBuilderController extends BlockComponent {\n  constructor(props) {\n    super(props);\n    this.txtInputWebProps = {\n      onChangeText: text => {\n        this.setState({\n          txtInputValue: text\n        });\n      },\n      secureTextEntry: false\n    };\n    this.txtInputMobileProps = _objectSpread(_objectSpread({}, this.txtInputWebProps), {}, {\n      autoCompleteType: \"email\",\n      keyboardType: \"email-address\"\n    });\n    this.txtInputProps = this.isPlatformWeb() ? this.txtInputWebProps : this.txtInputMobileProps;\n    this.btnShowHideProps = {\n      onPress: () => {\n        this.setState({\n          enableField: !this.state.enableField\n        });\n        this.txtInputProps.secureTextEntry = !this.state.enableField;\n        this.btnShowHideImageProps.source = this.txtInputProps.secureTextEntry ? imgPasswordVisible : imgPasswordInVisible;\n      }\n    };\n    this.btnShowHideImageProps = {\n      source: this.txtInputProps.secureTextEntry ? imgPasswordVisible : imgPasswordInVisible\n    };\n    this.btnExampleProps = {\n      onPress: () => this.doButtonPressed()\n    };\n    this.receive = this.receive.bind(this); // Customizable Area Start\n\n    this.subScribedMessages = [getName(MessageEnum.AccoutLoginSuccess)];\n    this.state = {\n      txtInputValue: \"\",\n      txtSavedValue: \"A\",\n      enableField: false\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(this, this.subScribedMessages);\n  }\n\n  receive(from, message) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var value;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            // Customizable Area Start\n            runEngine.debugLog(\"Message Recived\", message);\n\n            if (message.id === getName(MessageEnum.AccoutLoginSuccess)) {\n              value = message.getData(getName(MessageEnum.AuthTokenDataMessage));\n\n              _this.showAlert(\"Change Value\", \"From: \" + _this.state.txtSavedValue + \" To: \" + value);\n\n              _this.setState({\n                txtSavedValue: value\n              });\n            } // Customizable Area End\n\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  } // Customizable Area Start\n\n\n  doButtonPressed() {\n    let msg = new Message(getName(MessageEnum.AccoutLoginSuccess));\n    msg.addData(getName(MessageEnum.AuthTokenDataMessage), this.state.txtInputValue);\n    this.send(msg);\n  } // Customizable Area End\n\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/CustomFormBuilder/src/CustomFormBuilderController.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","imgPasswordInVisible","imgPasswordVisible","configJSON","require","CustomFormBuilderController","constructor","props","txtInputWebProps","onChangeText","text","setState","txtInputValue","secureTextEntry","txtInputMobileProps","autoCompleteType","keyboardType","txtInputProps","isPlatformWeb","btnShowHideProps","onPress","enableField","state","btnShowHideImageProps","source","btnExampleProps","doButtonPressed","receive","bind","subScribedMessages","AccoutLoginSuccess","txtSavedValue","attachBuildingBlock","from","message","debugLog","id","value","getData","AuthTokenDataMessage","showAlert","msg","addData","send"],"mappings":"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","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n\n// Customizable Area Start\nimport { imgPasswordInVisible, imgPasswordVisible } from \"./assets\";\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  txtInputValue: string;\n  txtSavedValue: string;\n  enableField: boolean;\n  // Customizable Area End\n}\n\ninterface SS {\n  id: any;\n}\n\nexport default class CustomFormBuilderController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [getName(MessageEnum.AccoutLoginSuccess)];\n\n    this.state = {\n      txtInputValue: \"\",\n      txtSavedValue: \"A\",\n      enableField: false\n    };\n    // Customizable Area End\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n\n  async receive(from: string, message: Message) {\n    // Customizable Area Start\n    runEngine.debugLog(\"Message Recived\", message);\n\n    if (message.id === getName(MessageEnum.AccoutLoginSuccess)) {\n      let value = message.getData(getName(MessageEnum.AuthTokenDataMessage));\n\n      this.showAlert(\n        \"Change Value\",\n        \"From: \" + this.state.txtSavedValue + \" To: \" + value\n      );\n\n      this.setState({ txtSavedValue: value });\n    }\n    // Customizable Area End\n  }\n\n  // Customizable Area Start\n  txtInputWebProps = {\n    onChangeText: (text: string) => {\n      this.setState({ txtInputValue: text });\n    },\n    secureTextEntry: false\n  };\n\n  txtInputMobileProps = {\n    ...this.txtInputWebProps,\n    autoCompleteType: \"email\",\n    keyboardType: \"email-address\"\n  };\n\n  txtInputProps = this.isPlatformWeb()\n    ? this.txtInputWebProps\n    : this.txtInputMobileProps;\n\n  btnShowHideProps = {\n    onPress: () => {\n      this.setState({ enableField: !this.state.enableField });\n      this.txtInputProps.secureTextEntry = !this.state.enableField;\n      this.btnShowHideImageProps.source = this.txtInputProps.secureTextEntry\n        ? imgPasswordVisible\n        : imgPasswordInVisible;\n    }\n  };\n\n  btnShowHideImageProps = {\n    source: this.txtInputProps.secureTextEntry\n      ? imgPasswordVisible\n      : imgPasswordInVisible\n  };\n\n  btnExampleProps = {\n    onPress: () => this.doButtonPressed()\n  };\n\n  doButtonPressed() {\n    let msg = new Message(getName(MessageEnum.AccoutLoginSuccess));\n    msg.addData(\n      getName(MessageEnum.AuthTokenDataMessage),\n      this.state.txtInputValue\n    );\n    this.send(msg);\n  }\n  // Customizable Area End\n}\n"]},"metadata":{},"sourceType":"module"}