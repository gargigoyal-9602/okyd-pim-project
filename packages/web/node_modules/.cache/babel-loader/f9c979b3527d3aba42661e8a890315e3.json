{"ast":null,"code":"// Do not change anything in the protected area. Doing so will be detected and your commit will be rejected.\n// Protected Area Start\nimport { Channel } from './Channel';\n\nclass RunEngine {\n  constructor() {\n    this.channels = void 0;\n\n    this.debugLog = (tag, data = null) => {\n      console.log('=====================Debug Log Start======================');\n\n      if (data !== undefined) {\n        console.log(tag + '====>' + JSON.stringify(data));\n      }\n\n      console.log('=====================Debug Log End======================');\n      console.log('        ');\n    };\n\n    this.channels = new Map();\n    this.addChannel = this.addChannel.bind(this);\n    this.attachBuildingBlock = this.attachBuildingBlock.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.unSubscribeFromMessages = this.unSubscribeFromMessages.bind(this);\n  }\n\n  addChannel(topic) {\n    this.channels.set(topic, new Channel(topic));\n  }\n\n  unSubscribeFromMessages(block, subscribedMessages) {\n    if (subscribedMessages) {\n      subscribedMessages.forEach(topic => {\n        const channel = this.channels.get(topic);\n\n        if (channel) {\n          channel.unsub(block);\n        }\n      });\n    }\n  }\n\n  attachBuildingBlock(block, subscribedMessages) {\n    subscribedMessages.forEach(topic => {\n      if (!this.channels.has(topic)) {\n        this.addChannel(topic);\n      }\n\n      const channel = this.channels.get(topic);\n\n      if (channel) {\n        channel.sub(block);\n      }\n    });\n  }\n\n  sendMessage(from, message) {\n    if (message && message.id) {\n      const channel = this.channels.get(message.id);\n\n      if (channel) {\n        channel.subscribers.forEach(block => {\n          block.receive(from, message);\n        });\n      }\n    }\n  }\n\n}\n\nconst runEngine = new RunEngine();\nexport { runEngine }; // Protected Area End","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/framework/src/RunEngine.tsx"],"names":["Channel","RunEngine","constructor","channels","debugLog","tag","data","console","log","undefined","JSON","stringify","Map","addChannel","bind","attachBuildingBlock","sendMessage","unSubscribeFromMessages","topic","set","block","subscribedMessages","forEach","channel","get","unsub","has","sub","from","message","id","subscribers","receive","runEngine"],"mappings":"AAAA;AAEA;AAEA,SAASA,OAAT,QAAwB,WAAxB;;AAIA,MAAMC,SAAN,CAAgB;AAYdC,EAAAA,WAAW,GAAG;AAAA,SAXdC,QAWc;;AAAA,SATdC,QASc,GATH,CAACC,GAAD,EAAWC,IAAS,GAAG,IAAvB,KAAgC;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;;AACA,UAAIF,IAAI,KAAKG,SAAb,EAAwB;AACtBF,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,GAAG,OAAN,GAAgBK,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA5B;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAEa;;AACZ,SAAKL,QAAL,GAAgB,IAAIS,GAAJ,EAAhB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BH,IAA7B,CAAkC,IAAlC,CAA/B;AACD;;AAEDD,EAAAA,UAAU,CAACK,KAAD,EAAsB;AAC9B,SAAKf,QAAL,CAAcgB,GAAd,CAAkBD,KAAlB,EAAyB,IAAIlB,OAAJ,CAAYkB,KAAZ,CAAzB;AACD;;AAEDD,EAAAA,uBAAuB,CAACG,KAAD,EAAgBC,kBAAhB,EAAoD;AACzE,QAAIA,kBAAJ,EAAwB;AACtBA,MAAAA,kBAAkB,CAACC,OAAnB,CAA2BJ,KAAK,IAAI;AAClC,cAAMK,OAAO,GAAG,KAAKpB,QAAL,CAAcqB,GAAd,CAAkBN,KAAlB,CAAhB;;AACA,YAAIK,OAAJ,EAAa;AACXA,UAAAA,OAAO,CAACE,KAAR,CAAcL,KAAd;AACD;AACF,OALD;AAMD;AACF;;AAEDL,EAAAA,mBAAmB,CAACK,KAAD,EAAgBC,kBAAhB,EAAoD;AACrEA,IAAAA,kBAAkB,CAACC,OAAnB,CAA2BJ,KAAK,IAAI;AAClC,UAAI,CAAC,KAAKf,QAAL,CAAcuB,GAAd,CAAkBR,KAAlB,CAAL,EAA+B;AAC7B,aAAKL,UAAL,CAAgBK,KAAhB;AACD;;AAED,YAAMK,OAAO,GAAG,KAAKpB,QAAL,CAAcqB,GAAd,CAAkBN,KAAlB,CAAhB;;AACA,UAAIK,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACI,GAAR,CAAYP,KAAZ;AACD;AACF,KATD;AAUD;;AAEDJ,EAAAA,WAAW,CAACY,IAAD,EAAeC,OAAf,EAAuC;AAChD,QAAIA,OAAO,IAAIA,OAAO,CAACC,EAAvB,EAA2B;AACzB,YAAMP,OAAO,GAAG,KAAKpB,QAAL,CAAcqB,GAAd,CAAkBK,OAAO,CAACC,EAA1B,CAAhB;;AACA,UAAIP,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACQ,WAAR,CAAoBT,OAApB,CAA4BF,KAAK,IAAI;AACnCA,UAAAA,KAAK,CAACY,OAAN,CAAcJ,IAAd,EAAoBC,OAApB;AACD,SAFD;AAGD;AACF;AACF;;AAzDa;;AA4DhB,MAAMI,SAAS,GAAG,IAAIhC,SAAJ,EAAlB;AACA,SAASgC,SAAT,G,CAEA","sourcesContent":["// Do not change anything in the protected area. Doing so will be detected and your commit will be rejected.\n\n// Protected Area Start\n\nimport { Channel } from './Channel';\nimport { IBlock } from './IBlock';\nimport { Message } from './Message';\n\nclass RunEngine {\n  channels: Map<string, Channel>;\n\n  debugLog = (tag: any, data: any = null) => {\n    console.log('=====================Debug Log Start======================');\n    if (data !== undefined) {\n      console.log(tag + '====>' + JSON.stringify(data));\n    }\n    console.log('=====================Debug Log End======================');\n    console.log('        ');\n  };\n\n  constructor() {\n    this.channels = new Map<string, Channel>();\n    this.addChannel = this.addChannel.bind(this);\n    this.attachBuildingBlock = this.attachBuildingBlock.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.unSubscribeFromMessages = this.unSubscribeFromMessages.bind(this);\n  }\n\n  addChannel(topic: string): void {\n    this.channels.set(topic, new Channel(topic));\n  }\n\n  unSubscribeFromMessages(block: IBlock, subscribedMessages: string[]): void {\n    if (subscribedMessages) {\n      subscribedMessages.forEach(topic => {\n        const channel = this.channels.get(topic);\n        if (channel) {\n          channel.unsub(block);\n        }\n      });\n    }\n  }\n\n  attachBuildingBlock(block: IBlock, subscribedMessages: string[]): void {\n    subscribedMessages.forEach(topic => {\n      if (!this.channels.has(topic)) {\n        this.addChannel(topic);\n      }\n\n      const channel = this.channels.get(topic);\n      if (channel) {\n        channel.sub(block);\n      }\n    });\n  }\n\n  sendMessage(from: string, message: Message): void {\n    if (message && message.id) {\n      const channel = this.channels.get(message.id);\n      if (channel) {\n        channel.subscribers.forEach(block => {\n          block.receive(from, message);\n        });\n      }\n    }\n  }\n}\n\nconst runEngine = new RunEngine();\nexport { runEngine };\n\n// Protected Area End\n"]},"metadata":{},"sourceType":"module"}