{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport RichTextEditor from \"react-rte\";\nimport { orderBy } from \"lodash\";\nimport * as Yup from \"yup\"; // Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\nexport default class CatalogueController extends BlockComponent {\n  constructor(props) {\n    super(props);\n    this.getProductApiCallId = void 0;\n    this.getProductListingApiCallId = void 0;\n    this.getBrandListingApiCallId = void 0;\n    this.getCategoryListingApiCallId = void 0;\n\n    this.openSnackBarHandler = (type, message) => {\n      console.log(\"type,message\", type, message);\n      this.setState({\n        snackBar: {\n          show: true,\n          message: message,\n          type\n        }\n      });\n    };\n\n    this.closeSnackBarHandler = () => {\n      this.setState({\n        snackBar: {\n          show: false,\n          message: this.state.snackBar.message,\n          type: this.state.snackBar.type\n        }\n      });\n    };\n\n    this.getProductListing = () => {\n      const headers = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: window.localStorage.getItem(\"auth\")\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getProductListingApiCallId = requestMessage.messageId;\n      console.log(\"this.getProductListingApiCallId\", this.getProductListingApiCallId);\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.productListApiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.getBrandListing = () => {\n      const headers = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: window.localStorage.getItem(\"auth\")\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getBrandListingApiCallId = requestMessage.messageId;\n      console.log(\"this.getProductListingApiCallId\", this.getProductListingApiCallId);\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.brandListApiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.getCategoryListing = () => {\n      const headers = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: window.localStorage.getItem(\"auth\")\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getCategoryListingApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.categoryListApiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.getToken = () => {\n      const msg = new Message(getName(MessageEnum.SessionRequestMessage));\n      this.send(msg);\n    };\n\n    this.handleCheckBox = (index, value) => {\n      // console.log(index, value);\n      let arr = Object.assign([], this.state.displayProducts, {\n        [index]: _objectSpread(_objectSpread({}, this.state.displayProducts[index]), {}, {\n          checkboxStatus: value\n        })\n      }); // let link;\n      // this.state.displayProducts.includes();\n      // console.log(\"link\", link);\n\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        displayProducts: arr\n      }));\n    };\n\n    this.handleToggle = (index, value) => {\n      let arr = Object.assign([], this.state.displayProducts, {\n        [index]: _objectSpread(_objectSpread({}, this.state.displayProducts[index]), {}, {\n          activeStatus: value\n        })\n      });\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        displayProducts: arr\n      }));\n    };\n\n    this.onMenuToggle = () => {\n      this.setState({\n        menuCollapsed: !this.state.menuCollapsed\n      });\n    };\n\n    this.handleToggleAddProductModal = () => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        addNewProductModal: !this.state.addNewProductModal\n      }));\n    };\n\n    this.handleToggleAddVariationModal = () => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        addNewVariationModal: !this.state.addNewVariationModal\n      }));\n    };\n\n    this.handleImageUpload = event => {\n      var file = event.target.files[0];\n      const reader = new FileReader();\n      var url = reader.readAsDataURL(file);\n\n      reader.onloadend = e => {\n        this.setState({\n          selectedFile: [reader.result]\n        });\n      };\n\n      console.log(url);\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.handleOnDrop = file => {\n      this.setState({\n        acceptedFiles: this.state.acceptedFiles.concat(file)\n      });\n    };\n\n    this.handleSortingName = () => {\n      this.setState({\n        sortName: this.state.sortName !== 'asc' ? 'asc' : 'desc'\n      });\n      setTimeout(() => {\n        const sortedData = orderBy(this.state.displayProducts, item => item.attributes.name.toLowerCase(), this.state.sortName);\n        this.setState({\n          displayProducts: sortedData\n        });\n      }, 500);\n    };\n\n    this.handleSortingPricing = () => {\n      this.setState({\n        sortPricing: this.state.sortPricing !== 'asc' ? 'asc' : 'desc'\n      });\n      setTimeout(() => {\n        const sortedData = orderBy(this.state.displayProducts, item => item.attributes.price, this.state.sortPricing);\n        this.setState({\n          displayProducts: sortedData\n        });\n      }, 500);\n    };\n\n    this.receive = this.receive.bind(this); // Customizable Area Start\n\n    this.subScribedMessages = [getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.SessionSaveMessage), getName(MessageEnum.SessionResponseMessage)];\n    let AddProductsSchema = {\n      productName: Yup.string().required(configJSON.errorProductName),\n      sku: Yup.string().required(configJSON.errorSku),\n      brand: Yup.string().required(configJSON.errorBrand),\n      category: Yup.string().required(configJSON.errorCategory),\n      status: Yup.string().required(configJSON.errorStatus)\n    };\n    let NewVariationTypeSchema = {\n      variationName: Yup.string().required(configJSON.errorVariationName),\n      variationCode: Yup.string().required(configJSON.errorVariationCode),\n      friends: Yup.string().required('Must have friends') // these constraints are shown if and only if inner constraints are satisfied\n      .min(3, 'Minimum of 3 friends')\n    };\n    this.state = {\n      allCheckboxStatus: true,\n      arrayHolder: [],\n      menuCollapsed: false,\n      acceptedFiles: [],\n      userType: configJSON.subscriber,\n      token: \"\",\n      addNewVariationModal: false,\n      snackBar: {\n        show: false\n      },\n      addNewProductModal: false,\n      selectedFile: null,\n      editor: RichTextEditor.createEmptyValue(),\n      displayProducts: \"\",\n      brandData: [],\n      categoryData: [],\n      sortPricing: null,\n      sortName: null,\n      AddProductsSchema: AddProductsSchema,\n      NewVariationTypeSchema: NewVariationTypeSchema,\n      productName: \"\",\n      sku: \"\",\n      brand: \"\",\n      category: \"\",\n      status: \"\",\n      variationCode: \"\",\n      variationName: \"\",\n      friends: []\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(this, this.subScribedMessages);\n  } //   async componentDidMount() {\n  //     super.componentDidMount();\n  //     this.getToken();\n  //     if (this.isPlatformWeb() === false) {\n  //       this.props.navigation.addListener(\"willFocus\", () => {\n  //         this.getToken();\n  //       });\n  //     }\n  //   }\n  // Customizable Area Start\n\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _this.getProductListing();\n\n            _this.getBrandListing();\n\n            _this.getCategoryListing();\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  receive(from, message) {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var responseJson, apiRequestCallId, brandData, categoryData, errors, errorReponse, _this2$props;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            // Customizable Area Start\n            // runEngine.debugLog(\"Message Recived\", message);\n            if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n              responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n\n              if (responseJson) {\n                apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n\n                if (apiRequestCallId != null) {\n                  if (apiRequestCallId === _this2.getProductListingApiCallId) {\n                    //console.log(\"here is your listing response\", responseJson.data);\n                    _this2.setState({\n                      displayProducts: responseJson.data\n                    });\n\n                    _this2.handleSortingName();\n                  }\n\n                  if (apiRequestCallId === _this2.getBrandListingApiCallId) {\n                    //console.log(\"here is your brand listing response\", responseJson.data);\n                    brandData = [];\n                    responseJson.data.map(category => {\n                      brandData.push({\n                        label: category.attributes.name,\n                        value: category.attributes.id\n                      });\n                    });\n\n                    _this2.setState({\n                      brandData\n                    });\n                  }\n\n                  if (apiRequestCallId === _this2.getCategoryListingApiCallId) {\n                    //console.log(\"here is your category listing response\", responseJson.data);\n                    categoryData = [];\n                    responseJson.data.map(category => {\n                      categoryData.push({\n                        label: category.attributes.name,\n                        value: category.attributes.id\n                      });\n                    });\n\n                    _this2.setState({\n                      categoryData\n                    });\n                  }\n                }\n              } else {\n                errors = responseJson.errors;\n                errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                _this2.parseApiCatchErrorResponse(errorReponse);\n\n                if (errors[0].token === 'Invalid token' || 'Token has Expired') {\n                  // @ts-ignore\n                  localStorage.setItem(\"auth\", \"\"); //@ts-ignore\n\n                  (_this2$props = _this2.props) === null || _this2$props === void 0 ? void 0 : _this2$props.history.push(\"/login\");\n                } else if (errors[0].message) {\n                  _this2.openSnackBarHandler('error', errors[0].message);\n                }\n              }\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  } // Open View Details Modal\n  // Customizable Area Start\n  // Customizable Area End\n\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/catalogue/src/CatalogueController.web.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","RichTextEditor","orderBy","Yup","configJSON","require","CatalogueController","constructor","props","getProductApiCallId","getProductListingApiCallId","getBrandListingApiCallId","getCategoryListingApiCallId","openSnackBarHandler","type","message","console","log","setState","snackBar","show","closeSnackBarHandler","state","getProductListing","headers","productApiContentType","token","window","localStorage","getItem","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","productListApiEndPoint","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","apiMethodTypeGet","sendMessage","id","getBrandListing","brandListApiEndPoint","getCategoryListing","categoryListApiEndPoint","getToken","msg","SessionRequestMessage","send","handleCheckBox","index","value","arr","Object","assign","displayProducts","checkboxStatus","handleToggle","activeStatus","onMenuToggle","menuCollapsed","handleToggleAddProductModal","addNewProductModal","handleToggleAddVariationModal","addNewVariationModal","handleImageUpload","event","file","target","files","reader","FileReader","url","readAsDataURL","onloadend","e","selectedFile","result","handleOnDrop","acceptedFiles","concat","handleSortingName","sortName","setTimeout","sortedData","item","attributes","name","toLowerCase","handleSortingPricing","sortPricing","price","receive","bind","subScribedMessages","RestAPIResponceMessage","SessionSaveMessage","SessionResponseMessage","AddProductsSchema","productName","string","required","errorProductName","sku","errorSku","brand","errorBrand","category","errorCategory","status","errorStatus","NewVariationTypeSchema","variationName","errorVariationName","variationCode","errorVariationCode","friends","min","allCheckboxStatus","arrayHolder","userType","subscriber","editor","createEmptyValue","brandData","categoryData","attachBuildingBlock","componentDidMount","from","responseJson","getData","RestAPIResponceSuccessMessage","apiRequestCallId","RestAPIResponceDataMessage","data","map","push","label","errors","errorReponse","RestAPIResponceErrorMessage","parseApiCatchErrorResponse","setItem","history"],"mappings":"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","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName,\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport RichTextEditor from \"react-rte\";\nimport { orderBy } from \"lodash\"\nimport * as Yup from \"yup\";\n// Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  arrayHolder: any;\n  menuCollapsed: boolean;\n  userType: string;\n  token: string;\n  displayProducts: any;\n  allCheckboxStatus: any;\n  addNewProductModal: any;\n  addNewVariationModal: any;\n  acceptedFiles: any;\n  selectedFile: any;\n  snackBar: {\n    show: boolean;\n    message?: string;\n    type?: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n  };\n  editor: any;\n  brandData: object[];\n  categoryData: object[],\n  sortPricing: any,\n  sortName: any,\n  AddProductsSchema: any,\n  NewVariationTypeSchema: any,\n  productName: string,\n  sku: string,\n  brand: string,\n  category: string,\n  status: string\n  variationName: string,\n  variationCode: string,\n  friends: any\n  // Customizable Area End\n}\n\ninterface SS {\n  id: any;\n}\ninterface BrandDataType {\n  label: number,\n  value: string\n}\n\ninterface CategoryDataType {\n  label: number,\n  value: string\n}\n\nexport default class CatalogueController extends BlockComponent<Props, S, SS> {\n  getProductApiCallId: any;\n  getProductListingApiCallId: any;\n  getBrandListingApiCallId: any;\n  getCategoryListingApiCallId: any;\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.SessionSaveMessage),\n      getName(MessageEnum.SessionResponseMessage),\n    ];\n\n    let AddProductsSchema = {\n      productName: Yup.string().required(configJSON.errorProductName),\n      sku: Yup.string().required(configJSON.errorSku),\n      brand: Yup.string().required(configJSON.errorBrand),\n      category: Yup.string().required(configJSON.errorCategory),\n      status: Yup.string().required(configJSON.errorStatus)\n\n    }\n\n    let NewVariationTypeSchema = {\n      variationName: Yup.string().required(configJSON.errorVariationName),\n      variationCode: Yup.string().required(configJSON.errorVariationCode),\n      friends: Yup.string()\n        .required('Must have friends') // these constraints are shown if and only if inner constraints are satisfied\n        .min(3, 'Minimum of 3 friends'),\n\n    }\n\n    this.state = {\n      allCheckboxStatus: true,\n      arrayHolder: [],\n      menuCollapsed: false,\n      acceptedFiles: [],\n      userType: configJSON.subscriber,\n      token: \"\",\n      addNewVariationModal: false,\n      snackBar: {\n        show: false,\n      },\n      addNewProductModal: false,\n      selectedFile: null,\n      editor: RichTextEditor.createEmptyValue(),\n      displayProducts: \"\",\n      brandData: [],\n      categoryData: [],\n      sortPricing: null,\n      sortName: null,\n      AddProductsSchema: AddProductsSchema,\n      NewVariationTypeSchema: NewVariationTypeSchema,\n      productName: \"\",\n      sku: \"\",\n      brand: \"\",\n      category: \"\",\n      status: \"\",\n      variationCode: \"\",\n      variationName: \"\",\n      friends: []\n\n    };\n    // Customizable Area End\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n  //   async componentDidMount() {\n  //     super.componentDidMount();\n  //     this.getToken();\n  //     if (this.isPlatformWeb() === false) {\n  //       this.props.navigation.addListener(\"willFocus\", () => {\n  //         this.getToken();\n  //       });\n  //     }\n  //   }\n\n  // Customizable Area Start\n\n  async componentDidMount() {\n    this.getProductListing();\n    this.getBrandListing()\n    this.getCategoryListing()\n  }\n\n  async receive(from: string, message: Message) {\n    // Customizable Area Start\n    // runEngine.debugLog(\"Message Recived\", message);\n\n    if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n\n      if (responseJson) {\n        const apiRequestCallId = message.getData(\n          getName(MessageEnum.RestAPIResponceDataMessage)\n        );\n\n        if (apiRequestCallId != null) {\n          if (apiRequestCallId === this.getProductListingApiCallId) {\n            //console.log(\"here is your listing response\", responseJson.data);\n            this.setState({\n              displayProducts: responseJson.data\n            })\n            this.handleSortingName()\n          }\n          if (apiRequestCallId === this.getBrandListingApiCallId) {\n            //console.log(\"here is your brand listing response\", responseJson.data);\n            const brandData: BrandDataType[] = [];\n            responseJson.data.map((category: any) => {\n              brandData.push({\n                label: category.attributes.name,\n                value: category.attributes.id,\n              })\n            })\n            this.setState({ brandData });\n\n          }\n\n          if (apiRequestCallId === this.getCategoryListingApiCallId) {\n            //console.log(\"here is your category listing response\", responseJson.data);\n            const categoryData: CategoryDataType[] = [];\n            responseJson.data.map((category: any) => {\n              categoryData.push({\n                label: category.attributes.name,\n                value: category.attributes.id,\n              })\n            })\n            this.setState({ categoryData });\n\n          }\n\n        }\n      }\n      else {\n        const errors = responseJson.errors;\n        var errorReponse = message.getData(\n          getName(MessageEnum.RestAPIResponceErrorMessage)\n        );\n        this.parseApiCatchErrorResponse(errorReponse);\n\n        if (errors[0].token === 'Invalid token' || 'Token has Expired') {\n          // @ts-ignore\n          localStorage.setItem(\"auth\", \"\");\n          //@ts-ignore\n          this.props?.history.push(\"/login\");\n        } else if (errors[0].message) {\n          this.openSnackBarHandler('error', errors[0].message);\n        }\n      }\n    }\n  }\n\n  // Open View Details Modal\n  openSnackBarHandler = (type: \"success\" | \"info\" | \"warning\" | \"error\" | undefined, message: string): void => {\n    console.log(\"type,message\", type, message)\n    this.setState({\n      snackBar: {\n        show: true,\n        message: message,\n        type\n      }\n    });\n  };\n\n  // Close View Details Modal\n  closeSnackBarHandler = () => {\n    this.setState({\n      snackBar: {\n        show: false,\n        message: this.state.snackBar.message,\n        type: this.state.snackBar.type\n      }\n    });\n  };\n\n\n  // Handler Product Listing\n  getProductListing = (): boolean => {\n    const headers = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: window.localStorage.getItem(\"auth\"),\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.getProductListingApiCallId = requestMessage.messageId;\n    console.log(\n      \"this.getProductListingApiCallId\",\n      this.getProductListingApiCallId\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.productListApiEndPoint\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  ///getBrands api\n\n  getBrandListing = (): boolean => {\n    const headers = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: window.localStorage.getItem(\"auth\"),\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.getBrandListingApiCallId = requestMessage.messageId;\n    console.log(\n      \"this.getProductListingApiCallId\",\n      this.getProductListingApiCallId\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.brandListApiEndPoint\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  ///get category api\n\n  getCategoryListing = (): boolean => {\n    const headers = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: window.localStorage.getItem(\"auth\"),\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.getCategoryListingApiCallId = requestMessage.messageId;\n\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.categoryListApiEndPoint\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  getToken = () => {\n    const msg: Message = new Message(\n      getName(MessageEnum.SessionRequestMessage)\n    );\n    this.send(msg);\n  };\n\n  handleCheckBox = (index: any, value: any) => {\n    // console.log(index, value);\n    let arr = Object.assign([], this.state.displayProducts, {\n      [index]: {\n        ...this.state.displayProducts[index],\n        checkboxStatus: value,\n      },\n    });\n\n    // let link;\n    // this.state.displayProducts.includes();\n    // console.log(\"link\", link);\n    this.setState({\n      ...this.state,\n      displayProducts: arr,\n    });\n  };\n\n  handleToggle = (index: any, value: any) => {\n    let arr = Object.assign([], this.state.displayProducts, {\n      [index]: {\n        ...this.state.displayProducts[index],\n        activeStatus: value,\n      },\n    });\n\n    this.setState({\n      ...this.state,\n      displayProducts: arr,\n    });\n  };\n\n  onMenuToggle = () => {\n    this.setState({\n      menuCollapsed: !this.state.menuCollapsed,\n    });\n  };\n\n  handleToggleAddProductModal = () => {\n    this.setState({\n      ...this.state,\n      addNewProductModal: !this.state.addNewProductModal,\n    });\n  };\n\n  handleToggleAddVariationModal = () => {\n    this.setState({\n      ...this.state,\n      addNewVariationModal: !this.state.addNewVariationModal,\n    });\n  };\n\n  handleImageUpload = (event: any) => {\n    var file = event.target.files[0];\n    const reader = new FileReader();\n    var url = reader.readAsDataURL(file);\n\n    reader.onloadend = (e: any) => {\n      this.setState({\n        selectedFile: [reader.result],\n      });\n    };\n    console.log(url);\n\n    this.setState({\n      selectedFile: event.target.files[0],\n    });\n  };\n\n  handleOnDrop = (file: any) => {\n    this.setState({\n      acceptedFiles: this.state.acceptedFiles.concat(file),\n    });\n  };\n\n\n  // handle sorting of roleData\n  handleSortingName = () => {\n\n    this.setState({\n      sortName: this.state.sortName !== 'asc' ? 'asc' : 'desc'\n    })\n\n\n    setTimeout(() => {\n      const sortedData = orderBy(this.state.displayProducts, (item: any) => item.attributes.name.toLowerCase(), this.state.sortName);\n      this.setState({\n        displayProducts: sortedData\n      })\n\n    }, 500);\n  }\n\n\n\n  // handle sorting of Data\n  handleSortingPricing = () => {\n\n    this.setState({\n      sortPricing: this.state.sortPricing !== 'asc' ? 'asc' : 'desc'\n    })\n\n\n    setTimeout(() => {\n      const sortedData = orderBy(this.state.displayProducts, (item: any) => item.attributes.price, this.state.sortPricing);\n      this.setState({\n        displayProducts: sortedData\n      })\n\n    }, 500);\n\n  }\n  // Customizable Area Start\n  // Customizable Area End\n}\n"]},"metadata":{},"sourceType":"module"}