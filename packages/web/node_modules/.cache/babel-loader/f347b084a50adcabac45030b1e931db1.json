{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\"; // Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\nexport default class FilteritemsController extends BlockComponent {\n  constructor(props) {\n    super(props);\n    this.getProductApiCallId = void 0;\n\n    this.getToken = () => {\n      const msg = new Message(getName(MessageEnum.SessionRequestMessage));\n      this.send(msg);\n    };\n\n    this.navigateToFilter = () => {\n      let arrayHolder = this.state.arrayHolder;\n      const priceRange = arrayHolder.map(element => element.attributes.price);\n      var min = Math.min.apply(null, priceRange);\n      var max = Math.max.apply(null, priceRange);\n      let params = this.props.navigation.state.params;\n\n      if (params != undefined) {\n        if (params.priceSelectedMin && params.priceSelectedMax) {\n          this.props.navigation.push(\"Filteroptions\", {\n            min: min,\n            max: max,\n            priceSelectedMin: params.priceSelectedMin,\n            priceSelectedMax: params.priceSelectedMax\n          });\n        }\n      } else {\n        this.props.navigation.push(\"Filteroptions\", {\n          min: min,\n          max: max\n        });\n      }\n    };\n\n    this.getListRequest = token => {\n      const header = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: token\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getProductApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.productAPiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    this.receive = this.receive.bind(this); // Customizable Area Start\n\n    this.subScribedMessages = [getName(MessageEnum.AccoutLoginSuccess), getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.SessionSaveMessage), getName(MessageEnum.SessionResponseMessage)];\n    this.state = {\n      token: \"\",\n      data: \"\",\n      arrayHolder: []\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(this, this.subScribedMessages);\n  }\n\n  componentDidMount() {\n    var _superprop_getComponentDidMount = () => super.componentDidMount,\n        _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _superprop_getComponentDidMount().call(_this);\n\n            _this.getToken();\n\n            if (_this.isPlatformWeb() === false) {\n              _this.props.navigation.addListener(\"willFocus\", () => {\n                _this.getToken();\n              });\n            }\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  receive(from, message) {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var token, responseJson, params, errorReponse;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            // Customizable Area Start\n            if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n              token = message.getData(getName(MessageEnum.SessionResponseToken));\n\n              _this2.setState({\n                token: token\n              });\n\n              _this2.getListRequest(token);\n            }\n\n            if (getName(MessageEnum.RestAPIResponceMessage) === message.id && _this2.getProductApiCallId != null && _this2.getProductApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n              responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n\n              if (responseJson && !responseJson.errors && responseJson.data) {\n                _this2.setState({\n                  arrayHolder: responseJson.data\n                });\n\n                params = _this2.props.navigation.state.params;\n\n                if (params !== undefined) {\n                  if (params.data) {\n                    if (params.data.length > 0) {\n                      _this2.setState({\n                        data: params.data\n                      });\n                    } else {\n                      _this2.showAlert(\"Error\", \"No data Found\");\n                    }\n                  }\n                } else {\n                  _this2.setState({\n                    data: responseJson.data\n                  });\n                }\n              } else {\n                errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                _this2.showAlert(\"Error\", errorReponse);\n\n                _this2.parseApiCatchErrorResponse(errorReponse);\n              }\n            } // Customizable Area End\n\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  } // Customizable Area Start\n  // Customizable Area End\n\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/filteritems/src/FilteritemsController.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","configJSON","require","FilteritemsController","constructor","props","getProductApiCallId","getToken","msg","SessionRequestMessage","send","navigateToFilter","arrayHolder","state","priceRange","map","element","attributes","price","min","Math","apply","max","params","navigation","undefined","priceSelectedMin","priceSelectedMax","push","getListRequest","token","header","productApiContentType","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","productAPiEndPoint","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","apiMethodTypeGet","sendMessage","id","receive","bind","subScribedMessages","AccoutLoginSuccess","RestAPIResponceMessage","SessionSaveMessage","SessionResponseMessage","data","attachBuildingBlock","componentDidMount","isPlatformWeb","addListener","from","message","getData","SessionResponseToken","setState","RestAPIResponceDataMessage","responseJson","RestAPIResponceSuccessMessage","errors","length","showAlert","errorReponse","RestAPIResponceErrorMessage","parseApiCatchErrorResponse"],"mappings":"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","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n\n// Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  token: string;\n  data: any;\n  arrayHolder:any\n  // Customizable Area End\n}\n\ninterface SS {\n  id: any;\n}\n\nexport default class FilteritemsController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n  getProductApiCallId: any;\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.AccoutLoginSuccess),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.SessionSaveMessage),\n      getName(MessageEnum.SessionResponseMessage)\n    ];\n\n    this.state = {\n      token: \"\",\n      data: \"\",\n      arrayHolder:[]\n    };\n    // Customizable Area End\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n  async componentDidMount() {\n    super.componentDidMount();\n    this.getToken();\n    if (this.isPlatformWeb() === false) {\n      this.props.navigation.addListener(\"willFocus\", () => {\n        this.getToken();\n      });\n    }\n  }\n\n  getToken = () => {\n    const msg: Message = new Message(\n      getName(MessageEnum.SessionRequestMessage)\n    );\n    this.send(msg);\n  };\n  navigateToFilter = () => {\n      let arrayHolder = this.state.arrayHolder;\n      const priceRange= arrayHolder.map((element:any) => element.attributes.price);\n      var min = Math.min.apply(null, priceRange);\n      var max = Math.max.apply(null, priceRange);\n      let params = this.props.navigation.state.params ;\n      if(params != undefined){\n        if(params.priceSelectedMin && params.priceSelectedMax){\n          this.props.navigation.push(\"Filteroptions\" , {min: min , \n            max:max , \n            priceSelectedMin:params.priceSelectedMin,\n            priceSelectedMax:params.priceSelectedMax\n          });\n        }    \n      }else{\n        this.props.navigation.push(\"Filteroptions\" , {min: min , max:max});\n      }\n  }\n  \n  async receive(from: string, message: Message) {\n    // Customizable Area Start\n    if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n      let token = message.getData(getName(MessageEnum.SessionResponseToken));\n      this.setState({ token: token });\n      this.getListRequest(token);\n    }\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getProductApiCallId != null &&\n      this.getProductApiCallId ===\n        message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      if (responseJson && !responseJson.errors && responseJson.data) {\n        this.setState({arrayHolder:responseJson.data})\n        let params = this.props.navigation.state.params;\n        if (params !== undefined) {\n          if(params.data){\n            if(params.data.length > 0){\n              this.setState({ data: params.data });\n            }else{\n              this.showAlert(\"Error\", \"No data Found\")  \n            }\n          }\n        } else {\n          this.setState({\n            data: responseJson.data\n          });\n        }\n       \n      } else {\n        var errorReponse = message.getData(\n          getName(MessageEnum.RestAPIResponceErrorMessage)\n        );\n        this.showAlert(\"Error\", errorReponse)  \n        this.parseApiCatchErrorResponse(errorReponse);\n      }\n    }\n    // Customizable Area End\n  }\n  getListRequest = (token: any) => {\n    \n    const header = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: token\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getProductApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.productAPiEndPoint\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n  // Customizable Area Start\n  // Customizable Area End\n}\n"]},"metadata":{},"sourceType":"module"}