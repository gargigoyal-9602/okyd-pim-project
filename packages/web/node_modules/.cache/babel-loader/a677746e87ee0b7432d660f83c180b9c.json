{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\"; // Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\nexport default class CatalogueController extends BlockComponent {\n  constructor(props) {\n    super(props);\n    this.getProductApiCallId = void 0;\n\n    this.getToken = () => {\n      const msg = new Message(getName(MessageEnum.SessionRequestMessage));\n      this.send(msg);\n    };\n\n    this.handleCheckBox = (index, value) => {\n      // console.log(index, value);\n      let arr = Object.assign([], this.state.displayProducts, {\n        [index]: _objectSpread(_objectSpread({}, this.state.displayProducts[index]), {}, {\n          checkboxStatus: value\n        })\n      }); // let link;\n      // this.state.displayProducts.includes();\n      // console.log(\"link\", link);\n\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        displayProducts: arr\n      }));\n    };\n\n    this.handleToggle = (index, value) => {\n      let arr = Object.assign([], this.state.displayProducts, {\n        [index]: _objectSpread(_objectSpread({}, this.state.displayProducts[index]), {}, {\n          activeStatus: value\n        })\n      });\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        displayProducts: arr\n      }));\n    };\n\n    this.onMenuToggle = () => {\n      this.setState({\n        menuCollapsed: !this.state.menuCollapsed\n      });\n    };\n\n    this.handleToggleAddProductModal = () => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        addNewProductModal: !this.state.addNewProductModal\n      }));\n    };\n\n    this.handleToggleAddVariationModal = () => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        addNewVariationModal: !this.state.addNewVariationModal\n      }));\n    };\n\n    this.receive = this.receive.bind(this); // Customizable Area Start\n\n    this.subScribedMessages = [getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.SessionSaveMessage), getName(MessageEnum.SessionResponseMessage)];\n    this.state = {\n      allCheckboxStatus: true,\n      arrayHolder: [],\n      menuCollapsed: false,\n      userType: configJSON.subscriber,\n      token: \"\",\n      addNewVariationModal: false,\n      displayProducts: [{\n        id: 1,\n        name: \"Product Name\",\n        category: \"Category Name\",\n        checkboxStatus: true,\n        activeStatus: true,\n        qty: 4550,\n        currencySymbol: \"$\",\n        price: {\n          base: 200,\n          wholesale: 180,\n          highVol: 150\n        }\n      }, {\n        id: 2,\n        name: \"Product Name\",\n        category: \"Category Name\",\n        checkboxStatus: true,\n        activeStatus: true,\n        qty: 1550,\n        currencySymbol: \"$\",\n        price: {\n          base: 220,\n          wholesale: 150,\n          highVol: 190\n        }\n      }, {\n        id: 3,\n        name: \"Product Name\",\n        category: \"Category Name\",\n        checkboxStatus: true,\n        activeStatus: true,\n        qty: 3550,\n        currencySymbol: \"$\",\n        price: {\n          base: 400,\n          wholesale: 380,\n          highVol: 350\n        }\n      }],\n      addNewProductModal: false\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(this, this.subScribedMessages);\n  } //   async componentDidMount() {\n  //     super.componentDidMount();\n  //     this.getToken();\n  //     if (this.isPlatformWeb() === false) {\n  //       this.props.navigation.addListener(\"willFocus\", () => {\n  //         this.getToken();\n  //       });\n  //     }\n  //   }\n\n\n  receive(from, message) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var token, responseJson, errorReponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            // Customizable Area Start\n            runEngine.debugLog(\"Message Recived\", message);\n\n            if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n              token = message.getData(getName(MessageEnum.SessionResponseToken));\n\n              _this.setState({\n                token: token\n              }); // this.getListRequest(token);\n\n            }\n\n            if (getName(MessageEnum.RestAPIResponceMessage) === message.id && _this.getProductApiCallId != null && _this.getProductApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n              responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n\n              if (responseJson && !responseJson.errors && responseJson.data) {\n                _this.setState({\n                  arrayHolder: responseJson.data\n                });\n\n                runEngine.debugLog(\"arrayHolder\", _this.state.arrayHolder);\n              } else {\n                errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                _this.parseApiCatchErrorResponse(errorReponse);\n              }\n            } // Customizable Area End\n\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  } // Customizable Area Start\n  // Customizable Area End\n\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/catalogue/src/CatalogueController.web.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","configJSON","require","CatalogueController","constructor","props","getProductApiCallId","getToken","msg","SessionRequestMessage","send","handleCheckBox","index","value","arr","Object","assign","state","displayProducts","checkboxStatus","setState","handleToggle","activeStatus","onMenuToggle","menuCollapsed","handleToggleAddProductModal","addNewProductModal","handleToggleAddVariationModal","addNewVariationModal","receive","bind","subScribedMessages","RestAPIResponceMessage","SessionSaveMessage","SessionResponseMessage","allCheckboxStatus","arrayHolder","userType","subscriber","token","id","name","category","qty","currencySymbol","price","base","wholesale","highVol","attachBuildingBlock","from","message","debugLog","getData","SessionResponseToken","RestAPIResponceDataMessage","responseJson","RestAPIResponceSuccessMessage","errors","data","errorReponse","RestAPIResponceErrorMessage","parseApiCatchErrorResponse"],"mappings":";;;AACA,SAASA,OAAT,QAAwB,gCAAxB;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,OAAOC,WAAP,IACEC,OADF,QAEO,6CAFP;AAGA,SAASC,SAAT,QAA0B,kCAA1B,C,CAEA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,CAAC,UAAD,CAA1B;AA0BP,eAAe,MAAMC,mBAAN,SAAkCN,cAAlC,CAA+D;AAE5EO,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;AADwB,SAD1BC,mBAC0B;;AAAA,SA4G1BC,QA5G0B,GA4Gf,MAAM;AACf,YAAMC,GAAY,GAAG,IAAIZ,OAAJ,CACnBG,OAAO,CAACD,WAAW,CAACW,qBAAb,CADY,CAArB;AAGA,WAAKC,IAAL,CAAUF,GAAV;AACD,KAjHyB;;AAAA,SAmH1BG,cAnH0B,GAmHT,CAACC,KAAD,EAAaC,KAAb,KAA4B;AAC3C;AACA,UAAIC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWC,eAA7B,EAA8C;AACtD,SAACN,KAAD,mCACK,KAAKK,KAAL,CAAWC,eAAX,CAA2BN,KAA3B,CADL;AAEEO,UAAAA,cAAc,EAAEN;AAFlB;AADsD,OAA9C,CAAV,CAF2C,CAS3C;AACA;AACA;;AACA,WAAKO,QAAL,iCACK,KAAKH,KADV;AAEEC,QAAAA,eAAe,EAAEJ;AAFnB;AAID,KAnIyB;;AAAA,SAqI1BO,YArI0B,GAqIX,CAACT,KAAD,EAAaC,KAAb,KAA4B;AACzC,UAAIC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWC,eAA7B,EAA8C;AACtD,SAACN,KAAD,mCACK,KAAKK,KAAL,CAAWC,eAAX,CAA2BN,KAA3B,CADL;AAEEU,UAAAA,YAAY,EAAET;AAFhB;AADsD,OAA9C,CAAV;AAOA,WAAKO,QAAL,iCACK,KAAKH,KADV;AAEEC,QAAAA,eAAe,EAAEJ;AAFnB;AAID,KAjJyB;;AAAA,SAmJ1BS,YAnJ0B,GAmJX,MAAM;AACnB,WAAKH,QAAL,CAAc;AACZI,QAAAA,aAAa,EAAE,CAAC,KAAKP,KAAL,CAAWO;AADf,OAAd;AAGD,KAvJyB;;AAAA,SAyJ1BC,2BAzJ0B,GAyJI,MAAM;AAClC,WAAKL,QAAL,iCACK,KAAKH,KADV;AAEES,QAAAA,kBAAkB,EAAE,CAAC,KAAKT,KAAL,CAAWS;AAFlC;AAID,KA9JyB;;AAAA,SAgK1BC,6BAhK0B,GAgKM,MAAM;AACpC,WAAKP,QAAL,iCACK,KAAKH,KADV;AAEEW,QAAAA,oBAAoB,EAAE,CAAC,KAAKX,KAAL,CAAWW;AAFpC;AAID,KArKyB;;AAExB,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf,CAFwB,CAIxB;;AACA,SAAKC,kBAAL,GAA0B,CACxBhC,OAAO,CAACD,WAAW,CAACkC,sBAAb,CADiB,EAExBjC,OAAO,CAACD,WAAW,CAACmC,kBAAb,CAFiB,EAGxBlC,OAAO,CAACD,WAAW,CAACoC,sBAAb,CAHiB,CAA1B;AAMA,SAAKjB,KAAL,GAAa;AACXkB,MAAAA,iBAAiB,EAAE,IADR;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXZ,MAAAA,aAAa,EAAE,KAHJ;AAIXa,MAAAA,QAAQ,EAAEpC,UAAU,CAACqC,UAJV;AAKXC,MAAAA,KAAK,EAAE,EALI;AAMXX,MAAAA,oBAAoB,EAAE,KANX;AAOXV,MAAAA,eAAe,EAAE,CACf;AACEsB,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE,cAFR;AAGEC,QAAAA,QAAQ,EAAE,eAHZ;AAIEvB,QAAAA,cAAc,EAAE,IAJlB;AAKEG,QAAAA,YAAY,EAAE,IALhB;AAMEqB,QAAAA,GAAG,EAAE,IANP;AAOEC,QAAAA,cAAc,EAAE,GAPlB;AAQEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,GADD;AAELC,UAAAA,SAAS,EAAE,GAFN;AAGLC,UAAAA,OAAO,EAAE;AAHJ;AART,OADe,EAef;AACER,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE,cAFR;AAGEC,QAAAA,QAAQ,EAAE,eAHZ;AAIEvB,QAAAA,cAAc,EAAE,IAJlB;AAKEG,QAAAA,YAAY,EAAE,IALhB;AAMEqB,QAAAA,GAAG,EAAE,IANP;AAOEC,QAAAA,cAAc,EAAE,GAPlB;AAQEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,GADD;AAELC,UAAAA,SAAS,EAAE,GAFN;AAGLC,UAAAA,OAAO,EAAE;AAHJ;AART,OAfe,EA6Bf;AACER,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE,cAFR;AAGEC,QAAAA,QAAQ,EAAE,eAHZ;AAIEvB,QAAAA,cAAc,EAAE,IAJlB;AAKEG,QAAAA,YAAY,EAAE,IALhB;AAMEqB,QAAAA,GAAG,EAAE,IANP;AAOEC,QAAAA,cAAc,EAAE,GAPlB;AAQEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,GADD;AAELC,UAAAA,SAAS,EAAE,GAFN;AAGLC,UAAAA,OAAO,EAAE;AAHJ;AART,OA7Be,CAPN;AAmDXtB,MAAAA,kBAAkB,EAAE;AAnDT,KAAb,CAXwB,CAgExB;;AACA1B,IAAAA,SAAS,CAACiD,mBAAV,CAA8B,IAA9B,EAA8C,KAAKlB,kBAAnD;AACD,GApE2E,CAqE5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEMF,EAAAA,OAAN,CAAcqB,IAAd,EAA4BC,OAA5B,EAA8C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C;AACAnD,YAAAA,SAAS,CAACoD,QAAV,CAAmB,iBAAnB,EAAsCD,OAAtC;;AACA,gBAAIpD,OAAO,CAACD,WAAW,CAACoC,sBAAb,CAAP,KAAgDiB,OAAO,CAACX,EAA5D,EAAgE;AAC1DD,cAAAA,KAD0D,GAClDY,OAAO,CAACE,OAAR,CAAgBtD,OAAO,CAACD,WAAW,CAACwD,oBAAb,CAAvB,CADkD;;AAE9D,cAAA,KAAI,CAAClC,QAAL,CAAc;AAAEmB,gBAAAA,KAAK,EAAEA;AAAT,eAAd,EAF8D,CAG9D;;AACD;;AACD,gBACExC,OAAO,CAACD,WAAW,CAACkC,sBAAb,CAAP,KAAgDmB,OAAO,CAACX,EAAxD,IACA,KAAI,CAAClC,mBAAL,IAA4B,IAD5B,IAEA,KAAI,CAACA,mBAAL,KACA6C,OAAO,CAACE,OAAR,CAAgBtD,OAAO,CAACD,WAAW,CAACyD,0BAAb,CAAvB,CAJF,EAKE;AACIC,cAAAA,YADJ,GACmBL,OAAO,CAACE,OAAR,CACjBtD,OAAO,CAACD,WAAW,CAAC2D,6BAAb,CADU,CADnB;;AAIA,kBAAID,YAAY,IAAI,CAACA,YAAY,CAACE,MAA9B,IAAwCF,YAAY,CAACG,IAAzD,EAA+D;AAC7D,gBAAA,KAAI,CAACvC,QAAL,CAAc;AACZgB,kBAAAA,WAAW,EAAEoB,YAAY,CAACG;AADd,iBAAd;;AAGA3D,gBAAAA,SAAS,CAACoD,QAAV,CAAmB,aAAnB,EAAkC,KAAI,CAACnC,KAAL,CAAWmB,WAA7C;AACD,eALD,MAKO;AACDwB,gBAAAA,YADC,GACcT,OAAO,CAACE,OAAR,CACjBtD,OAAO,CAACD,WAAW,CAAC+D,2BAAb,CADU,CADd;;AAIL,gBAAA,KAAI,CAACC,0BAAL,CAAgCF,YAAhC;AACD;AACF,aA5B2C,CA6B5C;;;AA7B4C;AAAA;AAAA;AAAA;AAAA;AAAA;AA8B7C,GA7G2E,CAyK5E;AACA;;;AA1K4E","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName,\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n\n// Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  arrayHolder: any;\n  menuCollapsed: boolean;\n  userType: string;\n  token: string;\n  displayProducts: any;\n  allCheckboxStatus: any;\n  addNewProductModal: any;\n  addNewVariationModal: any;\n  // Customizable Area End\n}\n\ninterface SS {\n  id: any;\n}\n\nexport default class CatalogueController extends BlockComponent<Props, S, SS> {\n  getProductApiCallId: any;\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.SessionSaveMessage),\n      getName(MessageEnum.SessionResponseMessage),\n    ];\n\n    this.state = {\n      allCheckboxStatus: true,\n      arrayHolder: [],\n      menuCollapsed: false,\n      userType: configJSON.subscriber,\n      token: \"\",\n      addNewVariationModal: false,\n      displayProducts: [\n        {\n          id: 1,\n          name: \"Product Name\",\n          category: \"Category Name\",\n          checkboxStatus: true,\n          activeStatus: true,\n          qty: 4550,\n          currencySymbol: \"$\",\n          price: {\n            base: 200,\n            wholesale: 180,\n            highVol: 150,\n          },\n        },\n        {\n          id: 2,\n          name: \"Product Name\",\n          category: \"Category Name\",\n          checkboxStatus: true,\n          activeStatus: true,\n          qty: 1550,\n          currencySymbol: \"$\",\n          price: {\n            base: 220,\n            wholesale: 150,\n            highVol: 190,\n          },\n        },\n        {\n          id: 3,\n          name: \"Product Name\",\n          category: \"Category Name\",\n          checkboxStatus: true,\n          activeStatus: true,\n          qty: 3550,\n          currencySymbol: \"$\",\n          price: {\n            base: 400,\n            wholesale: 380,\n            highVol: 350,\n          },\n        },\n      ],\n      addNewProductModal: false,\n    };\n    // Customizable Area End\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n  //   async componentDidMount() {\n  //     super.componentDidMount();\n  //     this.getToken();\n  //     if (this.isPlatformWeb() === false) {\n  //       this.props.navigation.addListener(\"willFocus\", () => {\n  //         this.getToken();\n  //       });\n  //     }\n  //   }\n\n  async receive(from: string, message: Message) {\n    // Customizable Area Start\n    runEngine.debugLog(\"Message Recived\", message);\n    if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n      let token = message.getData(getName(MessageEnum.SessionResponseToken));\n      this.setState({ token: token });\n      // this.getListRequest(token);\n    }\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getProductApiCallId != null &&\n      this.getProductApiCallId ===\n      message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      if (responseJson && !responseJson.errors && responseJson.data) {\n        this.setState({\n          arrayHolder: responseJson.data,\n        });\n        runEngine.debugLog(\"arrayHolder\", this.state.arrayHolder);\n      } else {\n        var errorReponse = message.getData(\n          getName(MessageEnum.RestAPIResponceErrorMessage)\n        );\n        this.parseApiCatchErrorResponse(errorReponse);\n      }\n    }\n    // Customizable Area End\n  }\n  getToken = () => {\n    const msg: Message = new Message(\n      getName(MessageEnum.SessionRequestMessage)\n    );\n    this.send(msg);\n  };\n\n  handleCheckBox = (index: any, value: any) => {\n    // console.log(index, value);\n    let arr = Object.assign([], this.state.displayProducts, {\n      [index]: {\n        ...this.state.displayProducts[index],\n        checkboxStatus: value,\n      },\n    });\n\n    // let link;\n    // this.state.displayProducts.includes();\n    // console.log(\"link\", link);\n    this.setState({\n      ...this.state,\n      displayProducts: arr,\n    });\n  };\n\n  handleToggle = (index: any, value: any) => {\n    let arr = Object.assign([], this.state.displayProducts, {\n      [index]: {\n        ...this.state.displayProducts[index],\n        activeStatus: value,\n      },\n    });\n\n    this.setState({\n      ...this.state,\n      displayProducts: arr,\n    });\n  };\n\n  onMenuToggle = () => {\n    this.setState({\n      menuCollapsed: !this.state.menuCollapsed,\n    });\n  };\n\n  handleToggleAddProductModal = () => {\n    this.setState({\n      ...this.state,\n      addNewProductModal: !this.state.addNewProductModal,\n    });\n  };\n\n  handleToggleAddVariationModal = () => {\n    this.setState({\n      ...this.state,\n      addNewVariationModal: !this.state.addNewVariationModal,\n    });\n  };\n\n  // Customizable Area Start\n  // Customizable Area End\n}\n"]},"metadata":{},"sourceType":"module"}