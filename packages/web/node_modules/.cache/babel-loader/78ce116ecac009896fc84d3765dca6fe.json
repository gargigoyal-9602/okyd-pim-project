{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\"; // Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\nexport default class FilteroptionsController extends BlockComponent {\n  constructor(props) {\n    super(props);\n    this.getProductApiCallId = void 0;\n    this.getBrandApiCallId = void 0;\n    this.applyAllApiCallId = void 0;\n\n    this.getToken = () => {\n      const msg = new Message(getName(MessageEnum.SessionRequestMessage));\n      this.send(msg);\n    };\n\n    this.getListRequest = token => {\n      const header = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: token\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getProductApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.productAPiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    this.getBrandList = token => {\n      const header = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: token\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getBrandApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.brandAPiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    this.applyAllfilters = () => {\n      let url = configJSON.cataloguesAPiEndPoint;\n      const priceMin = this.state.priceMin;\n      const priceMax = this.state.priceMax;\n      let brandSingle = \"q[brand_id][]=\";\n      let brandMulti = \"&q[brand_id][]=\";\n      let priceValue = 'q[price][from]=' + \"\".concat(priceMin) + '&q[price][to]=' + \"\".concat(priceMax);\n      let categorySingle = \"q[category_id][]=\";\n      let categoryMulti = \"&q[category_id][]=\";\n      let brands = [];\n      let price = priceMin !== 0 && priceMax !== 0;\n\n      if (this.state.selectedItems.length > 0) {\n        let selectedItems = this.state.selectedItems;\n        brands = selectedItems;\n      }\n\n      let Category = [];\n\n      if (this.state.selectedCategory.length > 0) {\n        let selectedCategory = this.state.selectedCategory;\n        Category = selectedCategory;\n      }\n\n      if (brands && !Category.length && !price) {\n        console.log(\"brands && !Category.length && !price\");\n\n        for (let i = 0; i < brands.length; i++) {\n          if (i === 0) {\n            url = url + brandSingle + brands[i].id;\n          } else {\n            url = url + brandMulti + brands[i].id;\n          }\n        }\n      } else if (price && !brands.length && !Category) {\n        console.log(\"price && !brands.length && !Category\");\n        url = url + priceValue;\n      } else if (Category && !brands.length && !price) {\n        console.log(\"Category && !brands.length &&!price\");\n\n        for (let i = 0; i < Category.length; i++) {\n          if (i === 0) {\n            url = url + categorySingle + Category[i].id;\n          } else {\n            url = url + categoryMulti + Category[i].id;\n          }\n        }\n      } else if (brands && price && !Category.length) {\n        console.log(\"brands && price && !Category.length\");\n        let i = 0;\n        let brandSelect = '';\n\n        for (i = 0; i < brands.length; i++) {\n          if (brands.length === 1) {\n            console.log(\"single brandSelect final url\");\n            brandSelect = brandSingle + brands[i].id;\n          } else {\n            console.log(\"Multi brandSelect final url\");\n            brandSelect = brandMulti + brands[i].id;\n          }\n\n          url = url + brandSelect;\n        }\n\n        url = url + \"&\" + priceValue;\n      } else if (Category && price && !brands.length) {\n        console.log(\"Category && price && !brands.length\");\n        let j = 0;\n        let catSelect = '';\n\n        for (j = 0; j < Category.length; j++) {\n          console.log(Category, \"final url\");\n\n          if (Category.length === 1) {\n            console.log(\"single catSelect final url\");\n            catSelect = categorySingle + Category[j].id;\n          } else {\n            console.log(\"Multi catSelect final url\");\n            catSelect = categoryMulti + Category[j].id;\n          }\n\n          url = url + catSelect;\n        }\n\n        url = url + \"&\" + priceValue;\n      } else if (Category && brands && !price) {\n        console.log(\"Category && brands && !price\");\n        let i = 0;\n        let j = 0;\n        let brandSelect = '';\n        let catSelect = '';\n\n        for (i = 0; i < brands.length; i++) {\n          if (brands.length === 1) {\n            console.log(\"single brandSelect final url\");\n            brandSelect = brandSingle + brands[i].id;\n          } else {\n            console.log(\"Multi brandSelect final url\");\n            brandSelect = brandMulti + brands[i].id;\n          }\n\n          url = url + brandSelect;\n        }\n\n        for (j = 0; j < Category.length; j++) {\n          console.log(Category, \"final url\");\n\n          if (Category.length === 1) {\n            console.log(\"single catSelect final url\");\n            catSelect = categorySingle + Category[j].id;\n          } else {\n            console.log(\"Multi catSelect final url\");\n            catSelect = categoryMulti + Category[j].id;\n          }\n\n          url = url + catSelect;\n        }\n      } else if (Category && brands && price) {\n        console.log(\"Category && brands && price final url\");\n        let i = 0;\n        let j = 0;\n        let brandSelect = '';\n        let catSelect = '';\n\n        for (i = 0; i < brands.length; i++) {\n          if (brands.length === 1) {\n            console.log(\"single brandSelect final url\");\n            brandSelect = brandSingle + brands[i].id + \"&\";\n          } else {\n            console.log(\"Multi brandSelect final url\");\n            brandSelect = brandMulti + brands[i].id;\n          }\n\n          url = url + brandSelect;\n        }\n\n        for (j = 0; j < Category.length; j++) {\n          console.log(Category, \"final url\");\n\n          if (Category.length === 1) {\n            console.log(\"single catSelect final url\");\n            catSelect = categorySingle + Category[j].id;\n          } else {\n            console.log(\"Multi catSelect final url\");\n            catSelect = categoryMulti + Category[j].id;\n          }\n\n          url = url + catSelect;\n        }\n\n        url = url + \"&\" + priceValue;\n      } else {\n        this.props.navigation.goBack();\n      }\n\n      const header = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: this.state.token\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.applyAllApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), url);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      console.log(url, \"final url\");\n    };\n\n    this.receive = this.receive.bind(this); // Customizable Area Start\n\n    this.subScribedMessages = [getName(MessageEnum.AccoutLoginSuccess), getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.SessionSaveMessage), getName(MessageEnum.SessionResponseMessage)];\n    this.state = {\n      txtInputValue: \"\",\n      txtSavedValue: \"A\",\n      enableField: false,\n      outOfStock: false,\n      pricerange: true,\n      brand: false,\n      category: false,\n      tag: false,\n      checkedStock: false,\n      checkedDiscounted: false,\n      rangeLow: \"\",\n      rangeHigh: \"\",\n      value: 10,\n      token: \"\",\n      data: [],\n      checkedBrand: null,\n      checkedCategory: false,\n      checkedTag: false,\n      GetAllBrand: [],\n      BrandList: [],\n      selectedItems: [],\n      selectedCategory: [],\n      scrollEnabled: false,\n      minValue: 10,\n      maxValue: 200,\n      priceMin: 0,\n      priceMax: 0,\n      price: [],\n      arrayHolder: [],\n      categoryArray: [],\n      catHolder: []\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(this, this.subScribedMessages);\n  }\n\n  valueChange(value) {\n    this.setState({\n      value: value\n    });\n  }\n\n  openFilter(value) {\n    if (value === \"stock\") {\n      this.setState({\n        tag: false,\n        outOfStock: true,\n        pricerange: false,\n        brand: false,\n        category: false\n      });\n    }\n\n    if (value === \"pricerange\") {\n      this.setState({\n        tag: false,\n        outOfStock: false,\n        pricerange: true,\n        brand: false,\n        category: false\n      });\n    }\n\n    if (value === \"brand\") {\n      this.setState({\n        tag: false,\n        outOfStock: false,\n        pricerange: false,\n        brand: true,\n        category: false\n      });\n    }\n\n    if (value === \"category\") {\n      this.setState({\n        tag: false,\n        outOfStock: false,\n        pricerange: false,\n        brand: false,\n        category: true\n      });\n    }\n\n    if (value === \"tags\") {\n      this.setState({\n        tag: true,\n        outOfStock: false,\n        pricerange: false,\n        brand: false,\n        category: false\n      });\n    }\n  }\n\n  componentDidMount() {\n    var _superprop_getComponentDidMount = () => super.componentDidMount,\n        _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var params, min, max;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _superprop_getComponentDidMount().call(_this);\n\n            _this.getToken();\n\n            if (_this.isPlatformWeb() === false) {\n              _this.props.navigation.addListener(\"willFocus\", () => {\n                _this.getToken();\n              });\n            }\n\n            if (!_this.isPlatformWeb()) {\n              params = _this.props.navigation.state.params;\n              min = params && params.min ? params.min : 0;\n              max = params && params.max ? params.max : 100;\n\n              if (params.priceSelectedMin != undefined && params.priceSelectedMax != undefined) {\n                _this.setState({\n                  minValue: params.priceSelectedMin,\n                  maxValue: params.priceSelectedMax\n                });\n              } else {\n                _this.setState({\n                  minValue: min,\n                  maxValue: max\n                });\n              }\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  receive(from, message) {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var token, responseJson, errorReponse;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            // Customizable Area Start\n            if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n              token = message.getData(getName(MessageEnum.SessionResponseToken));\n\n              _this2.setState({\n                token: token\n              });\n\n              _this2.getListRequest(token);\n\n              _this2.getBrandList(token);\n            }\n\n            if (getName(MessageEnum.RestAPIResponceMessage) === message.id && _this2.applyAllApiCallId != null && _this2.applyAllApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n              responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n\n              if (responseJson && !responseJson.errors && responseJson.data) {\n                _this2.setState({\n                  data: responseJson.data\n                });\n\n                if (_this2.state.data.length > 0) {\n                  _this2.props.navigation.push(\"Filteritems\", {\n                    data: _this2.state.data\n                  });\n                } else {\n                  _this2.showAlert(\"Error\", \"Data not found!!!\");\n                }\n              } else {\n                errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                _this2.parseApiCatchErrorResponse(errorReponse);\n              }\n            }\n\n            if (getName(MessageEnum.RestAPIResponceMessage) === message.id && _this2.getBrandApiCallId != null && _this2.getBrandApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n              responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n\n              if (responseJson && !responseJson.errors && responseJson.data) {\n                _this2.setState({\n                  GetAllBrand: responseJson.data,\n                  BrandList: responseJson.data\n                });\n              } else {\n                errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                _this2.parseApiCatchErrorResponse(errorReponse);\n              }\n            }\n\n            if (getName(MessageEnum.RestAPIResponceMessage) === message.id && _this2.getProductApiCallId != null && _this2.getProductApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n              responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n\n              if (responseJson && !responseJson.errors && responseJson.data) {\n                _this2.setState({\n                  arrayHolder: responseJson.data,\n                  categoryArray: responseJson.data\n                });\n              } else {\n                errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                _this2.parseApiCatchErrorResponse(errorReponse);\n              }\n            } // Customizable Area End\n\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  } // Customizable Area Start\n\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/filteritems/src/FilteroptionsController.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","configJSON","require","FilteroptionsController","constructor","props","getProductApiCallId","getBrandApiCallId","applyAllApiCallId","getToken","msg","SessionRequestMessage","send","getListRequest","token","header","productApiContentType","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","productAPiEndPoint","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","apiMethodTypeGet","sendMessage","id","getBrandList","brandAPiEndPoint","applyAllfilters","url","cataloguesAPiEndPoint","priceMin","state","priceMax","brandSingle","brandMulti","priceValue","categorySingle","categoryMulti","brands","price","selectedItems","length","Category","selectedCategory","console","log","i","brandSelect","j","catSelect","navigation","goBack","receive","bind","subScribedMessages","AccoutLoginSuccess","RestAPIResponceMessage","SessionSaveMessage","SessionResponseMessage","txtInputValue","txtSavedValue","enableField","outOfStock","pricerange","brand","category","tag","checkedStock","checkedDiscounted","rangeLow","rangeHigh","value","data","checkedBrand","checkedCategory","checkedTag","GetAllBrand","BrandList","scrollEnabled","minValue","maxValue","arrayHolder","categoryArray","catHolder","attachBuildingBlock","valueChange","setState","openFilter","componentDidMount","isPlatformWeb","addListener","params","min","max","priceSelectedMin","undefined","priceSelectedMax","from","message","getData","SessionResponseToken","RestAPIResponceDataMessage","responseJson","RestAPIResponceSuccessMessage","errors","push","showAlert","errorReponse","RestAPIResponceErrorMessage","parseApiCatchErrorResponse"],"mappings":"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","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n\n// Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  txtInputValue: string;\n  txtSavedValue: string;\n  enableField: boolean;\n  outOfStock: boolean;\n  pricerange: boolean;\n  brand: boolean;\n  category: boolean;\n  tag: boolean;\n  checkedStock: boolean;\n  checkedDiscounted: boolean;\n  checkedBrand: any;\n  rangeLow: any;\n  rangeHigh: any;\n  value: any;\n  token: string;\n  data: any;\n  checkedCategory: boolean;\n  checkedTag: boolean;\n  GetAllBrand: any;\n  BrandList: any;\n  selectedItems: any;\n  selectedCategory:any;\n  scrollEnabled:boolean;\n  minValue:any;\n  maxValue:any;\n  priceMin:any;\n  priceMax:any;\n  price:any;\n  arrayHolder:any;\n  categoryArray:any;\n  catHolder:any\n  // Customizable Area End\n}\n\ninterface SS {\n  id: any;\n}\n\nexport default class FilteroptionsController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n  getProductApiCallId: any;\n  getBrandApiCallId: any;\n  applyAllApiCallId:any;\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.AccoutLoginSuccess),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.SessionSaveMessage),\n      getName(MessageEnum.SessionResponseMessage)\n    ];\n\n    this.state = {\n      txtInputValue: \"\",\n      txtSavedValue: \"A\",\n      enableField: false,\n      outOfStock: false,\n      pricerange: true,\n      brand: false,\n      category: false,\n      tag: false,\n      checkedStock: false,\n      checkedDiscounted: false,\n      rangeLow: \"\",\n      rangeHigh: \"\",\n      value: 10,\n      token: \"\",\n      data: [],\n      checkedBrand: null,\n      checkedCategory: false,\n      checkedTag: false,\n      GetAllBrand: [],\n      BrandList:[],\n      selectedItems: [],\n      selectedCategory:[],\n      scrollEnabled:false,\n      minValue:10,\n      maxValue:200,\n      priceMin:0,\n      priceMax:0,\n      price:[],\n      arrayHolder:[],\n      categoryArray:[],\n      catHolder:[]\n    };\n\n    // Customizable Area End\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n  valueChange(value: any) {\n    this.setState({ value: value });\n  }\n  openFilter(value: any) {\n    if (value === \"stock\") {\n      this.setState({\n        tag: false,\n        outOfStock: true,\n        pricerange: false,\n        brand: false,\n        category: false\n      });\n    }\n    if (value === \"pricerange\") {\n      this.setState({\n        tag: false,\n        outOfStock: false,\n        pricerange: true,\n        brand: false,\n        category: false\n      });\n    }\n    if (value === \"brand\") {\n      this.setState({\n        tag: false,\n        outOfStock: false,\n        pricerange: false,\n        brand: true,\n        category: false\n      });\n    }\n    if (value === \"category\") {\n      this.setState({\n        tag: false,\n        outOfStock: false,\n        pricerange: false,\n        brand: false,\n        category: true\n      });\n    }\n    if (value === \"tags\") {\n      this.setState({\n        tag: true,\n        outOfStock: false,\n        pricerange: false,\n        brand: false,\n        category: false\n      });\n    }\n  }\n\n  async componentDidMount() {\n    super.componentDidMount();\n    this.getToken();\n    if (this.isPlatformWeb() === false) {\n      this.props.navigation.addListener(\"willFocus\", () => {\n        this.getToken();\n      });\n    }\n    if (!this.isPlatformWeb()) {\n      let params = this.props.navigation.state.params ;\n      const min = params && params.min ? params.min : 0 ;\n      const max = params && params.max? params.max : 100 ;\n      if(params.priceSelectedMin != undefined &&  params.priceSelectedMax != undefined){\n        this.setState({\n          minValue:params.priceSelectedMin,\n          maxValue:params.priceSelectedMax\n        })\n      }else{\n        this.setState({\n          minValue:min,\n          maxValue:max\n        })\n      }\n    }\n  }\n  \n  getToken = () => {\n    const msg: Message = new Message(\n      getName(MessageEnum.SessionRequestMessage)\n    );\n    this.send(msg);\n  };\n  getListRequest = (token: any) => {\n    const header = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: token\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getProductApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.productAPiEndPoint\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n  getBrandList = (token: any) => {\n    const header = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: token\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getBrandApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.brandAPiEndPoint\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n \n  applyAllfilters=()=>{\n    let url = configJSON.cataloguesAPiEndPoint;\n    const priceMin = this.state.priceMin ;\n    const priceMax = this.state.priceMax ;\n    let brandSingle =\"q[brand_id][]=\" ;\n    let brandMulti = \"&q[brand_id][]=\";\n    let priceValue = 'q[price][from]='+ \n    `${priceMin}` + '&q[price][to]=' + `${priceMax}`;\n    let categorySingle = \"q[category_id][]=\" ;\n    let categoryMulti =  \"&q[category_id][]=\";\n    let brands = [];\n    let price = priceMin !== 0 && priceMax !== 0;\n    if(this.state.selectedItems.length > 0){\n      let selectedItems = this.state.selectedItems\n      brands =  selectedItems\n    }\n    let Category = [];\n    if(this.state.selectedCategory.length > 0){\n      let selectedCategory = this.state.selectedCategory\n      Category =  selectedCategory\n    }\n    if(brands && !Category.length && !price){\n      console.log(\"brands && !Category.length && !price\")\n      for (let i = 0; i < brands.length; i++) {\n        if (i === 0) {\n          url = url + brandSingle + brands[i].id;\n        } else {\n          url = url + brandMulti + brands[i].id;\n        }\n      }\n    }\n    else if(price && !brands.length && !Category){\n      console.log(\"price && !brands.length && !Category\")\n      url = url + priceValue\n    }\n    else if(Category && !brands.length &&!price){\n      console.log(\"Category && !brands.length &&!price\")\n      for (let i = 0; i < Category.length; i++) {\n        if (i === 0) {\n          url = url + categorySingle + Category[i].id;\n        } else {\n          url = url + categoryMulti + Category[i].id;\n        }\n      }\n    }else if(brands && price && !Category.length){\n      console.log(\"brands && price && !Category.length\")\n      let i = 0;\n      let brandSelect = '';\n      for (i = 0 ; i < brands.length; i++) {\n        if (brands.length === 1) {\n          console.log(\"single brandSelect final url\")\n          brandSelect = brandSingle + brands[i].id ;\n         } else{\n          console.log(\"Multi brandSelect final url\")\n          brandSelect = brandMulti + brands[i].id\n         }\n        url = url + brandSelect \n      }\n      url = url + \"&\" + priceValue\n    }\n    else if(Category && price && !brands.length){\n      console.log(\"Category && price && !brands.length\")\n      let j = 0;\n      let catSelect = '';\n      for (j = 0 ; j < Category.length; j++) {\n          console.log(Category , \"final url\")\n          if (Category.length === 1) {\n            console.log(\"single catSelect final url\")\n            catSelect = categorySingle + Category[j].id ;\n          } else{\n            console.log(\"Multi catSelect final url\")\n            catSelect = categoryMulti + Category[j].id\n          }\n        url = url + catSelect \n      }\n      url = url + \"&\" + priceValue\n    }\n    else if(Category && brands && !price){\n      console.log(\"Category && brands && !price\")\n      let i = 0;\n      let j = 0;\n      let brandSelect = '';\n      let catSelect = '';\n      for (i = 0 ; i < brands.length; i++) {\n        if (brands.length === 1) {\n          console.log(\"single brandSelect final url\")\n          brandSelect = brandSingle + brands[i].id ;\n         } else{\n          console.log(\"Multi brandSelect final url\")\n          brandSelect = brandMulti + brands[i].id\n         }\n        url = url + brandSelect \n      }\n      for (j = 0 ; j < Category.length; j++) {\n          console.log(Category , \"final url\")\n          if (Category.length === 1) {\n            console.log(\"single catSelect final url\")\n            catSelect = categorySingle + Category[j].id ;\n          } else{\n            console.log(\"Multi catSelect final url\")\n            catSelect = categoryMulti + Category[j].id\n          }\n        url = url + catSelect \n      }\n    }else if(Category && brands && price){\n      console.log(\"Category && brands && price final url\")\n      let i = 0;\n      let j = 0;\n      let brandSelect = '';\n      let catSelect = '';\n      for (i = 0 ; i < brands.length; i++) {\n        if (brands.length === 1) {\n          console.log(\"single brandSelect final url\")\n          brandSelect = brandSingle + brands[i].id + \"&\";\n         } else{\n          console.log(\"Multi brandSelect final url\")\n          brandSelect = brandMulti + brands[i].id\n         }\n        url = url + brandSelect \n      }\n      for (j = 0 ; j < Category.length; j++) {\n          console.log(Category , \"final url\")\n          if (Category.length === 1) {\n            console.log(\"single catSelect final url\")\n            catSelect = categorySingle + Category[j].id ;\n          } else{\n            console.log(\"Multi catSelect final url\")\n            catSelect = categoryMulti + Category[j].id\n          }\n        url = url + catSelect \n      }\n      url = url + \"&\" + priceValue\n    }\n    else{\n      this.props.navigation.goBack();\n    }\n    const header = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: this.state.token\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.applyAllApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      url\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n    console.log(url,\"final url\")\n  }\n  async receive(from: string, message: Message) {\n    // Customizable Area Start\n   \n    if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n      let token = message.getData(getName(MessageEnum.SessionResponseToken));\n      this.setState({ token: token });\n      this.getListRequest(token);\n      this.getBrandList(token);\n    }\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.applyAllApiCallId != null &&\n      this.applyAllApiCallId ===\n        message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n\n      if (responseJson && !responseJson.errors && responseJson.data) {\n        this.setState({\n          data: responseJson.data\n        });\n        if(this.state.data.length > 0){\n          this.props.navigation.push(\"Filteritems\", { data: this.state.data});\n        }else{\n          this.showAlert(\"Error\", \"Data not found!!!\")\n        }\n      } else {\n        var errorReponse = message.getData(\n          getName(MessageEnum.RestAPIResponceErrorMessage)\n        );\n        this.parseApiCatchErrorResponse(errorReponse);\n      }\n    }\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getBrandApiCallId != null &&\n      this.getBrandApiCallId ===\n        message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n\n      if (responseJson && !responseJson.errors && responseJson.data) {\n        this.setState({\n          GetAllBrand: responseJson.data,\n          BrandList:responseJson.data\n        });\n      } else {\n        var errorReponse = message.getData(\n          getName(MessageEnum.RestAPIResponceErrorMessage)\n        );\n        this.parseApiCatchErrorResponse(errorReponse);\n      }\n    }\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getProductApiCallId != null &&\n      this.getProductApiCallId ===\n        message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n\n      if (responseJson && !responseJson.errors && responseJson.data) {\n        this.setState({\n          arrayHolder: responseJson.data,\n          categoryArray:responseJson.data\n        });\n      } else {\n        var errorReponse = message.getData(\n          getName(MessageEnum.RestAPIResponceErrorMessage)\n        );\n        this.parseApiCatchErrorResponse(errorReponse);\n      }\n    }\n    // Customizable Area End\n  }\n\n  // Customizable Area Start\n}\n"]},"metadata":{},"sourceType":"module"}