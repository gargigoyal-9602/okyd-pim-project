{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.simpleErrorHandler = simpleErrorHandler;\nexports.simpleLogger = simpleLogger;\nexports.noop = noop;\nexports.factoryOptions = void 0;\n/**\n * Copyright (c) React Native Community.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst isDevelopment = // @ts-ignore\nprocess && process.env && process.env.NODE_ENV === 'development' || __DEV__;\nconst factoryOptions = {\n  logger: isDevelopment,\n  errorHandler: isDevelopment\n};\nexports.factoryOptions = factoryOptions;\n\nfunction simpleErrorHandler(e) {\n  let errorMessage = e instanceof Error ? e.message : e;\n  console.error(errorMessage);\n}\n\nfunction simpleLogger(logInfo) {\n  const log = message => {\n    console.log(\"[AsyncStorage] \".concat(message));\n  };\n\n  const action = logInfo.action,\n        key = logInfo.key,\n        value = logInfo.value;\n\n  switch (action) {\n    case 'read-single':\n      {\n        log(\"Reading a value for a key: \".concat(key));\n        break;\n      }\n\n    case 'save-single':\n      {\n        log(\"Saving a value: \".concat(value, \" for a key: \").concat(key));\n        break;\n      }\n\n    case 'delete-single':\n      {\n        log(\"Removing value at a key: \".concat(key));\n        break;\n      }\n\n    case 'read-many':\n      {\n        log(\"Reading values for keys: \".concat(key));\n        break;\n      }\n\n    case 'save-many':\n      {\n        log(\"Saving values \".concat(value, \" for keys: \").concat(key));\n        break;\n      }\n\n    case 'delete-many':\n      {\n        log(\"Removing multiple values for keys: \".concat(key));\n        break;\n      }\n\n    case 'drop':\n      {\n        log('Dropping whole database');\n        break;\n      }\n\n    case 'keys':\n      {\n        log('Retrieving keys');\n        break;\n      }\n\n    default:\n      {\n        log(\"Unknown action: \".concat(action));\n      }\n  }\n}\n\nfunction noop() {// noop\n}","map":null,"metadata":{},"sourceType":"script"}