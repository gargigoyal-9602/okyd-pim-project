{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\"; // Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\nexport default class CatalogueController extends BlockComponent {\n  constructor(props) {\n    super(props);\n    this.getProductApiCallId = void 0;\n\n    this.getToken = () => {\n      const msg = new Message(getName(MessageEnum.SessionRequestMessage));\n      this.send(msg);\n    };\n\n    this.getListRequest = token => {\n      const header = {\n        \"Content-Type\": configJSON.productApiContentType,\n        token: token\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getProductApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.productAPiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.apiMethodTypeGet);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    this.receive = this.receive.bind(this); // Customizable Area Start\n\n    this.subScribedMessages = [getName(MessageEnum.RestAPIResponceMessage), getName(MessageEnum.SessionSaveMessage), getName(MessageEnum.SessionResponseMessage)];\n    this.state = {\n      arrayHolder: [],\n      token: \"\"\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(this, this.subScribedMessages);\n  }\n\n  componentDidMount() {\n    var _superprop_getComponentDidMount = () => super.componentDidMount,\n        _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _superprop_getComponentDidMount().call(_this);\n\n            _this.getToken();\n\n            if (_this.isPlatformWeb() === false) {\n              _this.props.navigation.addListener(\"willFocus\", () => {\n                _this.getToken();\n              });\n            }\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  receive(from, message) {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var token, responseJson, errorReponse;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            // Customizable Area Start\n            runEngine.debugLog(\"Message Recived\", message);\n\n            if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n              token = message.getData(getName(MessageEnum.SessionResponseToken));\n\n              _this2.setState({\n                token: token\n              });\n\n              _this2.getListRequest(token);\n            }\n\n            if (getName(MessageEnum.RestAPIResponceMessage) === message.id && _this2.getProductApiCallId != null && _this2.getProductApiCallId === message.getData(getName(MessageEnum.RestAPIResponceDataMessage))) {\n              responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n\n              if (responseJson && !responseJson.errors && responseJson.data) {\n                _this2.setState({\n                  arrayHolder: responseJson.data\n                });\n\n                runEngine.debugLog(\"arrayHolder\", _this2.state.arrayHolder);\n              } else {\n                errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n                _this2.parseApiCatchErrorResponse(errorReponse);\n              }\n            } // Customizable Area End\n\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  } // Customizable Area Start\n  // Customizable Area End\n\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/catalogue/src/CatalogueController.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","configJSON","require","CatalogueController","constructor","props","getProductApiCallId","getToken","msg","SessionRequestMessage","send","getListRequest","token","header","productApiContentType","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","productAPiEndPoint","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","apiMethodTypeGet","sendMessage","id","receive","bind","subScribedMessages","RestAPIResponceMessage","SessionSaveMessage","SessionResponseMessage","state","arrayHolder","attachBuildingBlock","componentDidMount","isPlatformWeb","navigation","addListener","from","message","debugLog","getData","SessionResponseToken","setState","RestAPIResponceDataMessage","responseJson","RestAPIResponceSuccessMessage","errors","data","errorReponse","RestAPIResponceErrorMessage","parseApiCatchErrorResponse"],"mappings":"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","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n\n// Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  arrayHolder: any;\n  token: string;\n  // Customizable Area End\n}\n\ninterface SS {\n  id: any;\n}\n\nexport default class CatalogueController extends BlockComponent<Props, S, SS> {\n  getProductApiCallId: any;\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.SessionSaveMessage),\n      getName(MessageEnum.SessionResponseMessage)\n    ];\n\n    this.state = {\n      arrayHolder: [],\n      token: \"\"\n    };\n    // Customizable Area End\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n  async componentDidMount() {\n    super.componentDidMount();\n    this.getToken();\n    if (this.isPlatformWeb() === false) {\n      this.props.navigation.addListener(\"willFocus\", () => {\n        this.getToken();\n      });\n    }\n  }\n  getToken = () => {\n    const msg: Message = new Message(\n      getName(MessageEnum.SessionRequestMessage)\n    );\n    this.send(msg);\n  };\n  getListRequest = (token: any) => {\n    const header = {\n      \"Content-Type\": configJSON.productApiContentType,\n      token: token\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getProductApiCallId = requestMessage.messageId;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.productAPiEndPoint\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.apiMethodTypeGet\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n  async receive(from: string, message: Message) {\n    // Customizable Area Start\n    runEngine.debugLog(\"Message Recived\", message);\n    if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n      let token = message.getData(getName(MessageEnum.SessionResponseToken));\n      this.setState({ token: token });\n      this.getListRequest(token);\n    }\n    if (\n      getName(MessageEnum.RestAPIResponceMessage) === message.id &&\n      this.getProductApiCallId != null &&\n      this.getProductApiCallId ===\n        message.getData(getName(MessageEnum.RestAPIResponceDataMessage))\n    ) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      if (responseJson && !responseJson.errors && responseJson.data) {\n        this.setState({ arrayHolder: responseJson.data });\n        runEngine.debugLog(\"arrayHolder\", this.state.arrayHolder);\n      } else {\n        var errorReponse = message.getData(\n          getName(MessageEnum.RestAPIResponceErrorMessage)\n        );\n        this.parseApiCatchErrorResponse(errorReponse);\n      }\n    }\n    // Customizable Area End\n  }\n\n  // Customizable Area Start\n  // Customizable Area End\n}\n"]},"metadata":{},"sourceType":"module"}