{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport MessageEnum, { getName } from '../Messages/MessageEnum';\nimport { runEngine } from '../RunEngine';\nimport { Message } from '../Message';\nimport { Block } from '../Block';\nimport StorageProvider from '../StorageProvider';\nexport default class AuthManagerBlock extends Block {\n  constructor() {\n    super();\n    this.userCredsKey = 'saveUserInfo';\n    this.userName = void 0;\n    this.phoneNumber = void 0;\n    this.countryCode = void 0;\n    runEngine.attachBuildingBlock(this, [getName(MessageEnum.AuthenticateUserMessage), getName(MessageEnum.LoginFaliureMessage), getName(MessageEnum.RequestUserSession)]);\n  }\n\n  static getInstance() {\n    if (!AuthManagerBlock.instance) {\n      AuthManagerBlock.instance = new AuthManagerBlock();\n    }\n\n    return AuthManagerBlock.instance;\n  }\n\n  receive(from, message) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var requestMessage;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = message.id;\n            _context.next = _context.t0 === getName(MessageEnum.AuthenticateUserMessage) ? 3 : _context.t0 === getName(MessageEnum.RequestUserSession) ? 6 : 7;\n            break;\n\n          case 3:\n            requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n            requestMessage.initializeFromObject(message.properties);\n            return _context.abrupt(\"break\", 7);\n\n          case 6:\n            return _context.abrupt(\"break\", 7);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  saveUserData(countryCode, userName, password, isRememberMe) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var userInfo;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (isRememberMe) {\n              _context2.next = 4;\n              break;\n            }\n\n            _this.clearUserData();\n\n            _context2.next = 14;\n            break;\n\n          case 4:\n            _context2.prev = 4;\n            userInfo = {\n              id: userName,\n              countrycode: countryCode,\n              password: password\n            };\n            _context2.next = 8;\n            return StorageProvider.set(_this.userCredsKey, JSON.stringify(userInfo));\n\n          case 8:\n            _this.countryCode = countryCode;\n            _this.userName = userName;\n            _context2.next = 14;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](4);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[4, 12]]);\n    }))();\n  }\n\n  clearUserData() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return StorageProvider.set(_this2.userCredsKey, '');\n\n          case 2:\n            _this2.userName = null;\n            _this2.countryCode = null;\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }))();\n  }\n\n}\nAuthManagerBlock.instance = void 0;","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/framework/src/Blocks/AuthManagerBlock.tsx"],"names":["MessageEnum","getName","runEngine","Message","Block","StorageProvider","AuthManagerBlock","constructor","userCredsKey","userName","phoneNumber","countryCode","attachBuildingBlock","AuthenticateUserMessage","LoginFaliureMessage","RequestUserSession","getInstance","instance","receive","from","message","id","requestMessage","RestAPIRequestMessage","initializeFromObject","properties","saveUserData","password","isRememberMe","clearUserData","userInfo","countrycode","set","JSON","stringify"],"mappings":";;AAAA,OAAOA,WAAP,IAAsBC,OAAtB,QAAqC,yBAArC;AAGA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,eAAe,MAAMC,gBAAN,SAA+BF,KAA/B,CAAqC;AAS1CG,EAAAA,WAAR,GAAsB;AACpB;AADoB,SANtBC,YAMsB,GANC,cAMD;AAAA,SAJtBC,QAIsB;AAAA,SAHtBC,WAGsB;AAAA,SAFtBC,WAEsB;AAGpBT,IAAAA,SAAS,CAACU,mBAAV,CAA8B,IAA9B,EAA8C,CAC5CX,OAAO,CAACD,WAAW,CAACa,uBAAb,CADqC,EAE5CZ,OAAO,CAACD,WAAW,CAACc,mBAAb,CAFqC,EAG5Cb,OAAO,CAACD,WAAW,CAACe,kBAAb,CAHqC,CAA9C;AAKD;;AAED,SAAOC,WAAP,GAAuC;AACrC,QAAI,CAACV,gBAAgB,CAACW,QAAtB,EAAgC;AAC9BX,MAAAA,gBAAgB,CAACW,QAAjB,GAA4B,IAAIX,gBAAJ,EAA5B;AACD;;AACD,WAAOA,gBAAgB,CAACW,QAAxB;AACD;;AAEKC,EAAAA,OAAN,CAAcC,IAAd,EAA4BC,OAA5B,EAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACpCA,OAAO,CAACC,EAD4B;AAAA,4CAErCpB,OAAO,CAACD,WAAW,CAACa,uBAAb,CAF8B,uBAUrCZ,OAAO,CAACD,WAAW,CAACe,kBAAb,CAV8B;AAAA;;AAAA;AAGlCO,YAAAA,cAHkC,GAGjB,IAAInB,OAAJ,CACrBF,OAAO,CAACD,WAAW,CAACuB,qBAAb,CADc,CAHiB;AAMxCD,YAAAA,cAAc,CAACE,oBAAf,CAAoCJ,OAAO,CAACK,UAA5C;AANwC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc7C;;AAEKC,EAAAA,YAAN,CACEf,WADF,EAEEF,QAFF,EAGEkB,QAHF,EAIEC,YAJF,EAKE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACKA,YADL;AAAA;AAAA;AAAA;;AAEE,YAAA,KAAI,CAACC,aAAL;;AAFF;AAAA;;AAAA;AAAA;AAKUC,YAAAA,QALV,GAKqB;AACfT,cAAAA,EAAE,EAAEZ,QADW;AAEfsB,cAAAA,WAAW,EAAEpB,WAFE;AAGfgB,cAAAA,QAAQ,EAAEA;AAHK,aALrB;AAAA;AAAA,mBAUUtB,eAAe,CAAC2B,GAAhB,CAAoB,KAAI,CAACxB,YAAzB,EAAuCyB,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAvC,CAVV;;AAAA;AAYI,YAAA,KAAI,CAACnB,WAAL,GAAmBA,WAAnB;AACA,YAAA,KAAI,CAACF,QAAL,GAAgBA,QAAhB;AAbJ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBD;;AAEKoB,EAAAA,aAAN,GAAsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACdxB,eAAe,CAAC2B,GAAhB,CAAoB,MAAI,CAACxB,YAAzB,EAAuC,EAAvC,CADc;;AAAA;AAEpB,YAAA,MAAI,CAACC,QAAL,GAAgB,IAAhB;AACA,YAAA,MAAI,CAACE,WAAL,GAAmB,IAAnB;;AAHoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAIrB;;AArEiD;AAA/BL,gB,CACJW,Q","sourcesContent":["import MessageEnum, { getName } from '../Messages/MessageEnum';\nimport { IBlock } from '../IBlock';\nimport { IUserSession } from '../Interfaces/IUserSession';\nimport { runEngine } from '../RunEngine';\nimport { Message } from '../Message';\nimport { Block } from '../Block';\nimport StorageProvider from '../StorageProvider';\n\nexport default class AuthManagerBlock extends Block {\n  private static instance: AuthManagerBlock;\n\n  userCredsKey: string = 'saveUserInfo';\n\n  userName: null;\n  phoneNumber: null;\n  countryCode: null;\n\n  private constructor() {\n    super();\n\n    runEngine.attachBuildingBlock(this as IBlock, [\n      getName(MessageEnum.AuthenticateUserMessage),\n      getName(MessageEnum.LoginFaliureMessage),\n      getName(MessageEnum.RequestUserSession),\n    ]);\n  }\n\n  static getInstance(): AuthManagerBlock {\n    if (!AuthManagerBlock.instance) {\n      AuthManagerBlock.instance = new AuthManagerBlock();\n    }\n    return AuthManagerBlock.instance;\n  }\n\n  async receive(from: string, message: Message) {\n    switch (message.id) {\n      case getName(MessageEnum.AuthenticateUserMessage): {\n        const requestMessage = new Message(\n          getName(MessageEnum.RestAPIRequestMessage)\n        );\n        requestMessage.initializeFromObject(message.properties);\n\n        break;\n      }\n      case getName(MessageEnum.RequestUserSession): {\n        break;\n      }\n    }\n  }\n\n  async saveUserData(\n    countryCode: any,\n    userName: any,\n    password: any,\n    isRememberMe: any\n  ) {\n    if (!isRememberMe) {\n      this.clearUserData();\n    } else {\n      try {\n        const userInfo = {\n          id: userName,\n          countrycode: countryCode,\n          password: password,\n        };\n        await StorageProvider.set(this.userCredsKey, JSON.stringify(userInfo));\n\n        this.countryCode = countryCode;\n        this.userName = userName;\n      } catch {}\n    }\n  }\n\n  async clearUserData() {\n    await StorageProvider.set(this.userCredsKey, '');\n    this.userName = null;\n    this.countryCode = null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}