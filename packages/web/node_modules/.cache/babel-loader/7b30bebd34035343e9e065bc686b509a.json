{"ast":null,"code":"import _objectWithoutProperties from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/react-native-elements/src/tile/FeaturedTile.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { ViewPropTypes, BackgroundImage, withTheme } from '../config';\nimport { renderNode } from '../helpers';\nimport Text from '../text/Text';\nimport Icon from '../icons/Icon';\n\nconst renderText = (content, defaultProps, style) => renderNode(Text, content, _objectSpread(_objectSpread({}, defaultProps), {}, {\n  style: StyleSheet.flatten([style, defaultProps && defaultProps.style])\n}));\n\nconst FeaturedTile = props => {\n  const title = props.title,\n        icon = props.icon,\n        caption = props.caption,\n        imageSrc = props.imageSrc,\n        containerStyle = props.containerStyle,\n        imageContainerStyle = props.imageContainerStyle,\n        overlayContainerStyle = props.overlayContainerStyle,\n        iconContainerStyle = props.iconContainerStyle,\n        titleStyle = props.titleStyle,\n        captionStyle = props.captionStyle,\n        ImageComponent = props.ImageComponent,\n        imageProps = props.imageProps,\n        attributes = _objectWithoutProperties(props, [\"title\", \"icon\", \"caption\", \"imageSrc\", \"containerStyle\", \"imageContainerStyle\", \"overlayContainerStyle\", \"iconContainerStyle\", \"titleStyle\", \"captionStyle\", \"ImageComponent\", \"imageProps\"]);\n\n  const _props$width = props.width,\n        width = _props$width === void 0 ? Dimensions.get('window').width : _props$width,\n        _props$height = props.height,\n        height = _props$height === void 0 ? width * 0.8 : _props$height;\n  const styles = StyleSheet.create({\n    container: {\n      width,\n      height\n    },\n    imageContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width,\n      height\n    },\n    overlayContainer: {\n      flex: 1,\n      alignItems: 'center',\n      alignSelf: 'stretch',\n      justifyContent: 'center',\n      paddingLeft: 25,\n      paddingRight: 25,\n      paddingTop: 45,\n      paddingBottom: 40,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    text: {\n      color: '#ffffff',\n      backgroundColor: 'rgba(0,0,0,0)',\n      marginBottom: 15,\n      textAlign: 'center'\n    },\n    iconContainer: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignSelf: 'center'\n    }\n  });\n  return /*#__PURE__*/React.createElement(TouchableOpacity, Object.assign({}, attributes, {\n    style: StyleSheet.flatten([styles.container, containerStyle && containerStyle]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ImageComponent, Object.assign({\n    resizeMode: \"cover\"\n  }, imageProps, {\n    source: imageSrc,\n    style: StyleSheet.flatten([styles.imageContainer, imageContainerStyle && imageContainerStyle]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(View, {\n    style: StyleSheet.flatten([styles.overlayContainer, overlayContainerStyle && overlayContainerStyle]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: StyleSheet.flatten([styles.iconContainer, iconContainerStyle && iconContainerStyle]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, icon && /*#__PURE__*/React.createElement(Icon, Object.assign({}, icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 22\n    }\n  }))), /*#__PURE__*/React.createElement(Text, {\n    testID: \"featuredTileTitle\",\n    h4: true,\n    style: StyleSheet.flatten([styles.text, titleStyle && titleStyle]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, title), renderText(caption, {\n    style: captionStyle\n  }, styles.text))));\n};\n\nFeaturedTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.node,\n  imageSrc: Image.propTypes.source,\n  onPress: PropTypes.func,\n  containerStyle: ViewPropTypes.style,\n  iconContainerStyle: ViewPropTypes.style,\n  imageContainerStyle: ViewPropTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  titleStyle: NativeText.propTypes.style,\n  captionStyle: NativeText.propTypes.style,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  ImageComponent: PropTypes.elementType,\n  imageProps: PropTypes.object\n};\nFeaturedTile.defaultProps = {\n  ImageComponent: BackgroundImage,\n  imageProps: {}\n};\nexport { FeaturedTile };\nexport default withTheme(FeaturedTile, 'FeaturedTile');","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/react-native-elements/src/tile/FeaturedTile.js"],"names":["React","PropTypes","ViewPropTypes","BackgroundImage","withTheme","renderNode","Text","Icon","renderText","content","defaultProps","style","StyleSheet","flatten","FeaturedTile","props","title","icon","caption","imageSrc","containerStyle","imageContainerStyle","overlayContainerStyle","iconContainerStyle","titleStyle","captionStyle","ImageComponent","imageProps","attributes","width","Dimensions","get","height","styles","create","container","imageContainer","alignItems","justifyContent","overlayContainer","flex","alignSelf","paddingLeft","paddingRight","paddingTop","paddingBottom","position","top","left","right","bottom","text","color","backgroundColor","marginBottom","textAlign","iconContainer","propTypes","string","object","node","Image","source","onPress","func","NativeText","number","elementType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableOpacity,\n  Text as NativeText,\n  View,\n  Image,\n  StyleSheet,\n  Dimensions,\n} from 'react-native';\n\nimport { ViewPropTypes, BackgroundImage, withTheme } from '../config';\nimport { renderNode } from '../helpers';\n\nimport Text from '../text/Text';\nimport Icon from '../icons/Icon';\n\nconst renderText = (content, defaultProps, style) =>\n  renderNode(Text, content, {\n    ...defaultProps,\n    style: StyleSheet.flatten([style, defaultProps && defaultProps.style]),\n  });\n\nconst FeaturedTile = props => {\n  const {\n    title,\n    icon,\n    caption,\n    imageSrc,\n    containerStyle,\n    imageContainerStyle,\n    overlayContainerStyle,\n    iconContainerStyle,\n    titleStyle,\n    captionStyle,\n    ImageComponent,\n    imageProps,\n    ...attributes\n  } = props;\n\n  const {\n    width = Dimensions.get('window').width,\n    height = width * 0.8,\n  } = props;\n\n  const styles = StyleSheet.create({\n    container: {\n      width,\n      height,\n    },\n    imageContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width,\n      height,\n    },\n    overlayContainer: {\n      flex: 1,\n      alignItems: 'center',\n      alignSelf: 'stretch',\n      justifyContent: 'center',\n      paddingLeft: 25,\n      paddingRight: 25,\n      paddingTop: 45,\n      paddingBottom: 40,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    },\n    text: {\n      color: '#ffffff',\n      backgroundColor: 'rgba(0,0,0,0)',\n      marginBottom: 15,\n      textAlign: 'center',\n    },\n    iconContainer: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignSelf: 'center',\n    },\n  });\n\n  return (\n    <TouchableOpacity\n      {...attributes}\n      style={StyleSheet.flatten([\n        styles.container,\n        containerStyle && containerStyle,\n      ])}\n    >\n      <ImageComponent\n        resizeMode=\"cover\"\n        {...imageProps}\n        source={imageSrc}\n        style={StyleSheet.flatten([\n          styles.imageContainer,\n          imageContainerStyle && imageContainerStyle,\n        ])}\n      >\n        <View\n          style={StyleSheet.flatten([\n            styles.overlayContainer,\n            overlayContainerStyle && overlayContainerStyle,\n          ])}\n        >\n          <View\n            style={StyleSheet.flatten([\n              styles.iconContainer,\n              iconContainerStyle && iconContainerStyle,\n            ])}\n          >\n            {icon && <Icon {...icon} />}\n          </View>\n          <Text\n            testID=\"featuredTileTitle\"\n            h4\n            style={StyleSheet.flatten([styles.text, titleStyle && titleStyle])}\n          >\n            {title}\n          </Text>\n          {renderText(caption, { style: captionStyle }, styles.text)}\n        </View>\n      </ImageComponent>\n    </TouchableOpacity>\n  );\n};\n\nFeaturedTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.node,\n  imageSrc: Image.propTypes.source,\n  onPress: PropTypes.func,\n  containerStyle: ViewPropTypes.style,\n  iconContainerStyle: ViewPropTypes.style,\n  imageContainerStyle: ViewPropTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  titleStyle: NativeText.propTypes.style,\n  captionStyle: NativeText.propTypes.style,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  ImageComponent: PropTypes.elementType,\n  imageProps: PropTypes.object,\n};\n\nFeaturedTile.defaultProps = {\n  ImageComponent: BackgroundImage,\n  imageProps: {},\n};\n\nexport { FeaturedTile };\nexport default withTheme(FeaturedTile, 'FeaturedTile');\n"]},"metadata":{},"sourceType":"module"}