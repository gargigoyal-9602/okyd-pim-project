{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// You can only update code inside the customizable area. Other changes will be detected during commit and your commit will be rejected.\nimport { BlockComponent } from '../../../framework/src/BlockComponent';\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport MessageEnum, { getName } from '../Messages/MessageEnum';\n\nclass NavigationBlock extends BlockComponent {\n  constructor(props = {\n    navigation: null\n  }) {\n    super(props);\n    this.receive = this.receive.bind(this);\n    runEngine.attachBuildingBlock(this, [getName(MessageEnum.NavigationMessage), getName(MessageEnum.NavigationPropsMessage)]);\n  }\n\n  receive(from, message) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var raiseMessage, self, screenTitle, props;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (message.id === getName(MessageEnum.NavigationMessage)) {\n              // debugger;\n              raiseMessage = message.getData(getName(MessageEnum.NavigationRaiseMessage));\n\n              if (raiseMessage !== undefined) {\n                self = _this;\n                setTimeout(function () {\n                  self.send(raiseMessage);\n                }, 0);\n              }\n\n              screenTitle = message.getData(getName(MessageEnum.NavigationScreenNameMessage));\n              props = message.getData(getName(MessageEnum.NavigationPropsMessage));\n\n              if (props !== undefined && props.navigation !== undefined) {\n                props.navigation.set;\n                props.navigation.navigate(message.getData(getName(MessageEnum.NavigationTargetMessage)), {\n                  navigationBarTitleText: screenTitle\n                });\n              }\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n}\n\nexport default NavigationBlock;","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/framework/src/Blocks/NavigationBlock.tsx"],"names":["BlockComponent","runEngine","MessageEnum","getName","NavigationBlock","constructor","props","navigation","receive","bind","attachBuildingBlock","NavigationMessage","NavigationPropsMessage","from","message","id","raiseMessage","getData","NavigationRaiseMessage","undefined","self","setTimeout","send","screenTitle","NavigationScreenNameMessage","set","navigate","NavigationTargetMessage","navigationBarTitleText"],"mappings":";;AAAA;AAEA,SAASA,cAAT,QAA+B,uCAA/B;AAEA,SAASC,SAAT,QAA0B,kCAA1B;AAEA,OAAOC,WAAP,IAAsBC,OAAtB,QAAqC,yBAArC;;AAMA,MAAMC,eAAN,SAA8BJ,cAA9B,CAA2D;AACzDK,EAAAA,WAAW,CAACC,KAAY,GAAG;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAhB,EAAsC;AAC/C,UAAMD,KAAN;AACA,SAAKE,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACAR,IAAAA,SAAS,CAACS,mBAAV,CAA8B,IAA9B,EAA8C,CAC5CP,OAAO,CAACD,WAAW,CAACS,iBAAb,CADqC,EAE5CR,OAAO,CAACD,WAAW,CAACU,sBAAb,CAFqC,CAA9C;AAID;;AAEKJ,EAAAA,OAAN,CAAcK,IAAd,EAA4BC,OAA5B,EAA8C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAE5C,gBAAIA,OAAO,CAACC,EAAR,KAAeZ,OAAO,CAACD,WAAW,CAACS,iBAAb,CAA1B,EAA2D;AACzD;AACMK,cAAAA,YAFmD,GAE3BF,OAAO,CAACG,OAAR,CAC5Bd,OAAO,CAACD,WAAW,CAACgB,sBAAb,CADqB,CAF2B;;AAKzD,kBAAIF,YAAY,KAAKG,SAArB,EAAgC;AACxBC,gBAAAA,IADwB,GACjB,KADiB;AAE9BC,gBAAAA,UAAU,CAAC,YAAW;AACpBD,kBAAAA,IAAI,CAACE,IAAL,CAAUN,YAAV;AACD,iBAFS,EAEP,CAFO,CAAV;AAGD;;AACKO,cAAAA,WAXmD,GAWrCT,OAAO,CAACG,OAAR,CAClBd,OAAO,CAACD,WAAW,CAACsB,2BAAb,CADW,CAXqC;AAcnDlB,cAAAA,KAdmD,GAc3CQ,OAAO,CAACG,OAAR,CACZd,OAAO,CAACD,WAAW,CAACU,sBAAb,CADK,CAd2C;;AAiBzD,kBAAIN,KAAK,KAAKa,SAAV,IAAuBb,KAAK,CAACC,UAAN,KAAqBY,SAAhD,EAA2D;AACzDb,gBAAAA,KAAK,CAACC,UAAN,CAAiBkB,GAAjB;AACAnB,gBAAAA,KAAK,CAACC,UAAN,CAAiBmB,QAAjB,CACEZ,OAAO,CAACG,OAAR,CAAgBd,OAAO,CAACD,WAAW,CAACyB,uBAAb,CAAvB,CADF,EAEE;AAAEC,kBAAAA,sBAAsB,EAAEL;AAA1B,iBAFF;AAID;AACF;;AA1B2C;AAAA;AAAA;AAAA;AAAA;AAAA;AA2B7C;;AArCwD;;AAwC3D,eAAenB,eAAf","sourcesContent":["// You can only update code inside the customizable area. Other changes will be detected during commit and your commit will be rejected.\n\nimport { BlockComponent } from '../../../framework/src/BlockComponent';\nimport { IBlock } from \"../../../framework/src/IBlock\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport { Message } from \"../../../framework/src/Message\";\nimport MessageEnum, { getName } from '../Messages/MessageEnum';\n\ninterface Props {}\ninterface S {}\ninterface SS {}\n\nclass NavigationBlock extends BlockComponent<Props, S, SS> {\n  constructor(props: Props = { navigation: null }) {\n    super(props);\n    this.receive = this.receive.bind(this);\n    runEngine.attachBuildingBlock(this as IBlock, [\n      getName(MessageEnum.NavigationMessage),\n      getName(MessageEnum.NavigationPropsMessage)\n    ]);\n  }\n\n  async receive(from: string, message: Message) {\n\n    if (message.id === getName(MessageEnum.NavigationMessage)) {\n      // debugger;\n      const raiseMessage: Message = message.getData(\n        getName(MessageEnum.NavigationRaiseMessage)\n      );\n      if (raiseMessage !== undefined) {\n        const self = this;\n        setTimeout(function() {\n          self.send(raiseMessage);\n        }, 0);\n      }\n      const screenTitle = message.getData(\n        getName(MessageEnum.NavigationScreenNameMessage)\n      );\n      const props = message.getData(\n        getName(MessageEnum.NavigationPropsMessage)\n      );\n      if (props !== undefined && props.navigation !== undefined) {\n        props.navigation.set;\n        props.navigation.navigate(\n          message.getData(getName(MessageEnum.NavigationTargetMessage)),\n          { navigationBarTitleText: screenTitle }\n        );\n      }\n    }\n  }\n}\n\nexport default NavigationBlock;\n"]},"metadata":{},"sourceType":"module"}