{"ast":null,"code":"import { runEngine } from '../../../framework/src/RunEngine';\nimport { Message } from '../../../framework/src/Message';\nimport MessageEnum from '../../../framework/src/Messages/MessageEnum';\nimport { getName } from '../../../framework/src/Messages/MessageEnum';\nexport default class MobilePhoneToOTPAdapter {\n  constructor() {\n    this.send = void 0;\n\n    const uuidv4 = require('uuid/v4');\n\n    var blockId = uuidv4();\n\n    this.send = message => runEngine.sendMessage(blockId, message);\n\n    runEngine.attachBuildingBlock(this, [getName(MessageEnum.NavigationMobilePhoneOTPMessage), getName(MessageEnum.NavigationForgotPasswordOTPMessage)]);\n  }\n\n  convert(from) {\n    const to = new Message(getName(MessageEnum.NavigationMessage));\n\n    if (from.getData(getName(MessageEnum.EnterOTPAsForgotPasswordMessage))) {\n      to.addData(getName(MessageEnum.NavigationTargetMessage), \"ForgotPasswordOTP\");\n    } else {\n      to.addData(getName(MessageEnum.NavigationTargetMessage), \"OTPInputAuth\");\n    }\n\n    to.addData(getName(MessageEnum.NavigationPropsMessage), from.getData(getName(MessageEnum.NavigationPropsMessage)));\n    const raiseMessage = new Message(getName(MessageEnum.NavigationPayLoadMessage));\n    raiseMessage.addData(getName(MessageEnum.AuthTokenDataMessage), from.getData(getName(MessageEnum.AuthTokenDataMessage)));\n    raiseMessage.addData(getName(MessageEnum.AuthTokenPhoneNumberMessage), from.getData(getName(MessageEnum.AuthTokenPhoneNumberMessage)));\n    raiseMessage.addData(getName(MessageEnum.AuthTokenEmailMessage), from.getData(getName(MessageEnum.AuthTokenEmailMessage)));\n    raiseMessage.addData(getName(MessageEnum.EnterOTPAsForgotPasswordMessage), from.getData(getName(MessageEnum.EnterOTPAsForgotPasswordMessage)));\n    to.addData(getName(MessageEnum.NavigationRaiseMessage), raiseMessage);\n    return to;\n  }\n\n  receive(from, message) {\n    this.send(this.convert(message));\n  }\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/adapters/src/MobilePhoneToOTPAdapter.tsx"],"names":["runEngine","Message","MessageEnum","getName","MobilePhoneToOTPAdapter","constructor","send","uuidv4","require","blockId","message","sendMessage","attachBuildingBlock","NavigationMobilePhoneOTPMessage","NavigationForgotPasswordOTPMessage","convert","from","to","NavigationMessage","getData","EnterOTPAsForgotPasswordMessage","addData","NavigationTargetMessage","NavigationPropsMessage","raiseMessage","NavigationPayLoadMessage","AuthTokenDataMessage","AuthTokenPhoneNumberMessage","AuthTokenEmailMessage","NavigationRaiseMessage","receive"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,kCAAxB;AAGA,SAAQC,OAAR,QAAsB,gCAAtB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,SAAQC,OAAR,QAAsB,6CAAtB;AAGA,eAAe,MAAMC,uBAAN,CAA+B;AAE1CC,EAAAA,WAAW,GAAG;AAAA,SADdC,IACc;;AACV,UAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,QAAIC,OAAO,GAAGF,MAAM,EAApB;;AACA,SAAKD,IAAL,GAAYI,OAAO,IAAIV,SAAS,CAACW,WAAV,CAAsBF,OAAtB,EAA+BC,OAA/B,CAAvB;;AACAV,IAAAA,SAAS,CAACY,mBAAV,CAA8B,IAA9B,EAA8C,CAACT,OAAO,CAACD,WAAW,CAACW,+BAAb,CAAR,EAAuDV,OAAO,CAACD,WAAW,CAACY,kCAAb,CAA9D,CAA9C;AACH;;AACDC,EAAAA,OAAO,CAACC,IAAD,EAAyB;AAC5B,UAAMC,EAAE,GAAG,IAAIhB,OAAJ,CAAYE,OAAO,CAACD,WAAW,CAACgB,iBAAb,CAAnB,CAAX;;AAEA,QAAKF,IAAI,CAACG,OAAL,CAAahB,OAAO,CAACD,WAAW,CAACkB,+BAAb,CAApB,CAAL,EAAyE;AACrEH,MAAAA,EAAE,CAACI,OAAH,CAAWlB,OAAO,CAACD,WAAW,CAACoB,uBAAb,CAAlB,EAAyD,mBAAzD;AACH,KAFD,MAEO;AACHL,MAAAA,EAAE,CAACI,OAAH,CAAWlB,OAAO,CAACD,WAAW,CAACoB,uBAAb,CAAlB,EAAyD,cAAzD;AACH;;AAEDL,IAAAA,EAAE,CAACI,OAAH,CAAWlB,OAAO,CAACD,WAAW,CAACqB,sBAAb,CAAlB,EACIP,IAAI,CAACG,OAAL,CAAahB,OAAO,CAACD,WAAW,CAACqB,sBAAb,CAApB,CADJ;AAGA,UAAMC,YAAoB,GAAG,IAAIvB,OAAJ,CAAYE,OAAO,CAACD,WAAW,CAACuB,wBAAb,CAAnB,CAA7B;AACAD,IAAAA,YAAY,CAACH,OAAb,CACIlB,OAAO,CAACD,WAAW,CAACwB,oBAAb,CADX,EAEIV,IAAI,CAACG,OAAL,CAAahB,OAAO,CAACD,WAAW,CAACwB,oBAAb,CAApB,CAFJ;AAKAF,IAAAA,YAAY,CAACH,OAAb,CACIlB,OAAO,CAACD,WAAW,CAACyB,2BAAb,CADX,EAEIX,IAAI,CAACG,OAAL,CAAahB,OAAO,CAACD,WAAW,CAACyB,2BAAb,CAApB,CAFJ;AAKAH,IAAAA,YAAY,CAACH,OAAb,CACIlB,OAAO,CAACD,WAAW,CAAC0B,qBAAb,CADX,EAEIZ,IAAI,CAACG,OAAL,CAAahB,OAAO,CAACD,WAAW,CAAC0B,qBAAb,CAApB,CAFJ;AAKAJ,IAAAA,YAAY,CAACH,OAAb,CACIlB,OAAO,CAACD,WAAW,CAACkB,+BAAb,CADX,EAEIJ,IAAI,CAACG,OAAL,CAAahB,OAAO,CAACD,WAAW,CAACkB,+BAAb,CAApB,CAFJ;AAKAH,IAAAA,EAAE,CAACI,OAAH,CAAWlB,OAAO,CAACD,WAAW,CAAC2B,sBAAb,CAAlB,EACIL,YADJ;AAGA,WAAOP,EAAP;AACH;;AACDa,EAAAA,OAAO,CAACd,IAAD,EAAeN,OAAf,EAAuC;AAC3C,SAAKJ,IAAL,CAAU,KAAKS,OAAL,CAAaL,OAAb,CAAV;AACF;;AAhDyC","sourcesContent":["import {runEngine} from '../../../framework/src/RunEngine'\nimport {Block} from '../../../framework/src/Block';\nimport {IBlock} from '../../../framework/src/IBlock';\nimport {Message} from '../../../framework/src/Message';\nimport MessageEnum from '../../../framework/src/Messages/MessageEnum';\nimport {getName} from '../../../framework/src/Messages/MessageEnum';\nimport NavigationMessage from '../../../framework/src/Messages/NavigationMessage';\n\nexport default class MobilePhoneToOTPAdapter  {\n    send: (message: Message) => void;\n    constructor() {\n        const uuidv4 = require('uuid/v4');\n        var blockId = uuidv4();\n        this.send = message => runEngine.sendMessage(blockId, message);\n        runEngine.attachBuildingBlock(this as IBlock, [getName(MessageEnum.NavigationMobilePhoneOTPMessage), getName(MessageEnum.NavigationForgotPasswordOTPMessage)]);\n    }\n    convert(from: Message): Message {\n        const to = new Message(getName(MessageEnum.NavigationMessage));\n\n        if ( from.getData(getName(MessageEnum.EnterOTPAsForgotPasswordMessage))) {\n            to.addData(getName(MessageEnum.NavigationTargetMessage), \"ForgotPasswordOTP\")\n        } else {\n            to.addData(getName(MessageEnum.NavigationTargetMessage), \"OTPInputAuth\")\n        }\n    \n        to.addData(getName(MessageEnum.NavigationPropsMessage), \n            from.getData(getName(MessageEnum.NavigationPropsMessage)))\n            \n        const raiseMessage:Message = new Message(getName(MessageEnum.NavigationPayLoadMessage));\n        raiseMessage.addData(\n            getName(MessageEnum.AuthTokenDataMessage),\n            from.getData(getName(MessageEnum.AuthTokenDataMessage))\n        );\n\n        raiseMessage.addData(\n            getName(MessageEnum.AuthTokenPhoneNumberMessage), \n            from.getData(getName(MessageEnum.AuthTokenPhoneNumberMessage))\n        );\n\n        raiseMessage.addData(\n            getName(MessageEnum.AuthTokenEmailMessage), \n            from.getData(getName(MessageEnum.AuthTokenEmailMessage))\n        );\n\n        raiseMessage.addData(\n            getName(MessageEnum.EnterOTPAsForgotPasswordMessage), \n            from.getData(getName(MessageEnum.EnterOTPAsForgotPasswordMessage))\n        );\n\n        to.addData(getName(MessageEnum.NavigationRaiseMessage),\n            raiseMessage)\n        \n        return to;\n    }\n    receive(from: string, message: Message): void {\n       this.send(this.convert(message));\n    }\n}"]},"metadata":{},"sourceType":"module"}