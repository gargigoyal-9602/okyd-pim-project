{"ast":null,"code":"var _jsxFileName = \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/email-account-login/src/EmailAccountLoginBlock.tsx\";\nimport React from \"react\"; // Customizable Area Start\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\"; //@ts-ignore\n\nimport CustomCheckBox from \"../../../components/src/CustomCheckBox\"; // Customizable Area End\n\nimport EmailAccountLoginController from \"./EmailAccountLoginController\";\nexport default class EmailAccountLoginBlock extends EmailAccountLoginController {\n  // Customizable Area Start\n  // Customizable Area End\n  constructor(props) {\n    super(props); // Customizable Area Start\n    // Customizable Area End\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // Required for all blocks\n      React.createElement(ScrollView, {\n        keyboardShouldPersistTaps: \"always\",\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n        testID: \"Background\",\n        onPress: () => {\n          this.hideKeyboard();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, this.isPlatformWeb() ? /*#__PURE__*/React.createElement(Text, {\n        style: styles.labelTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, this.labelTitle) : null, /*#__PURE__*/React.createElement(Text, {\n        style: styles.titleWhySignUp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, this.state.labelHeader), /*#__PURE__*/React.createElement(TextInput, Object.assign({\n        testID: \"txtInputEmail\" //Merge Engine::From BDS\n        ,\n        style: styles.bgMobileInput //UI Engine::From Sketch\n        ,\n        placeholder: \"Email\" //UI Engine::From Sketch\n\n      }, this.txtInputEmailProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(View, {\n        style: styles.bgPasswordContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextInput, Object.assign({\n        testID: \"txtInputPassword\" //Merge Engine::From BDS\n        ,\n        style: styles.bgPasswordInput //UI Engine::From Sketch\n        ,\n        placeholder: this.state.placeHolderPassword //UI Engine::From Sketch\n\n      }, this.txtInputPasswordProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(TouchableOpacity, Object.assign({\n        testID: \"btnPasswordShowHide\" //Merge Engine::From BDS\n        ,\n        style: styles.passwordShowHide //UI Engine::From Sketch\n\n      }, this.btnPasswordShowHideProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Image, Object.assign({\n        testID: \"btnPasswordShowHideImage\" //Merge Engine::From BDS - testIDImage\n        ,\n        style: styles.imgPasswordShowhide //UI Engine::From Sketch\n\n      }, this.btnPasswordShowHideImageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(Text, Object.assign({\n        testID: \"btnForgotPassword\" //Merge Engine::From BDS\n        ,\n        style: styles.forgotPassword //UI Engine::From Sketch\n\n      }, this.btnForgotPasswordProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }), \"Forgot password?\"), /*#__PURE__*/React.createElement(View, {\n        style: styles.checkBoxContainerView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CustomCheckBox, Object.assign({\n        testID: \"CustomCheckBox\" //Merge Engine::From BDS\n\n      }, this.CustomCheckBoxProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Text, Object.assign({\n        testID: \"btnRememberMe\" //Merge Engine::From BDS\n        ,\n        style: styles.rememberMe //UI Engine::From Sketch\n\n      }, this.btnRememberMeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }), this.state.labelRememberMe, \" \")), /*#__PURE__*/React.createElement(Button, Object.assign({\n        testID: \"btnEmailLogIn\" //Merge Engine::From BDS\n        ,\n        title: this.state.btnTxtLogin //UI Engine::From Sketch\n\n      }, this.btnEmailLogInProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Text, {\n        style: styles.orLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, this.state.labelOr), /*#__PURE__*/React.createElement(Text, Object.assign({\n        testID: \"btnSocialLogin\" //Merge Engine::From BDS\n        ,\n        style: styles.bgOtherLoginButton //UI Engine::From Sketch\n\n      }, this.btnSocialLoginProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }), this.state.btnTxtSocialLogin))))\n    );\n  }\n\n} // Customizable Area Start\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: Platform.OS === \"web\" ? \"75%\" : \"100%\",\n    maxWidth: 650,\n    backgroundColor: \"#ffffffff\"\n  },\n  titleWhySignUp: {\n    marginBottom: 32,\n    fontSize: 16,\n    textAlign: \"left\",\n    marginVertical: 8\n  },\n  titleOtpInfo: {\n    marginBottom: 32,\n    fontSize: 16,\n    textAlign: \"left\",\n    marginVertical: 8\n  },\n  bgOtherLoginButton: {\n    flexDirection: \"row\",\n    fontSize: 16,\n    textAlign: \"center\",\n    backgroundColor: \"#00000000\",\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: \"#767676\",\n    borderRadius: 2,\n    includeFontPadding: true,\n    padding: 10,\n    color: \"#6200EE\",\n    fontWeight: \"bold\"\n  },\n  bgMobileInput: {\n    flexDirection: \"row\",\n    fontSize: 16,\n    textAlign: \"left\",\n    backgroundColor: \"#00000000\",\n    borderWidth: Platform.OS === \"web\" ? 0 : 1,\n    marginBottom: 16,\n    borderBottomWidth: 1,\n    borderColor: \"#767676\",\n    borderRadius: 2,\n    includeFontPadding: true,\n    padding: 10\n  },\n  bgPasswordInput: {\n    flex: 1,\n    fontSize: 16,\n    textAlign: \"left\",\n    backgroundColor: \"#00000000\",\n    minHeight: 40,\n    includeFontPadding: true\n  },\n  passwordShowHide: {\n    alignSelf: \"center\"\n  },\n  bgPasswordContainer: {\n    flexDirection: \"row\",\n    backgroundColor: \"#00000000\",\n    marginBottom: 16,\n    borderBottomWidth: 1,\n    borderColor: \"#767676\",\n    borderRadius: 2,\n    paddingLeft: 5,\n    borderWidth: Platform.OS === \"web\" ? 0 : 1\n  },\n  bgRectBorder: {\n    borderWidth: 1,\n    borderColor: \"#767676\",\n    borderRadius: 2,\n    marginBottom: 10,\n    padding: 10\n  },\n  labelTitle: {\n    marginTop: 24,\n    marginBottom: 32,\n    fontSize: 32,\n    textAlign: \"left\",\n    marginVertical: 8,\n    color: \"#6200EE\"\n  },\n  imgPasswordShowhide: Platform.OS === \"web\" ? {\n    height: 30,\n    width: 30\n  } : {},\n  forgotPassword: {\n    color: \"#6200EE\",\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    zIndex: -1\n  },\n  checkBoxContainerView: {\n    flexDirection: \"row\",\n    marginBottom: 10,\n    marginLeft: -7,\n    zIndex: -1\n  },\n  rememberMe: {\n    color: \"#6200EE\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    zIndex: -1\n  },\n  orLabel: {\n    color: \"#00000000\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    margin: 20\n  }\n}); // Customizable Area End","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/email-account-login/src/EmailAccountLoginBlock.tsx"],"names":["React","CustomCheckBox","EmailAccountLoginController","EmailAccountLoginBlock","constructor","props","render","styles","container","hideKeyboard","isPlatformWeb","labelTitle","titleWhySignUp","state","labelHeader","bgMobileInput","txtInputEmailProps","bgPasswordContainer","bgPasswordInput","placeHolderPassword","txtInputPasswordProps","passwordShowHide","btnPasswordShowHideProps","imgPasswordShowhide","btnPasswordShowHideImageProps","forgotPassword","btnForgotPasswordProps","checkBoxContainerView","CustomCheckBoxProps","rememberMe","btnRememberMeProps","labelRememberMe","btnTxtLogin","btnEmailLogInProps","orLabel","labelOr","bgOtherLoginButton","btnSocialLoginProps","btnTxtSocialLogin","StyleSheet","create","flex","padding","marginLeft","marginRight","width","Platform","OS","maxWidth","backgroundColor","marginBottom","fontSize","textAlign","marginVertical","titleOtpInfo","flexDirection","borderWidth","borderColor","borderRadius","includeFontPadding","color","fontWeight","borderBottomWidth","minHeight","alignSelf","paddingLeft","bgRectBorder","marginTop","height","zIndex","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// Customizable Area Start\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  TextInput,\n  Button,\n  Image,\n  ScrollView,\n  TouchableWithoutFeedback,\n  Platform\n} from \"react-native\";\n\n//@ts-ignore\nimport CustomCheckBox from \"../../../components/src/CustomCheckBox\";\n// Customizable Area End\n\nimport EmailAccountLoginController, {\n  Props\n} from \"./EmailAccountLoginController\";\n\nexport default class EmailAccountLoginBlock extends EmailAccountLoginController {\n  \n  // Customizable Area Start\n  // Customizable Area End\n\n  constructor(props: Props) {\n    super(props);\n    // Customizable Area Start\n    // Customizable Area End\n  }\n\n  render() {\n    return (\n      // Required for all blocks\n      <ScrollView keyboardShouldPersistTaps=\"always\" style={styles.container}>\n        {/* Required for all blocks */}\n        <TouchableWithoutFeedback\n          testID={\"Background\"}\n          onPress={() => {\n            this.hideKeyboard();\n          }}\n        >\n          {/* Customizable Area Start */}\n          {/* Merge Engine UI Engine Code */}\n          <View>\n            {this.isPlatformWeb() ? (\n              <Text style={styles.labelTitle}>{this.labelTitle}</Text>\n            ) : null}\n\n            <Text style={styles.titleWhySignUp}>{this.state.labelHeader}</Text>\n\n            <TextInput\n              testID=\"txtInputEmail\" //Merge Engine::From BDS\n              style={styles.bgMobileInput} //UI Engine::From Sketch\n              placeholder=\"Email\" //UI Engine::From Sketch\n              {...this.txtInputEmailProps} //Merge Engine::From BDS - {...this.testIDProps}\n            />\n\n            <View style={styles.bgPasswordContainer}>\n              <TextInput\n                testID=\"txtInputPassword\" //Merge Engine::From BDS\n                style={styles.bgPasswordInput} //UI Engine::From Sketch\n                placeholder={this.state.placeHolderPassword} //UI Engine::From Sketch\n                {...this.txtInputPasswordProps} //Merge Engine::From BDS - {...this.testIDProps}\n              />\n\n              <TouchableOpacity\n                testID={\"btnPasswordShowHide\"} //Merge Engine::From BDS\n                style={styles.passwordShowHide} //UI Engine::From Sketch\n                {...this.btnPasswordShowHideProps} //Merge Engine::From BDS - {...this.testIDProps}\n              >\n                <Image\n                  testID={\"btnPasswordShowHideImage\"} //Merge Engine::From BDS - testIDImage\n                  style={styles.imgPasswordShowhide} //UI Engine::From Sketch\n                  {...this.btnPasswordShowHideImageProps} //Merge Engine::From BDS - {...this.testIDProps}\n                />\n              </TouchableOpacity>\n            </View>\n            <Text\n              testID={\"btnForgotPassword\"} //Merge Engine::From BDS\n              style={styles.forgotPassword} //UI Engine::From Sketch\n              {...this.btnForgotPasswordProps} //Merge Engine::From BDS - {...this.testIDProps}\n            >\n              Forgot password?\n            </Text>\n            <View style={styles.checkBoxContainerView}>\n              {/* Refactor for custom CheckBox   */}\n              <CustomCheckBox\n                testID={\"CustomCheckBox\"} //Merge Engine::From BDS\n                {...this.CustomCheckBoxProps} //Merge Engine::From BDS - {...this.testIDProps}\n              />\n\n              <Text\n                testID={\"btnRememberMe\"} //Merge Engine::From BDS\n                style={styles.rememberMe} //UI Engine::From Sketch\n                {...this.btnRememberMeProps} //Merge Engine::From BDS - {...this.testIDProps}\n              >\n                {this.state.labelRememberMe} {/*UI Engine::From Sketch*/}\n              </Text>\n            </View>\n            <Button\n              testID={\"btnEmailLogIn\"} //Merge Engine::From BDS\n              title={this.state.btnTxtLogin} //UI Engine::From Sketch\n              {...this.btnEmailLogInProps} //Merge Engine::From BDS - {...this.testIDProps}\n            />\n            <Text style={styles.orLabel}>{this.state.labelOr}</Text>\n            <Text\n              testID=\"btnSocialLogin\" //Merge Engine::From BDS\n              style={styles.bgOtherLoginButton} //UI Engine::From Sketch\n              {...this.btnSocialLoginProps} //Merge Engine::From BDS - {...this.testIDProps}\n            >\n              {this.state.btnTxtSocialLogin}\n            </Text>\n          </View>\n          {/* Merge Engine UI Engine Code */}\n          {/* Customizable Area End */}\n        </TouchableWithoutFeedback>\n      </ScrollView>\n    );\n  }\n}\n\n// Customizable Area Start\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: Platform.OS === \"web\" ? \"75%\" : \"100%\",\n    maxWidth: 650,\n    backgroundColor: \"#ffffffff\"\n  },\n  titleWhySignUp: {\n    marginBottom: 32,\n    fontSize: 16,\n    textAlign: \"left\",\n    marginVertical: 8\n  },\n  titleOtpInfo: {\n    marginBottom: 32,\n    fontSize: 16,\n    textAlign: \"left\",\n    marginVertical: 8\n  },\n\n  bgOtherLoginButton: {\n    flexDirection: \"row\",\n    fontSize: 16,\n    textAlign: \"center\",\n    backgroundColor: \"#00000000\",\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: \"#767676\",\n    borderRadius: 2,\n    includeFontPadding: true,\n    padding: 10,\n    color: \"#6200EE\",\n    fontWeight: \"bold\"\n  },\n\n  bgMobileInput: {\n    flexDirection: \"row\",\n    fontSize: 16,\n    textAlign: \"left\",\n    backgroundColor: \"#00000000\",\n    borderWidth: Platform.OS === \"web\" ? 0 : 1,\n    marginBottom: 16,\n    borderBottomWidth: 1,\n    borderColor: \"#767676\",\n    borderRadius: 2,\n    includeFontPadding: true,\n    padding: 10\n  },\n\n  bgPasswordInput: {\n    flex: 1,\n    fontSize: 16,\n    textAlign: \"left\",\n    backgroundColor: \"#00000000\",\n    minHeight: 40,\n    includeFontPadding: true\n  },\n  passwordShowHide: {\n    alignSelf: \"center\"\n  },\n\n  bgPasswordContainer: {\n    flexDirection: \"row\",\n    backgroundColor: \"#00000000\",\n    marginBottom: 16,\n    borderBottomWidth: 1,\n    borderColor: \"#767676\",\n    borderRadius: 2,\n    paddingLeft: 5,\n    borderWidth: Platform.OS === \"web\" ? 0 : 1\n  },\n\n  bgRectBorder: {\n    borderWidth: 1,\n    borderColor: \"#767676\",\n    borderRadius: 2,\n    marginBottom: 10,\n    padding: 10\n  },\n\n  labelTitle: {\n    marginTop: 24,\n    marginBottom: 32,\n    fontSize: 32,\n    textAlign: \"left\",\n    marginVertical: 8,\n    color: \"#6200EE\"\n  },\n  imgPasswordShowhide: Platform.OS === \"web\" ? { height: 30, width: 30 } : {},\n\n  forgotPassword: {\n    color: \"#6200EE\",\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    zIndex: -1\n  },\n  checkBoxContainerView: {\n    flexDirection: \"row\",\n    marginBottom: 10,\n    marginLeft: -7,\n    zIndex: -1\n  },\n  rememberMe: {\n    color: \"#6200EE\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    zIndex: -1\n  },\n  orLabel: {\n    color: \"#00000000\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    margin: 20\n  }\n});\n// Customizable Area End"]},"metadata":{},"sourceType":"module"}