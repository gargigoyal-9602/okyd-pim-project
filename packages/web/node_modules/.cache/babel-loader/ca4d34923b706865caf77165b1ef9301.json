{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/react-native-ratings/src/SwipeRating.js\";\nimport times from 'lodash/times';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\"; // RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\n\nconst STAR_IMAGE = require('./images/star.png');\n\nconst HEART_IMAGE = require('./images/heart.png');\n\nconst ROCKET_IMAGE = require('./images/rocket.png');\n\nconst BELL_IMAGE = require('./images/bell.png');\n\nconst TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\nexport default class SwipeRating extends Component {\n  constructor(props) {\n    super(props);\n    const _this$props = this.props,\n          onStartRating = _this$props.onStartRating,\n          onFinishRating = _this$props.onFinishRating,\n          fractions = _this$props.fractions;\n    const position = new Animated.ValueXY();\n    const panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: () => {\n        if (typeof onStartRating === 'function') {\n          onStartRating();\n        }\n      },\n      onPanResponderMove: (event, gesture) => {\n        const newPosition = new Animated.ValueXY();\n        newPosition.setValue({\n          x: gesture.dx,\n          y: 0\n        });\n        this.setState({\n          position: newPosition,\n          value: gesture.dx\n        });\n      },\n      onPanResponderRelease: event => {\n        const rating = this.getCurrentRating(this.state.value);\n\n        if (rating >= this.props.minValue) {\n          if (!fractions) {\n            // 'round up' to the nearest rating image\n            this.setCurrentRating(rating);\n          }\n\n          onFinishRating(rating);\n        }\n      }\n    });\n    this.state = {\n      panResponder,\n      position,\n      display: false\n    };\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var STAR_IMAGE, HEART_IMAGE, ROCKET_IMAGE, BELL_IMAGE;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return require('./images/star.png');\n\n          case 3:\n            STAR_IMAGE = _context.sent;\n            _context.next = 6;\n            return require('./images/heart.png');\n\n          case 6:\n            HEART_IMAGE = _context.sent;\n            _context.next = 9;\n            return require('./images/rocket.png');\n\n          case 9:\n            ROCKET_IMAGE = _context.sent;\n            _context.next = 12;\n            return require('./images/bell.png');\n\n          case 12:\n            BELL_IMAGE = _context.sent;\n\n            _this.setState({\n              display: true\n            });\n\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 19:\n            _this.setCurrentRating(_this.props.startingValue);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 16]]);\n    }))();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.startingValue !== prevProps.startingValue) {\n      this.setCurrentRating(this.props.startingValue);\n    }\n  }\n\n  getPrimaryViewStyle() {\n    const position = this.state.position;\n    const _this$props2 = this.props,\n          imageSize = _this$props2.imageSize,\n          ratingCount = _this$props2.ratingCount,\n          type = _this$props2.type;\n    const color = TYPES[type].color;\n    const width = position.x.interpolate({\n      inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n      outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n      extrapolate: 'clamp'\n    }, {\n      useNativeDriver: true\n    });\n    return {\n      backgroundColor: color,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  getSecondaryViewStyle() {\n    const position = this.state.position;\n    const _this$props3 = this.props,\n          imageSize = _this$props3.imageSize,\n          ratingCount = _this$props3.ratingCount,\n          type = _this$props3.type;\n    const backgroundColor = TYPES[type].backgroundColor;\n    const width = position.x.interpolate({\n      inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n      outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n      extrapolate: 'clamp'\n    }, {\n      useNativeDriver: true\n    });\n    return {\n      backgroundColor,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  renderRatings() {\n    const _this$props4 = this.props,\n          imageSize = _this$props4.imageSize,\n          ratingCount = _this$props4.ratingCount,\n          type = _this$props4.type,\n          tintColor = _this$props4.tintColor;\n    const source = TYPES[type].source;\n    return times(ratingCount, index => /*#__PURE__*/React.createElement(View, {\n      key: index,\n      style: styles.starContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      source: source,\n      style: {\n        width: imageSize,\n        height: imageSize,\n        tintColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  getCurrentRating(value) {\n    // const { value } = this.state;\n    const _this$props5 = this.props,\n          fractions = _this$props5.fractions,\n          imageSize = _this$props5.imageSize,\n          ratingCount = _this$props5.ratingCount;\n    const startingValue = ratingCount / 2;\n    let currentRating = this.props.minValue ? this.props.minValue : 0;\n\n    if (value > ratingCount * imageSize / 2) {\n      currentRating = ratingCount;\n    } else if (value < -ratingCount * imageSize / 2) {\n      currentRating = this.props.minValue ? this.props.minValue : 0;\n    } else if (value <= imageSize || value > imageSize) {\n      currentRating = startingValue + value / imageSize;\n      currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\n    } else {\n      currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\n    }\n\n    return currentRating;\n  }\n\n  setCurrentRating(rating) {\n    const _this$props6 = this.props,\n          imageSize = _this$props6.imageSize,\n          ratingCount = _this$props6.ratingCount; // `initialRating` corresponds to `startingValue` in the getter. Naming it\n    // differently here avoids confusion with `value` below.\n\n    const initialRating = ratingCount / 2;\n    let value = null;\n\n    if (rating > ratingCount) {\n      value = ratingCount * imageSize / 2;\n    } else if (rating < 0) {\n      value = -ratingCount * imageSize / 2;\n    } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n      value = (rating - initialRating) * imageSize;\n    } else {\n      value = 0;\n    }\n\n    const newPosition = new Animated.ValueXY();\n    newPosition.setValue({\n      x: value,\n      y: 0\n    });\n    this.setState({\n      position: newPosition,\n      value\n    });\n  }\n\n  displayCurrentRating() {\n    const _this$props7 = this.props,\n          ratingCount = _this$props7.ratingCount,\n          type = _this$props7.type,\n          readonly = _this$props7.readonly,\n          ratingTextColor = _this$props7.ratingTextColor;\n    const color = ratingTextColor || TYPES[type].color;\n    return /*#__PURE__*/React.createElement(View, {\n      style: styles.showRatingView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: styles.ratingView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: [styles.ratingText, {\n        color\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, \"Rating:\", ' '), /*#__PURE__*/React.createElement(Text, {\n      style: [styles.currentRatingText, {\n        color\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, this.getCurrentRating(this.state.value)), /*#__PURE__*/React.createElement(Text, {\n      style: [styles.maxRatingText, {\n        color\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, \"/\", ratingCount)), /*#__PURE__*/React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, readonly && /*#__PURE__*/React.createElement(Text, {\n      style: [styles.readonlyLabel, {\n        color\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 28\n      }\n    }, \"(readonly)\")));\n  }\n\n  render() {\n    const _this$props8 = this.props,\n          readonly = _this$props8.readonly,\n          type = _this$props8.type,\n          ratingImage = _this$props8.ratingImage,\n          ratingColor = _this$props8.ratingColor,\n          ratingBackgroundColor = _this$props8.ratingBackgroundColor,\n          style = _this$props8.style,\n          showRating = _this$props8.showRating;\n\n    if (type === 'custom') {\n      let custom = {\n        source: ratingImage,\n        color: ratingColor,\n        backgroundColor: ratingBackgroundColor\n      };\n      TYPES.custom = custom;\n    }\n\n    return this.state.display ? /*#__PURE__*/React.createElement(View, {\n      pointerEvents: readonly ? 'none' : 'auto',\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }\n    }, showRating && this.displayCurrentRating(), /*#__PURE__*/React.createElement(View, Object.assign({\n      style: styles.starsWrapper\n    }, this.state.panResponder.panHandlers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(View, {\n      style: styles.starsInsideWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Animated.View, {\n      style: this.getPrimaryViewStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Animated.View, {\n      style: this.getSecondaryViewStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    })), this.renderRatings())) : null;\n  }\n\n}\nSwipeRating.defaultProps = {\n  type: 'star',\n  ratingImage: require('./images/star.png'),\n  ratingColor: '#f1c40f',\n  ratingBackgroundColor: 'white',\n  ratingCount: 5,\n  imageSize: 40,\n  onFinishRating: () => console.log('Attach a onFinishRating function here.'),\n  minValue: 0\n};\nconst styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\n\nconst fractionsType = (props, propName, componentName) => {\n  if (props[propName]) {\n    const value = props[propName];\n\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20 ? null : new Error(\"`\".concat(propName, \"` in `\").concat(componentName, \"` must be between 0 and 20\"));\n    }\n\n    return new Error(\"`\".concat(propName, \"` in `\").concat(componentName, \"` must be a number\"));\n  }\n};\n\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: Image.propTypes.source,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: ViewPropTypes.style,\n  readonly: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/react-native-ratings/src/SwipeRating.js"],"names":["times","React","Component","PropTypes","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","SwipeRating","constructor","props","onStartRating","onFinishRating","fractions","position","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","event","gesture","newPosition","setValue","x","dx","y","setState","value","onPanResponderRelease","rating","getCurrentRating","state","minValue","setCurrentRating","display","componentDidMount","console","log","startingValue","componentDidUpdate","prevProps","getPrimaryViewStyle","imageSize","ratingCount","type","width","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","height","getSecondaryViewStyle","renderRatings","tintColor","index","styles","starContainer","currentRating","Math","ceil","toFixed","initialRating","displayCurrentRating","readonly","ratingTextColor","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","render","ratingImage","ratingColor","ratingBackgroundColor","style","showRating","custom","starsWrapper","panHandlers","starsInsideWrapper","defaultProps","StyleSheet","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","Platform","OS","fractionsType","propName","componentName","Error","propTypes","string","Image","number","func","bool","ViewPropTypes"],"mappings":"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","sourcesContent":["import times from 'lodash/times';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { \n  View, Text, Animated, PanResponder, Image, \n  StyleSheet, Platform, ViewPropTypes\n} from 'react-native';\n\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\nconst STAR_IMAGE = require('./images/star.png');\nconst HEART_IMAGE = require('./images/heart.png');\nconst ROCKET_IMAGE = require('./images/rocket.png');\nconst BELL_IMAGE = require('./images/bell.png');\n\nconst TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\n\nexport default class SwipeRating extends Component {\n  static defaultProps = {\n    type: 'star',\n    ratingImage: require('./images/star.png'),\n    ratingColor: '#f1c40f',\n    ratingBackgroundColor: 'white',\n    ratingCount: 5,\n    imageSize: 40,\n    onFinishRating: () => console.log('Attach a onFinishRating function here.'),\n    minValue: 0\n  };\n\n  constructor(props) {\n    super(props);\n    const { onStartRating, onFinishRating, fractions } = this.props;\n    const position = new Animated.ValueXY();\n\n    const panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: () => {\n        if (typeof onStartRating === 'function') {\n          onStartRating();\n        }\n      },\n      onPanResponderMove: (event, gesture) => {\n        const newPosition = new Animated.ValueXY();\n        newPosition.setValue({ x: gesture.dx, y: 0 });\n        this.setState({ position: newPosition, value: gesture.dx });\n      },\n      onPanResponderRelease: event => {\n        const rating = this.getCurrentRating(this.state.value);\n        if (rating >= this.props.minValue) {\n          if (!fractions) {\n            // 'round up' to the nearest rating image\n            this.setCurrentRating(rating);\n          }\n          onFinishRating(rating);\n        }\n      }\n    });\n\n    this.state = { panResponder, position, display: false };\n  }\n\n  async componentDidMount() {\n    try {\n      const STAR_IMAGE = await require('./images/star.png');\n      const HEART_IMAGE = await require('./images/heart.png');\n      const ROCKET_IMAGE = await require('./images/rocket.png');\n      const BELL_IMAGE = await require('./images/bell.png');\n\n      this.setState({ display: true })\n    } catch(err) {\n      console.log(err)\n    }\n\n    this.setCurrentRating(this.props.startingValue);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.startingValue !== prevProps.startingValue) {\n      this.setCurrentRating(this.props.startingValue);\n    }\n  }\n\n  getPrimaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const color = TYPES[type].color;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, (ratingCount * imageSize) / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor: color,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  getSecondaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const backgroundColor = TYPES[type].backgroundColor;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, (ratingCount * imageSize) / 2, 0],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  renderRatings() {\n    const { imageSize, ratingCount, type, tintColor } = this.props;\n    const source = TYPES[type].source;\n\n    return times(ratingCount, index => (\n      <View key={index} style={styles.starContainer}>\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }} />\n      </View>\n    ));\n  }\n\n  getCurrentRating(value) {\n    // const { value } = this.state;\n    const { fractions, imageSize, ratingCount } = this.props;\n\n    const startingValue = ratingCount / 2;\n    let currentRating = (this.props.minValue) ? this.props.minValue : 0;\n\n    if (value > (ratingCount * imageSize) / 2) {\n      currentRating = ratingCount;\n    } else if (value < (-ratingCount * imageSize) / 2) {\n      currentRating = (this.props.minValue) ? this.props.minValue : 0;\n    } else if (value <= imageSize || value > imageSize) {\n      currentRating = startingValue + value / imageSize;\n      currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\n    } else {\n      currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\n    }\n\n    return currentRating;\n  }\n\n  setCurrentRating(rating) {\n    const { imageSize, ratingCount } = this.props;\n\n    // `initialRating` corresponds to `startingValue` in the getter. Naming it\n    // differently here avoids confusion with `value` below.\n    const initialRating = ratingCount / 2;\n    let value = null;\n\n    if (rating > ratingCount) {\n      value = (ratingCount * imageSize) / 2;\n    } else if (rating < 0) {\n      value = (-ratingCount * imageSize) / 2;\n    } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n      value = (rating - initialRating) * imageSize;\n    } else {\n      value = 0;\n    }\n\n    const newPosition = new Animated.ValueXY();\n    newPosition.setValue({ x: value, y: 0 });\n    this.setState({ position: newPosition, value });\n  }\n\n  displayCurrentRating() {\n    const { ratingCount, type, readonly, ratingTextColor } = this.props;\n    const color = ratingTextColor || TYPES[type].color;\n\n    return (\n      <View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={[styles.ratingText, { color }]}>Rating:{' '}</Text>\n          <Text style={[styles.currentRatingText, { color }]}>{this.getCurrentRating(this.state.value)}</Text>\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\n        </View>\n        <View>{readonly && <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}</View>\n      </View>\n    );\n  }\n\n  render() {\n    const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\n\n    if (type === 'custom') {\n      let custom = {\n        source: ratingImage,\n        color: ratingColor,\n        backgroundColor: ratingBackgroundColor\n      };\n      TYPES.custom = custom;\n    }\n\n    return (\n      this.state.display ?\n      <View pointerEvents={readonly ? 'none' : 'auto'} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\n          <View style={styles.starsInsideWrapper}>\n            <Animated.View style={this.getPrimaryViewStyle()} />\n            <Animated.View style={this.getSecondaryViewStyle()} />\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View> :\n      null\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\n\nconst fractionsType = (props, propName, componentName) => {\n  if (props[propName]) {\n    const value = props[propName];\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20\n        ? null\n        : new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\n    }\n\n    return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\n  }\n};\n\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: Image.propTypes.source,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: ViewPropTypes.style,\n  readonly: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};\n"]},"metadata":{},"sourceType":"module"}