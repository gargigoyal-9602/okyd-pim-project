{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/react-native-vector-icons/lib/tab-bar-item-ios.js\";\n\n/* eslint-disable react/no-unused-prop-types */\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabBarIOS } from './react-native';\nconst ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nconst SELECTED_ICON_PROP_NAMES = [...ICON_PROP_NAMES, 'selectedIconName', 'selectedIconColor'];\n\nconst arePropsEqual = keys => (prevProps, nextProps) => isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nconst areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nconst areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\nexport default function createTabBarItemIOSComponent(IconNamePropType, getImageSource) {\n  var _class, _temp;\n\n  return _temp = _class = class TabBarItemIOS extends PureComponent {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        icon: undefined,\n        selectedIcon: undefined\n      };\n    }\n\n    componentDidMount() {\n      this.updateIconSource();\n      this.updateSelectedIconSource();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areIconPropsEqual(prevProps, this.props)) {\n        this.updateIconSource();\n      }\n\n      if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n        this.updateSelectedIconSource();\n      }\n    }\n\n    updateIconSource() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this$props, iconName, iconSize, iconColor, icon;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, iconName = _this$props.iconName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor;\n\n              if (!iconName) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 4;\n              return getImageSource(iconName, iconSize, iconColor);\n\n            case 4:\n              icon = _context.sent;\n\n              _this.setState({\n                icon\n              }); // eslint-disable-next-line react/destructuring-assignment\n\n\n              _context.next = 9;\n              break;\n\n            case 8:\n              if (_this.state.icon) {\n                _this.setState({\n                  icon: undefined\n                });\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n\n    updateSelectedIconSource() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2$props, iconName, iconColor, iconSize, selectedIconName, selectedIconColor, selectedIcon;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2$props = _this2.props, iconName = _this2$props.iconName, iconColor = _this2$props.iconColor, iconSize = _this2$props.iconSize, selectedIconName = _this2$props.selectedIconName, selectedIconColor = _this2$props.selectedIconColor;\n\n              if (!(selectedIconName || selectedIconColor)) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 4;\n              return getImageSource(selectedIconName || iconName, iconSize, selectedIconColor || iconColor);\n\n            case 4:\n              selectedIcon = _context2.sent;\n\n              _this2.setState({\n                selectedIcon\n              }); // eslint-disable-next-line react/destructuring-assignment\n\n\n              _context2.next = 9;\n              break;\n\n            case 8:\n              if (_this2.state.selectedIcon) {\n                _this2.setState({\n                  selectedIcon: undefined\n                });\n              }\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(TabBarIOS.Item, Object.assign({}, this.state, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 14\n        }\n      }));\n    }\n\n  }, _class.propTypes = {\n    iconName: IconNamePropType.isRequired,\n    selectedIconName: IconNamePropType,\n    iconSize: PropTypes.number,\n    iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    selectedIconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }, _class.defaultProps = {\n    iconSize: 30\n  }, _temp;\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/react-native-vector-icons/lib/tab-bar-item-ios.js"],"names":["isEqual","pick","React","PureComponent","PropTypes","TabBarIOS","ICON_PROP_NAMES","SELECTED_ICON_PROP_NAMES","arePropsEqual","keys","prevProps","nextProps","areIconPropsEqual","areSelectedIconPropsEqual","createTabBarItemIOSComponent","IconNamePropType","getImageSource","TabBarItemIOS","state","icon","undefined","selectedIcon","componentDidMount","updateIconSource","updateSelectedIconSource","componentDidUpdate","props","iconName","iconSize","iconColor","setState","selectedIconName","selectedIconColor","render","propTypes","isRequired","number","oneOfType","string","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabBarIOS } from './react-native';\n\nconst ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nconst SELECTED_ICON_PROP_NAMES = [\n  ...ICON_PROP_NAMES,\n  'selectedIconName',\n  'selectedIconColor',\n];\n\nconst arePropsEqual = keys => (prevProps, nextProps) =>\n  isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nconst areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nconst areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\n\nexport default function createTabBarItemIOSComponent(\n  IconNamePropType,\n  getImageSource\n) {\n  return class TabBarItemIOS extends PureComponent {\n    static propTypes = {\n      iconName: IconNamePropType.isRequired,\n      selectedIconName: IconNamePropType,\n      iconSize: PropTypes.number,\n      iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      selectedIconColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n    };\n\n    static defaultProps = {\n      iconSize: 30,\n    };\n\n    state = {\n      icon: undefined,\n      selectedIcon: undefined,\n    };\n\n    componentDidMount() {\n      this.updateIconSource();\n      this.updateSelectedIconSource();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areIconPropsEqual(prevProps, this.props)) {\n        this.updateIconSource();\n      }\n      if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n        this.updateSelectedIconSource();\n      }\n    }\n\n    async updateIconSource() {\n      const { iconName, iconSize, iconColor } = this.props;\n      if (iconName) {\n        const icon = await getImageSource(iconName, iconSize, iconColor);\n        this.setState({ icon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.icon) {\n        this.setState({ icon: undefined });\n      }\n    }\n\n    async updateSelectedIconSource() {\n      const {\n        iconName,\n        iconColor,\n        iconSize,\n        selectedIconName,\n        selectedIconColor,\n      } = this.props;\n      if (selectedIconName || selectedIconColor) {\n        const selectedIcon = await getImageSource(\n          selectedIconName || iconName,\n          iconSize,\n          selectedIconColor || iconColor\n        );\n        this.setState({ selectedIcon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.selectedIcon) {\n        this.setState({ selectedIcon: undefined });\n      }\n    }\n\n    render() {\n      return <TabBarIOS.Item {...this.state} {...this.props} />;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}