{"ast":null,"code":"import { runEngine } from '../../../framework/src/RunEngine';\nimport { Message } from '../../../framework/src/Message';\nimport MessageEnum from '../../../framework/src/Messages/MessageEnum';\nimport { getName } from '../../../framework/src/Messages/MessageEnum';\nexport default class OtpToNewPasswordAdapter {\n  constructor() {\n    this.send = void 0;\n\n    const uuidv4 = require('uuid/v4');\n\n    var blockId = uuidv4();\n\n    this.send = message => runEngine.sendMessage(blockId, message);\n\n    runEngine.attachBuildingBlock(this, [getName(MessageEnum.NavigationNewPasswordMessage)]);\n  }\n\n  convert(from) {\n    const to = new Message(getName(MessageEnum.NavigationMessage));\n    to.addData(getName(MessageEnum.NavigationTargetMessage), \"NewPassword\");\n    to.addData(getName(MessageEnum.NavigationPropsMessage), from.getData(getName(MessageEnum.NavigationPropsMessage)));\n    const raiseMessage = new Message(getName(MessageEnum.NavigationPayLoadMessage));\n    raiseMessage.addData(getName(MessageEnum.AuthTokenDataMessage), from.getData(getName(MessageEnum.AuthTokenDataMessage)));\n    to.addData(getName(MessageEnum.NavigationRaiseMessage), raiseMessage);\n    return to;\n  }\n\n  receive(from, message) {\n    this.send(this.convert(message));\n  }\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/adapters/src/OtpToNewPasswordAdapter.tsx"],"names":["runEngine","Message","MessageEnum","getName","OtpToNewPasswordAdapter","constructor","send","uuidv4","require","blockId","message","sendMessage","attachBuildingBlock","NavigationNewPasswordMessage","convert","from","to","NavigationMessage","addData","NavigationTargetMessage","NavigationPropsMessage","getData","raiseMessage","NavigationPayLoadMessage","AuthTokenDataMessage","NavigationRaiseMessage","receive"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,kCAAxB;AAGA,SAAQC,OAAR,QAAsB,gCAAtB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,SAAQC,OAAR,QAAsB,6CAAtB;AAGA,eAAe,MAAMC,uBAAN,CAA+B;AAE1CC,EAAAA,WAAW,GAAG;AAAA,SADdC,IACc;;AACV,UAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,QAAIC,OAAO,GAAGF,MAAM,EAApB;;AACA,SAAKD,IAAL,GAAYI,OAAO,IAAIV,SAAS,CAACW,WAAV,CAAsBF,OAAtB,EAA+BC,OAA/B,CAAvB;;AACAV,IAAAA,SAAS,CAACY,mBAAV,CAA8B,IAA9B,EAA8C,CAACT,OAAO,CAACD,WAAW,CAACW,4BAAb,CAAR,CAA9C;AACH;;AACDC,EAAAA,OAAO,CAACC,IAAD,EAAyB;AAE5B,UAAMC,EAAE,GAAG,IAAIf,OAAJ,CAAYE,OAAO,CAACD,WAAW,CAACe,iBAAb,CAAnB,CAAX;AAEAD,IAAAA,EAAE,CAACE,OAAH,CAAWf,OAAO,CAACD,WAAW,CAACiB,uBAAb,CAAlB,EAAyD,aAAzD;AAEAH,IAAAA,EAAE,CAACE,OAAH,CAAWf,OAAO,CAACD,WAAW,CAACkB,sBAAb,CAAlB,EACIL,IAAI,CAACM,OAAL,CAAalB,OAAO,CAACD,WAAW,CAACkB,sBAAb,CAApB,CADJ;AAGA,UAAME,YAAoB,GAAG,IAAIrB,OAAJ,CAAYE,OAAO,CAACD,WAAW,CAACqB,wBAAb,CAAnB,CAA7B;AACAD,IAAAA,YAAY,CAACJ,OAAb,CACIf,OAAO,CAACD,WAAW,CAACsB,oBAAb,CADX,EAEIT,IAAI,CAACM,OAAL,CAAalB,OAAO,CAACD,WAAW,CAACsB,oBAAb,CAApB,CAFJ;AAKAR,IAAAA,EAAE,CAACE,OAAH,CAAWf,OAAO,CAACD,WAAW,CAACuB,sBAAb,CAAlB,EACIH,YADJ;AAGA,WAAON,EAAP;AACH;;AACDU,EAAAA,OAAO,CAACX,IAAD,EAAeL,OAAf,EAAuC;AAC1C,SAAKJ,IAAL,CAAU,KAAKQ,OAAL,CAAaJ,OAAb,CAAV;AACH;;AA9ByC","sourcesContent":["import {runEngine} from '../../../framework/src/RunEngine'\nimport {Block} from '../../../framework/src/Block';\nimport {IBlock} from '../../../framework/src/IBlock';\nimport {Message} from '../../../framework/src/Message';\nimport MessageEnum from '../../../framework/src/Messages/MessageEnum';\nimport {getName} from '../../../framework/src/Messages/MessageEnum';\nimport NavigationMessage from '../../../framework/src/Messages/NavigationMessage';\n\nexport default class OtpToNewPasswordAdapter  {\n    send: (message: Message) => void;\n    constructor() {\n        const uuidv4 = require('uuid/v4');\n        var blockId = uuidv4();\n        this.send = message => runEngine.sendMessage(blockId, message);\n        runEngine.attachBuildingBlock(this as IBlock, [getName(MessageEnum.NavigationNewPasswordMessage)]);\n    }\n    convert(from: Message): Message {   \n\n        const to = new Message(getName(MessageEnum.NavigationMessage));\n\n        to.addData(getName(MessageEnum.NavigationTargetMessage), \"NewPassword\")\n\n        to.addData(getName(MessageEnum.NavigationPropsMessage), \n            from.getData(getName(MessageEnum.NavigationPropsMessage)))\n            \n        const raiseMessage:Message = new Message(getName(MessageEnum.NavigationPayLoadMessage));\n        raiseMessage.addData(\n            getName(MessageEnum.AuthTokenDataMessage),\n            from.getData(getName(MessageEnum.AuthTokenDataMessage))\n        );\n\n        to.addData(getName(MessageEnum.NavigationRaiseMessage),\n            raiseMessage)\n        \n        return to;\n    }\n    receive(from: string, message: Message): void {\n        this.send(this.convert(message));\n    }\n}"]},"metadata":{},"sourceType":"module"}