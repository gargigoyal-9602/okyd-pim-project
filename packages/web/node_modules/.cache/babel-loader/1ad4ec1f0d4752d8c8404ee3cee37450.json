{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport MessageEnum, { getName } from '../../../framework/src/Messages/MessageEnum';\nimport { runEngine } from '../../../framework/src/RunEngine';\nimport { Message } from '../../../framework/src/Message';\nimport { Block } from '../../../framework/src/Block';\n\nlet config = require('../config');\n\nexport default class RestApiClientBlock extends Block {\n  constructor() {\n    super();\n    this.props = void 0;\n    runEngine.attachBuildingBlock(this, [getName(MessageEnum.RestAPIRequestMessage)]);\n  }\n\n  static getInstance() {\n    if (!RestApiClientBlock.instance) {\n      RestApiClientBlock.instance = new RestApiClientBlock();\n    }\n\n    return RestApiClientBlock.instance;\n  }\n\n  receive(from, message) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var uniqueApiCallId, _message$properties, method, endpoint, headers, body, props;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            console.log('API Rquest Message' + JSON.stringify(message));\n\n            if (getName(MessageEnum.RestAPIRequestMessage) === message.id) {\n              uniqueApiCallId = message.messageId;\n              _message$properties = message.properties, method = _message$properties.RestAPIRequestMethodMessage, endpoint = _message$properties.RestAPIResponceEndPointMessage, headers = _message$properties.RestAPIRequestHeaderMessage, body = _message$properties.RestAPIRequestBodyMessage, props = _message$properties.NavigationPropsMessage;\n              _this.props = props;\n\n              _this.makeApiCall(uniqueApiCallId, method, endpoint, headers, body);\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  makeApiCall(uniqueApiCallId, method, endpoint, headers, body) {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var fullURL, apiResponseMessage, response, responseJson;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            fullURL = endpoint.indexOf('://') === -1 ? config.baseURL + '/' + endpoint : endpoint;\n            apiResponseMessage = new Message(getName(MessageEnum.RestAPIResponceMessage));\n            apiResponseMessage.addData(getName(MessageEnum.RestAPIResponceDataMessage), uniqueApiCallId);\n            _context2.prev = 3;\n            _context2.next = 6;\n            return fetch(fullURL, {\n              method: method.toUpperCase(),\n              headers: headers.length ? JSON.parse(headers) : headers,\n              body: body\n            });\n\n          case 6:\n            response = _context2.sent;\n            _context2.next = 9;\n            return response.json();\n\n          case 9:\n            responseJson = _context2.sent;\n            //setting Response\n            apiResponseMessage.addData(getName(MessageEnum.RestAPIResponceSuccessMessage), responseJson); // console.log('Api Response' + JSON.stringify(responseJson));\n\n            _context2.next = 18;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](3);\n            runEngine.debugLog('RestApiClient Error', _context2.t0); //setting Error\n\n            console.log('Api Error' + JSON.stringify(_context2.t0));\n            apiResponseMessage.addData(getName(MessageEnum.RestAPIResponceErrorMessage), 'An error has occuured. Please try again later.');\n\n          case 18:\n            if (_this2.props) {\n              apiResponseMessage.addData(getName(MessageEnum.NavigationPropsMessage), _this2.props);\n            }\n\n            _this2.send(apiResponseMessage);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[3, 13]]);\n    }))();\n  }\n\n}\nRestApiClientBlock.instance = void 0;","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/framework/src/Blocks/RestApiClientBlock.tsx"],"names":["MessageEnum","getName","runEngine","Message","Block","config","require","RestApiClientBlock","constructor","props","attachBuildingBlock","RestAPIRequestMessage","getInstance","instance","receive","from","message","console","log","JSON","stringify","id","uniqueApiCallId","messageId","properties","method","RestAPIRequestMethodMessage","endpoint","RestAPIResponceEndPointMessage","headers","RestAPIRequestHeaderMessage","body","RestAPIRequestBodyMessage","NavigationPropsMessage","makeApiCall","fullURL","indexOf","baseURL","apiResponseMessage","RestAPIResponceMessage","addData","RestAPIResponceDataMessage","fetch","toUpperCase","length","parse","response","json","responseJson","RestAPIResponceSuccessMessage","debugLog","RestAPIResponceErrorMessage","send"],"mappings":";;AAAA,OAAOA,WAAP,IACEC,OADF,QAEO,6CAFP;AAIA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,KAAT,QAAsB,8BAAtB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AAEA,eAAe,MAAMC,kBAAN,SAAyCH,KAAzC,CAA+C;AAKpDI,EAAAA,WAAR,GAAsB;AACpB;AADoB,SAJdC,KAIc;AAEpBP,IAAAA,SAAS,CAACQ,mBAAV,CAA8B,IAA9B,EAA8C,CAC5CT,OAAO,CAACD,WAAW,CAACW,qBAAb,CADqC,CAA9C;AAGD;;AAED,SAAOC,WAAP,GAA8C;AAC5C,QAAI,CAACL,kBAAkB,CAACM,QAAxB,EAAkC;AAChCN,MAAAA,kBAAkB,CAACM,QAAnB,GAA8B,IAAIN,kBAAJ,EAA9B;AACD;;AACD,WAAOA,kBAAkB,CAACM,QAA1B;AACD;;AAEKC,EAAAA,OAAN,CAAcC,IAAd,EAA4BC,OAA5B,EAA8C;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAC5CC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAnC;;AACA,gBAAIf,OAAO,CAACD,WAAW,CAACW,qBAAb,CAAP,KAA+CK,OAAO,CAACK,EAA3D,EAA+D;AACvDC,cAAAA,eADuD,GACrCN,OAAO,CAACO,SAD6B;AAAA,oCAQzDP,OAAO,CAACQ,UARiD,EAG9BC,MAH8B,uBAG3DC,2BAH2D,EAI3BC,QAJ2B,uBAI3DC,8BAJ2D,EAK9BC,OAL8B,uBAK3DC,2BAL2D,EAMhCC,IANgC,uBAM3DC,yBAN2D,EAOnCvB,KAPmC,uBAO3DwB,sBAP2D;AAS7D,cAAA,KAAI,CAACxB,KAAL,GAAaA,KAAb;;AACA,cAAA,KAAI,CAACyB,WAAL,CAAiBZ,eAAjB,EAAkCG,MAAlC,EAA0CE,QAA1C,EAAoDE,OAApD,EAA6DE,IAA7D;AACD;;AAb2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAc7C;;AAEKG,EAAAA,WAAN,CACEZ,eADF,EAEEG,MAFF,EAGEE,QAHF,EAIEE,OAJF,EAKEE,IALF,EAME;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACII,YAAAA,OADJ,GAEER,QAAQ,CAACS,OAAT,CAAiB,KAAjB,MAA4B,CAAC,CAA7B,GACI/B,MAAM,CAACgC,OAAP,GAAiB,GAAjB,GAAuBV,QAD3B,GAEIA,QAJN;AAKIW,YAAAA,kBALJ,GAKyB,IAAInC,OAAJ,CACvBF,OAAO,CAACD,WAAW,CAACuC,sBAAb,CADgB,CALzB;AAQAD,YAAAA,kBAAkB,CAACE,OAAnB,CACEvC,OAAO,CAACD,WAAW,CAACyC,0BAAb,CADT,EAEEnB,eAFF;AARA;AAAA;AAAA,mBAcuBoB,KAAK,CAACP,OAAD,EAAU;AAClCV,cAAAA,MAAM,EAAEA,MAAM,CAACkB,WAAP,EAD0B;AAElCd,cAAAA,OAAO,EAAEA,OAAO,CAACe,MAAR,GAAiBzB,IAAI,CAAC0B,KAAL,CAAWhB,OAAX,CAAjB,GAAuCA,OAFd;AAGlCE,cAAAA,IAAI,EAAEA;AAH4B,aAAV,CAd5B;;AAAA;AAcMe,YAAAA,QAdN;AAAA;AAAA,mBAoB2BA,QAAQ,CAACC,IAAT,EApB3B;;AAAA;AAoBMC,YAAAA,YApBN;AAsBE;AACAV,YAAAA,kBAAkB,CAACE,OAAnB,CACEvC,OAAO,CAACD,WAAW,CAACiD,6BAAb,CADT,EAEED,YAFF,EAvBF,CA4BE;;AA5BF;AAAA;;AAAA;AAAA;AAAA;AA8BE9C,YAAAA,SAAS,CAACgD,QAAV,CAAmB,qBAAnB,gBA9BF,CA+BE;;AACAjC,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAcC,IAAI,CAACC,SAAL,cAA1B;AACAkB,YAAAA,kBAAkB,CAACE,OAAnB,CACEvC,OAAO,CAACD,WAAW,CAACmD,2BAAb,CADT,EAEE,gDAFF;;AAjCF;AAuCA,gBAAI,MAAI,CAAC1C,KAAT,EAAgB;AACd6B,cAAAA,kBAAkB,CAACE,OAAnB,CACEvC,OAAO,CAACD,WAAW,CAACiC,sBAAb,CADT,EAEE,MAAI,CAACxB,KAFP;AAID;;AACD,YAAA,MAAI,CAAC2C,IAAL,CAAUd,kBAAV;;AA7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CD;;AAvF2D;AAAzC/B,kB,CAGJM,Q","sourcesContent":["import MessageEnum, {\n  getName\n} from '../../../framework/src/Messages/MessageEnum';\nimport { IBlock } from '../../../framework/src/IBlock';\nimport { runEngine } from '../../../framework/src/RunEngine';\nimport { Message } from '../../../framework/src/Message';\nimport { Block } from '../../../framework/src/Block';\n\nlet config = require('../config');\n\nexport default class RestApiClientBlock<Entity> extends Block {\n  private props: any;\n\n  private static instance: RestApiClientBlock<any>;\n\n  private constructor() {\n    super();\n    runEngine.attachBuildingBlock(this as IBlock, [\n      getName(MessageEnum.RestAPIRequestMessage)\n    ]);\n  }\n\n  static getInstance(): RestApiClientBlock<any> {\n    if (!RestApiClientBlock.instance) {\n      RestApiClientBlock.instance = new RestApiClientBlock();\n    }\n    return RestApiClientBlock.instance;\n  }\n\n  async receive(from: string, message: Message) {\n    console.log('API Rquest Message' + JSON.stringify(message));\n    if (getName(MessageEnum.RestAPIRequestMessage) === message.id) {\n      const uniqueApiCallId = message.messageId;\n      const {\n        RestAPIRequestMethodMessage: method,\n        RestAPIResponceEndPointMessage: endpoint,\n        RestAPIRequestHeaderMessage: headers,\n        RestAPIRequestBodyMessage: body,\n        NavigationPropsMessage: props\n      } = message.properties;\n      this.props = props;\n      this.makeApiCall(uniqueApiCallId, method, endpoint, headers, body);\n    }\n  }\n\n  async makeApiCall(\n    uniqueApiCallId: string,\n    method: string,\n    endpoint: string,\n    headers: any,\n    body: string\n  ) {\n    let fullURL =\n      endpoint.indexOf('://') === -1\n        ? config.baseURL + '/' + endpoint\n        : endpoint;\n    let apiResponseMessage = new Message(\n      getName(MessageEnum.RestAPIResponceMessage)\n    );\n    apiResponseMessage.addData(\n      getName(MessageEnum.RestAPIResponceDataMessage),\n      uniqueApiCallId\n    );\n\n    try {\n      let response = await fetch(fullURL, {\n        method: method.toUpperCase(),\n        headers: headers.length ? JSON.parse(headers) : headers,\n        body: body\n      });\n\n      let responseJson = await response.json();\n\n      //setting Response\n      apiResponseMessage.addData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage),\n        responseJson\n      );\n\n      // console.log('Api Response' + JSON.stringify(responseJson));\n    } catch (error) {\n      runEngine.debugLog('RestApiClient Error', error);\n      //setting Error\n      console.log('Api Error' + JSON.stringify(error));\n      apiResponseMessage.addData(\n        getName(MessageEnum.RestAPIResponceErrorMessage),\n        'An error has occuured. Please try again later.'\n      );\n    }\n\n    if (this.props) {\n      apiResponseMessage.addData(\n        getName(MessageEnum.NavigationPropsMessage),\n        this.props\n      );\n    }\n    this.send(apiResponseMessage);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}