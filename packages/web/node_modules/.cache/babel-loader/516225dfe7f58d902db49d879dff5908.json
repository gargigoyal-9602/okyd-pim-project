{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\"; // Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\nexport default class OrdermanagementController extends BlockComponent {\n  constructor(props) {\n    super(props);\n    this.getOrdersAPICallId = void 0;\n    this.getItemDetailAPICallId = void 0;\n    this.cancelOrderAPICallId = void 0;\n    this.rateOrderAPICallId = void 0;\n\n    this.getToken = () => {\n      const msg = new Message(getName(MessageEnum.SessionRequestMessage));\n      this.send(msg);\n    };\n\n    this.cancelOrder = (orderId, itemId) => {\n      this.setState({\n        activeOrderId: orderId,\n        activeItemId: itemId,\n        isCancelVisible: !this.state.isCancelVisible\n      });\n    };\n\n    this.rateOrder = () => {\n      this.setState({\n        isRateVisible: !this.state.isRateVisible\n      });\n    };\n\n    this.hideCancelModal = () => {\n      this.setState({\n        isCancelVisible: false\n      });\n    };\n\n    this.selectCancel = () => {\n      this.setState({\n        isCancelVisible: false,\n        cancelDialog: true\n      });\n    };\n\n    this.getOrdersDataRequest = token => {\n      const header = {\n        \"Content-Type\": configJSON.ordersApiContentType,\n        token: token\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getOrdersAPICallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.ordersAPiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpGetMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n    };\n\n    this.getItemDetailDataRequest = id => {\n      const header = {\n        \"Content-Type\": configJSON.ordersApiContentType,\n        token: this.state.token\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getItemDetailAPICallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.ordersAPiEndPoint + \"/\".concat(id));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpGetMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.cancelOrderDataRequest = () => {\n      const header = {\n        \"Content-Type\": configJSON.ordersApiContentType,\n        token: this.state.token\n      };\n      var data = {\n        item_id: this.state.activeItemId\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.cancelOrderAPICallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.ordersAPiEndPoint + \"/\".concat(this.state.activeOrderId, \"/cancel_order\"));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(data));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpPutMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.rateOrderDataRequest = id => {\n      const header = {\n        \"Content-Type\": configJSON.ordersApiContentType,\n        token: this.state.token\n      };\n      var data = {\n        catalogue_id: id,\n        rating: this.state.starCount,\n        comment: this.state.comment\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.rateOrderAPICallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.rateAPiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(header));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(data));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpPostMethod);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.receive = this.receive.bind(this); // Customizable Area Start\n\n    this.subScribedMessages = [getName(MessageEnum.SessionResponseMessage), getName(MessageEnum.RestAPIResponceMessage)];\n    this.state = {\n      orders: [],\n      // orders:[],\n      isCancelVisible: false,\n      isRateVisible: false,\n      cancelDialog: false,\n      starCount: 0,\n      token: \"\",\n      itemDetail: \"\",\n      activeOrderId: 0,\n      activeItemId: 0,\n      comment: \"\",\n      activeAddress: []\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(this, this.subScribedMessages);\n  }\n\n  componentDidMount() {\n    var _superprop_getComponentDidMount = () => super.componentDidMount,\n        _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _superprop_getComponentDidMount().call(_this);\n\n            _this.getToken();\n\n            if (_this.isPlatformWeb() === false) {\n              _this.props.navigation.addListener(\"willFocus\", () => {\n                _this.getToken();\n              });\n            }\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  receive(from, message) {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var token, apiRequestCallId, responseJson, errorReponse;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            // Customizable Area Start\n            if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n              runEngine.debugLog(\"Token\", message);\n              token = message.getData(getName(MessageEnum.SessionResponseToken));\n\n              _this2.setState({\n                token: token\n              });\n\n              _this2.getOrdersDataRequest(token);\n            } else if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n              runEngine.debugLog(\"API Message Recived\", JSON.stringify(message));\n              apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n              responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n              errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n\n              if (responseJson && responseJson.data) {\n                if (apiRequestCallId === _this2.getOrdersAPICallId) {\n                  _this2.setState({\n                    orders: responseJson.data\n                  });\n                } else if (apiRequestCallId === _this2.getItemDetailAPICallId) {\n                  _this2.props.navigation.navigate(\"OrderDetails\", {\n                    DATA: responseJson.data\n                  });\n                } else if (apiRequestCallId === _this2.rateOrderAPICallId) {\n                  _this2.setState({\n                    isRateVisible: !_this2.state.isRateVisible\n                  });\n\n                  _this2.props.navigation.goBack();\n                } // runEngine.debugLog(\"API Recived\", responseJson.data);\n\n              } else if (apiRequestCallId === _this2.cancelOrderAPICallId) {\n                _this2.getOrdersDataRequest(_this2.state.token);\n\n                _this2.setState({\n                  activeOrderId: 0,\n                  activeItemId: 0,\n                  isCancelVisible: false,\n                  cancelDialog: true\n                });\n              } else if (errorReponse || responseJson.errors) {\n                _this2.parseApiErrorResponse(responseJson);\n\n                _this2.parseApiCatchErrorResponse(errorReponse);\n              }\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  } // Customizable Area Start\n  // Customizable Area End\n\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/ordermanagement/src/OrdermanagementController.tsx"],"names":["Message","BlockComponent","MessageEnum","getName","runEngine","configJSON","require","OrdermanagementController","constructor","props","getOrdersAPICallId","getItemDetailAPICallId","cancelOrderAPICallId","rateOrderAPICallId","getToken","msg","SessionRequestMessage","send","cancelOrder","orderId","itemId","setState","activeOrderId","activeItemId","isCancelVisible","state","rateOrder","isRateVisible","hideCancelModal","selectCancel","cancelDialog","getOrdersDataRequest","token","header","ordersApiContentType","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","ordersAPiEndPoint","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","httpGetMethod","sendMessage","id","getItemDetailDataRequest","cancelOrderDataRequest","data","item_id","RestAPIRequestBodyMessage","httpPutMethod","rateOrderDataRequest","catalogue_id","rating","starCount","comment","rateAPiEndPoint","httpPostMethod","receive","bind","subScribedMessages","SessionResponseMessage","RestAPIResponceMessage","orders","itemDetail","activeAddress","attachBuildingBlock","componentDidMount","isPlatformWeb","navigation","addListener","from","message","debugLog","getData","SessionResponseToken","apiRequestCallId","RestAPIResponceDataMessage","responseJson","RestAPIResponceSuccessMessage","errorReponse","RestAPIResponceErrorMessage","navigate","DATA","goBack","errors","parseApiErrorResponse","parseApiCatchErrorResponse"],"mappings":";;AACA,SAASA,OAAT,QAAwB,gCAAxB;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,OAAOC,WAAP,IACEC,OADF,QAEO,6CAFP;AAGA,SAASC,SAAT,QAA0B,kCAA1B,C,CAEA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,CAAC,UAAD,CAA1B;AA6BP,eAAe,MAAMC,yBAAN,SAAwCN,cAAxC,CAIb;AAMAO,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;AADwB,SAL1BC,kBAK0B;AAAA,SAJ1BC,sBAI0B;AAAA,SAH1BC,oBAG0B;AAAA,SAF1BC,kBAE0B;;AAAA,SAoC1BC,QApC0B,GAoCf,MAAM;AACf,YAAMC,GAAY,GAAG,IAAIf,OAAJ,CACnBG,OAAO,CAACD,WAAW,CAACc,qBAAb,CADY,CAArB;AAGA,WAAKC,IAAL,CAAUF,GAAV;AACD,KAzCyB;;AAAA,SA6F1BG,WA7F0B,GA6FZ,CAACC,OAAD,EAAkBC,MAAlB,KAAqC;AACjD,WAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEH,OADH;AAEZI,QAAAA,YAAY,EAAEH,MAFF;AAGZI,QAAAA,eAAe,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAHjB,OAAd;AAKD,KAnGyB;;AAAA,SAoG1BE,SApG0B,GAoGd,MAAM;AAChB,WAAKL,QAAL,CAAc;AAAEM,QAAAA,aAAa,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAA7B,OAAd;AACD,KAtGyB;;AAAA,SAuG1BC,eAvG0B,GAuGR,MAAM;AACtB,WAAKP,QAAL,CAAc;AAAEG,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD,KAzGyB;;AAAA,SA0G1BK,YA1G0B,GA0GX,MAAM;AACnB,WAAKR,QAAL,CAAc;AAAEG,QAAAA,eAAe,EAAE,KAAnB;AAA0BM,QAAAA,YAAY,EAAE;AAAxC,OAAd;AACD,KA5GyB;;AAAA,SA8G1BC,oBA9G0B,GA8GFC,KAAD,IAAmB;AACxC,YAAMC,MAAM,GAAG;AACb,wBAAgB5B,UAAU,CAAC6B,oBADd;AAEbF,QAAAA,KAAK,EAAEA;AAFM,OAAf;AAIA,YAAMG,cAAc,GAAG,IAAInC,OAAJ,CACrBG,OAAO,CAACD,WAAW,CAACkC,qBAAb,CADc,CAAvB;AAIA,WAAK1B,kBAAL,GAA0ByB,cAAc,CAACE,SAAzC;AAEAF,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAACqC,8BAAb,CADT,EAEElC,UAAU,CAACmC,iBAFb;AAKAL,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAACuC,2BAAb,CADT,EAEEC,IAAI,CAACC,SAAL,CAAeV,MAAf,CAFF;AAKAE,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAAC0C,2BAAb,CADT,EAEEvC,UAAU,CAACwC,aAFb;AAKAzC,MAAAA,SAAS,CAAC0C,WAAV,CAAsBX,cAAc,CAACY,EAArC,EAAyCZ,cAAzC;AACD,KAzIyB;;AAAA,SA2I1Ba,wBA3I0B,GA2IED,EAAD,IAAgB;AACzC,YAAMd,MAAM,GAAG;AACb,wBAAgB5B,UAAU,CAAC6B,oBADd;AAEbF,QAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWO;AAFL,OAAf;AAIA,YAAMG,cAAc,GAAG,IAAInC,OAAJ,CACrBG,OAAO,CAACD,WAAW,CAACkC,qBAAb,CADc,CAAvB;AAIA,WAAKzB,sBAAL,GAA8BwB,cAAc,CAACE,SAA7C;AAEAF,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAACqC,8BAAb,CADT,EAEElC,UAAU,CAACmC,iBAAX,cAAmCO,EAAnC,CAFF;AAIAZ,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAACuC,2BAAb,CADT,EAEEC,IAAI,CAACC,SAAL,CAAeV,MAAf,CAFF;AAKAE,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAAC0C,2BAAb,CADT,EAEEvC,UAAU,CAACwC,aAFb;AAKAzC,MAAAA,SAAS,CAAC0C,WAAV,CAAsBX,cAAc,CAACY,EAArC,EAAyCZ,cAAzC;AACA,aAAO,IAAP;AACD,KAtKyB;;AAAA,SAwK1Bc,sBAxK0B,GAwKD,MAAM;AAC7B,YAAMhB,MAAM,GAAG;AACb,wBAAgB5B,UAAU,CAAC6B,oBADd;AAEbF,QAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWO;AAFL,OAAf;AAIA,UAAIkB,IAAI,GAAG;AACTC,QAAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWF;AADX,OAAX;AAGA,YAAMY,cAAc,GAAG,IAAInC,OAAJ,CACrBG,OAAO,CAACD,WAAW,CAACkC,qBAAb,CADc,CAAvB;AAIA,WAAKxB,oBAAL,GAA4BuB,cAAc,CAACE,SAA3C;AAEAF,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAACqC,8BAAb,CADT,EAEElC,UAAU,CAACmC,iBAAX,cAAmC,KAAKf,KAAL,CAAWH,aAA9C,kBAFF;AAIAa,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAACuC,2BAAb,CADT,EAEEC,IAAI,CAACC,SAAL,CAAeV,MAAf,CAFF;AAIAE,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAACkD,yBAAb,CADT,EAEEV,IAAI,CAACC,SAAL,CAAeO,IAAf,CAFF;AAKAf,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAAC0C,2BAAb,CADT,EAEEvC,UAAU,CAACgD,aAFb;AAKAjD,MAAAA,SAAS,CAAC0C,WAAV,CAAsBX,cAAc,CAACY,EAArC,EAAyCZ,cAAzC;AACA,aAAO,IAAP;AACD,KA1MyB;;AAAA,SA4M1BmB,oBA5M0B,GA4MFP,EAAD,IAAgB;AACrC,YAAMd,MAAM,GAAG;AACb,wBAAgB5B,UAAU,CAAC6B,oBADd;AAEbF,QAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWO;AAFL,OAAf;AAIA,UAAIkB,IAAI,GAAG;AACTK,QAAAA,YAAY,EAAER,EADL;AAETS,QAAAA,MAAM,EAAE,KAAK/B,KAAL,CAAWgC,SAFV;AAGTC,QAAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWiC;AAHX,OAAX;AAKA,YAAMvB,cAAc,GAAG,IAAInC,OAAJ,CACrBG,OAAO,CAACD,WAAW,CAACkC,qBAAb,CADc,CAAvB;AAIA,WAAKvB,kBAAL,GAA0BsB,cAAc,CAACE,SAAzC;AAEAF,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAACqC,8BAAb,CADT,EAEElC,UAAU,CAACsD,eAFb;AAIAxB,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAACuC,2BAAb,CADT,EAEEC,IAAI,CAACC,SAAL,CAAeV,MAAf,CAFF;AAIAE,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAACkD,yBAAb,CADT,EAEEV,IAAI,CAACC,SAAL,CAAeO,IAAf,CAFF;AAKAf,MAAAA,cAAc,CAACG,OAAf,CACEnC,OAAO,CAACD,WAAW,CAAC0C,2BAAb,CADT,EAEEvC,UAAU,CAACuD,cAFb;AAKAxD,MAAAA,SAAS,CAAC0C,WAAV,CAAsBX,cAAc,CAACY,EAArC,EAAyCZ,cAAzC;AACA,aAAO,IAAP;AACD,KAhPyB;;AAExB,SAAK0B,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf,CAFwB,CAIxB;;AACA,SAAKC,kBAAL,GAA0B,CACxB5D,OAAO,CAACD,WAAW,CAAC8D,sBAAb,CADiB,EAExB7D,OAAO,CAACD,WAAW,CAAC+D,sBAAb,CAFiB,CAA1B;AAKA,SAAKxC,KAAL,GAAa;AACXyC,MAAAA,MAAM,EAAE,EADG;AAEX;AACA1C,MAAAA,eAAe,EAAE,KAHN;AAIXG,MAAAA,aAAa,EAAE,KAJJ;AAKXG,MAAAA,YAAY,EAAE,KALH;AAMX2B,MAAAA,SAAS,EAAE,CANA;AAOXzB,MAAAA,KAAK,EAAE,EAPI;AAQXmC,MAAAA,UAAU,EAAE,EARD;AASX7C,MAAAA,aAAa,EAAE,CATJ;AAUXC,MAAAA,YAAY,EAAE,CAVH;AAWXmC,MAAAA,OAAO,EAAE,EAXE;AAYXU,MAAAA,aAAa,EAAE;AAZJ,KAAb,CAVwB,CAwBxB;;AACAhE,IAAAA,SAAS,CAACiE,mBAAV,CAA8B,IAA9B,EAA8C,KAAKN,kBAAnD;AACD;;AACKO,EAAAA,iBAAN,GAA0B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACxB;;AACA,YAAA,KAAI,CAACxD,QAAL;;AACA,gBAAI,KAAI,CAACyD,aAAL,OAAyB,KAA7B,EAAoC;AAClC,cAAA,KAAI,CAAC9D,KAAL,CAAW+D,UAAX,CAAsBC,WAAtB,CAAkC,WAAlC,EAA+C,MAAM;AACnD,gBAAA,KAAI,CAAC3D,QAAL;AACD,eAFD;AAGD;;AAPuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAQzB;;AAQK+C,EAAAA,OAAN,CAAca,IAAd,EAA4BC,OAA5B,EAA8C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C;AACA,gBAAIxE,OAAO,CAACD,WAAW,CAAC8D,sBAAb,CAAP,KAAgDW,OAAO,CAAC5B,EAA5D,EAAgE;AAC9D3C,cAAAA,SAAS,CAACwE,QAAV,CAAmB,OAAnB,EAA4BD,OAA5B;AAEI3C,cAAAA,KAH0D,GAGlD2C,OAAO,CAACE,OAAR,CAAgB1E,OAAO,CAACD,WAAW,CAAC4E,oBAAb,CAAvB,CAHkD;;AAI9D,cAAA,MAAI,CAACzD,QAAL,CAAc;AAAEW,gBAAAA,KAAK,EAAEA;AAAT,eAAd;;AACA,cAAA,MAAI,CAACD,oBAAL,CAA0BC,KAA1B;AACD,aAND,MAMO,IAAI7B,OAAO,CAACD,WAAW,CAAC+D,sBAAb,CAAP,KAAgDU,OAAO,CAAC5B,EAA5D,EAAgE;AACrE3C,cAAAA,SAAS,CAACwE,QAAV,CAAmB,qBAAnB,EAA0ClC,IAAI,CAACC,SAAL,CAAegC,OAAf,CAA1C;AAEMI,cAAAA,gBAH+D,GAG5CJ,OAAO,CAACE,OAAR,CACvB1E,OAAO,CAACD,WAAW,CAAC8E,0BAAb,CADgB,CAH4C;AAOjEC,cAAAA,YAPiE,GAOlDN,OAAO,CAACE,OAAR,CACjB1E,OAAO,CAACD,WAAW,CAACgF,6BAAb,CADU,CAPkD;AAWjEC,cAAAA,YAXiE,GAWlDR,OAAO,CAACE,OAAR,CACjB1E,OAAO,CAACD,WAAW,CAACkF,2BAAb,CADU,CAXkD;;AAcrE,kBAAIH,YAAY,IAAIA,YAAY,CAAC/B,IAAjC,EAAuC;AACrC,oBAAI6B,gBAAgB,KAAK,MAAI,CAACrE,kBAA9B,EAAkD;AAChD,kBAAA,MAAI,CAACW,QAAL,CAAc;AAAE6C,oBAAAA,MAAM,EAAEe,YAAY,CAAC/B;AAAvB,mBAAd;AACD,iBAFD,MAEO,IAAI6B,gBAAgB,KAAK,MAAI,CAACpE,sBAA9B,EAAsD;AAC3D,kBAAA,MAAI,CAACF,KAAL,CAAW+D,UAAX,CAAsBa,QAAtB,CAA+B,cAA/B,EAA+C;AAC7CC,oBAAAA,IAAI,EAAEL,YAAY,CAAC/B;AAD0B,mBAA/C;AAGD,iBAJM,MAIA,IAAI6B,gBAAgB,KAAK,MAAI,CAAClE,kBAA9B,EAAkD;AACvD,kBAAA,MAAI,CAACQ,QAAL,CAAc;AAAEM,oBAAAA,aAAa,EAAE,CAAC,MAAI,CAACF,KAAL,CAAWE;AAA7B,mBAAd;;AACA,kBAAA,MAAI,CAAClB,KAAL,CAAW+D,UAAX,CAAsBe,MAAtB;AACD,iBAVoC,CAWrC;;AACD,eAZD,MAYO,IAAIR,gBAAgB,KAAK,MAAI,CAACnE,oBAA9B,EAAoD;AACzD,gBAAA,MAAI,CAACmB,oBAAL,CAA0B,MAAI,CAACN,KAAL,CAAWO,KAArC;;AACA,gBAAA,MAAI,CAACX,QAAL,CAAc;AACZC,kBAAAA,aAAa,EAAE,CADH;AAEZC,kBAAAA,YAAY,EAAE,CAFF;AAGZC,kBAAAA,eAAe,EAAE,KAHL;AAIZM,kBAAAA,YAAY,EAAE;AAJF,iBAAd;AAMD,eARM,MAQA,IAAIqD,YAAY,IAAIF,YAAY,CAACO,MAAjC,EAAyC;AAC9C,gBAAA,MAAI,CAACC,qBAAL,CAA2BR,YAA3B;;AACA,gBAAA,MAAI,CAACS,0BAAL,CAAgCP,YAAhC;AACD;AACF;;AA9C2C;AAAA;AAAA;AAAA;AAAA;AAAA;AA+C7C,GAhGD,CAiGA;AAuJA;;;AAxPA","sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n\n// Customizable Area Start\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  orders: any;\n  isCancelVisible: boolean;\n  isRateVisible: boolean;\n  cancelDialog: boolean;\n  starCount: number;\n  comment: string;\n  token: string;\n  itemDetail: any;\n  activeOrderId: number;\n  activeItemId: number;\n  activeAddress: any;\n  // Customizable Area End\n}\n\ninterface SS {\n  id: any;\n}\n\nexport default class OrdermanagementController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n  getOrdersAPICallId: any;\n  getItemDetailAPICallId: any;\n  cancelOrderAPICallId: any;\n  rateOrderAPICallId: any;\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [\n      getName(MessageEnum.SessionResponseMessage),\n      getName(MessageEnum.RestAPIResponceMessage)\n    ];\n\n    this.state = {\n      orders: [],\n      // orders:[],\n      isCancelVisible: false,\n      isRateVisible: false,\n      cancelDialog: false,\n      starCount: 0,\n      token: \"\",\n      itemDetail: \"\",\n      activeOrderId: 0,\n      activeItemId: 0,\n      comment: \"\",\n      activeAddress: []\n    };\n    // Customizable Area End\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n  async componentDidMount() {\n    super.componentDidMount();\n    this.getToken();\n    if (this.isPlatformWeb() === false) {\n      this.props.navigation.addListener(\"willFocus\", () => {\n        this.getToken();\n      });\n    }\n  }\n  getToken = () => {\n    const msg: Message = new Message(\n      getName(MessageEnum.SessionRequestMessage)\n    );\n    this.send(msg);\n  };\n\n  async receive(from: string, message: Message) {\n    // Customizable Area Start\n    if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n      runEngine.debugLog(\"Token\", message);\n\n      let token = message.getData(getName(MessageEnum.SessionResponseToken));\n      this.setState({ token: token });\n      this.getOrdersDataRequest(token);\n    } else if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n      runEngine.debugLog(\"API Message Recived\", JSON.stringify(message));\n\n      const apiRequestCallId = message.getData(\n        getName(MessageEnum.RestAPIResponceDataMessage)\n      );\n\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n\n      var errorReponse = message.getData(\n        getName(MessageEnum.RestAPIResponceErrorMessage)\n      );\n      if (responseJson && responseJson.data) {\n        if (apiRequestCallId === this.getOrdersAPICallId) {\n          this.setState({ orders: responseJson.data });\n        } else if (apiRequestCallId === this.getItemDetailAPICallId) {\n          this.props.navigation.navigate(\"OrderDetails\", {\n            DATA: responseJson.data\n          });\n        } else if (apiRequestCallId === this.rateOrderAPICallId) {\n          this.setState({ isRateVisible: !this.state.isRateVisible });\n          this.props.navigation.goBack();\n        }\n        // runEngine.debugLog(\"API Recived\", responseJson.data);\n      } else if (apiRequestCallId === this.cancelOrderAPICallId) {\n        this.getOrdersDataRequest(this.state.token);\n        this.setState({\n          activeOrderId: 0,\n          activeItemId: 0,\n          isCancelVisible: false,\n          cancelDialog: true\n        });\n      } else if (errorReponse || responseJson.errors) {\n        this.parseApiErrorResponse(responseJson);\n        this.parseApiCatchErrorResponse(errorReponse);\n      }\n    }\n  }\n  // Customizable Area Start\n\n  cancelOrder = (orderId: number, itemId: number) => {\n    this.setState({\n      activeOrderId: orderId,\n      activeItemId: itemId,\n      isCancelVisible: !this.state.isCancelVisible\n    });\n  };\n  rateOrder = () => {\n    this.setState({ isRateVisible: !this.state.isRateVisible });\n  };\n  hideCancelModal = () => {\n    this.setState({ isCancelVisible: false });\n  };\n  selectCancel = () => {\n    this.setState({ isCancelVisible: false, cancelDialog: true });\n  };\n\n  getOrdersDataRequest = (token: string) => {\n    const header = {\n      \"Content-Type\": configJSON.ordersApiContentType,\n      token: token\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.getOrdersAPICallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.ordersAPiEndPoint\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.httpGetMethod\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n\n  getItemDetailDataRequest = (id: number) => {\n    const header = {\n      \"Content-Type\": configJSON.ordersApiContentType,\n      token: this.state.token\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.getItemDetailAPICallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.ordersAPiEndPoint + `/${id}`\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.httpGetMethod\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n    return true;\n  };\n\n  cancelOrderDataRequest = () => {\n    const header = {\n      \"Content-Type\": configJSON.ordersApiContentType,\n      token: this.state.token\n    };\n    var data = {\n      item_id: this.state.activeItemId\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.cancelOrderAPICallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.ordersAPiEndPoint + `/${this.state.activeOrderId}/cancel_order`\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestBodyMessage),\n      JSON.stringify(data)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.httpPutMethod\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n    return true;\n  };\n\n  rateOrderDataRequest = (id: number) => {\n    const header = {\n      \"Content-Type\": configJSON.ordersApiContentType,\n      token: this.state.token\n    };\n    var data = {\n      catalogue_id: id,\n      rating: this.state.starCount,\n      comment: this.state.comment\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.rateOrderAPICallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.rateAPiEndPoint\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestBodyMessage),\n      JSON.stringify(data)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.httpPostMethod\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n    return true;\n  };\n\n  // Customizable Area End\n}\n"]},"metadata":{},"sourceType":"module"}