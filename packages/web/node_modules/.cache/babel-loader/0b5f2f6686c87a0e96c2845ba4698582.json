{"ast":null,"code":"import _objectSpread from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/react-native-elements/src/tile/Tile.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageNative from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextPropTypes, ViewPropTypes, withTheme } from '../config';\nimport Image from '../image/Image';\nimport Text from '../text/Text';\nimport Icon from '../icons/Icon';\nimport FeaturedTile from './FeaturedTile';\n\nconst Tile = props => {\n  const featured = props.featured,\n        imageSrc = props.imageSrc,\n        icon = props.icon,\n        title = props.title,\n        children = props.children,\n        caption = props.caption,\n        titleStyle = props.titleStyle,\n        onPress = props.onPress,\n        activeOpacity = props.activeOpacity,\n        overlayContainerStyle = props.overlayContainerStyle,\n        captionStyle = props.captionStyle,\n        iconContainerStyle = props.iconContainerStyle,\n        imageContainerStyle = props.imageContainerStyle,\n        containerStyle = props.containerStyle,\n        contentContainerStyle = props.contentContainerStyle,\n        titleNumberOfLines = props.titleNumberOfLines,\n        ImageComponent = props.ImageComponent,\n        imageProps = props.imageProps,\n        attributes = _objectWithoutProperties(props, [\"featured\", \"imageSrc\", \"icon\", \"title\", \"children\", \"caption\", \"titleStyle\", \"onPress\", \"activeOpacity\", \"overlayContainerStyle\", \"captionStyle\", \"iconContainerStyle\", \"imageContainerStyle\", \"containerStyle\", \"contentContainerStyle\", \"titleNumberOfLines\", \"ImageComponent\", \"imageProps\"]);\n\n  const width = props.width,\n        _props$height = props.height,\n        height = _props$height === void 0 ? width * 0.8 : _props$height;\n\n  if (featured) {\n    const featuredProps = {\n      title,\n      icon,\n      caption,\n      imageSrc,\n      onPress,\n      activeOpacity,\n      containerStyle,\n      imageContainerStyle,\n      overlayContainerStyle,\n      titleStyle,\n      captionStyle,\n      width,\n      height,\n      imageProps,\n      ImageComponent\n    };\n    return /*#__PURE__*/React.createElement(FeaturedTile, Object.assign({}, featuredProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(TouchableOpacity, Object.assign({}, attributes, {\n    onPress: onPress,\n    activeOpacity: activeOpacity,\n    style: StyleSheet.flatten([{\n      width,\n      height\n    }, containerStyle && containerStyle]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ImageComponent, Object.assign({\n    resizeMode: \"cover\",\n    source: imageSrc,\n    containerStyle: StyleSheet.flatten([styles.imageContainer, imageContainerStyle && imageContainerStyle]),\n    style: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      alignItems: 'center',\n      justifyContent: 'center'\n    })\n  }, imageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(View, {\n    style: StyleSheet.flatten([styles.iconContainer, iconContainerStyle && iconContainerStyle]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, icon && /*#__PURE__*/React.createElement(Icon, Object.assign({}, icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 20\n    }\n  })))), /*#__PURE__*/React.createElement(View, {\n    style: StyleSheet.flatten([styles.contentContainer, contentContainerStyle && contentContainerStyle]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    testID: \"tileTitle\",\n    h4: true,\n    style: StyleSheet.flatten([styles.text, titleStyle && titleStyle]),\n    numberOfLines: titleNumberOfLines,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, title), children));\n};\n\nTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.node,\n  imageSrc: ImageNative.propTypes.source,\n  onPress: PropTypes.func,\n  activeOpacity: PropTypes.number,\n  containerStyle: ViewPropTypes.style,\n  imageContainerStyle: ViewPropTypes.style,\n  iconContainerStyle: ViewPropTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  titleStyle: TextPropTypes.style,\n  captionStyle: TextPropTypes.style,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  featured: PropTypes.bool,\n  children: PropTypes.node,\n  contentContainerStyle: ViewPropTypes.style,\n  titleNumberOfLines: PropTypes.number,\n  imageProps: PropTypes.object,\n  ImageComponent: PropTypes.elementType\n};\nTile.defaultProps = {\n  width: Dimensions.get('window').width,\n  ImageComponent: Image,\n  imageProps: {}\n};\nconst styles = StyleSheet.create({\n  imageContainer: {\n    flex: 2\n  },\n  text: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    marginBottom: 5\n  },\n  contentContainer: {\n    paddingTop: 15,\n    paddingBottom: 5,\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center'\n  }\n});\nexport { Tile };\nexport default withTheme(Tile, 'Tile');","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/react-native-elements/src/tile/Tile.js"],"names":["React","PropTypes","TextPropTypes","ViewPropTypes","withTheme","Image","Text","Icon","FeaturedTile","Tile","props","featured","imageSrc","icon","title","children","caption","titleStyle","onPress","activeOpacity","overlayContainerStyle","captionStyle","iconContainerStyle","imageContainerStyle","containerStyle","contentContainerStyle","titleNumberOfLines","ImageComponent","imageProps","attributes","width","height","featuredProps","StyleSheet","flatten","styles","imageContainer","absoluteFillObject","alignItems","justifyContent","iconContainer","contentContainer","text","propTypes","string","object","node","ImageNative","source","func","number","style","bool","elementType","defaultProps","Dimensions","get","create","flex","backgroundColor","marginBottom","paddingTop","paddingBottom","paddingLeft","paddingRight","alignSelf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  Dimensions,\n  Image as ImageNative,\n  TouchableOpacity,\n} from 'react-native';\n\nimport { TextPropTypes, ViewPropTypes, withTheme } from '../config';\n\nimport Image from '../image/Image';\nimport Text from '../text/Text';\nimport Icon from '../icons/Icon';\nimport FeaturedTile from './FeaturedTile';\n\nconst Tile = props => {\n  const {\n    featured,\n    imageSrc,\n    icon,\n    title,\n    children,\n    caption,\n    titleStyle,\n    onPress,\n    activeOpacity,\n    overlayContainerStyle,\n    captionStyle,\n    iconContainerStyle,\n    imageContainerStyle,\n    containerStyle,\n    contentContainerStyle,\n    titleNumberOfLines,\n    ImageComponent,\n    imageProps,\n    ...attributes\n  } = props;\n\n  const { width, height = width * 0.8 } = props;\n\n  if (featured) {\n    const featuredProps = {\n      title,\n      icon,\n      caption,\n      imageSrc,\n      onPress,\n      activeOpacity,\n      containerStyle,\n      imageContainerStyle,\n      overlayContainerStyle,\n      titleStyle,\n      captionStyle,\n      width,\n      height,\n      imageProps,\n      ImageComponent,\n    };\n    return <FeaturedTile {...featuredProps} />;\n  }\n\n  return (\n    <TouchableOpacity\n      {...attributes}\n      onPress={onPress}\n      activeOpacity={activeOpacity}\n      style={StyleSheet.flatten([\n        {\n          width,\n          height,\n        },\n        containerStyle && containerStyle,\n      ])}\n    >\n      <ImageComponent\n        resizeMode=\"cover\"\n        source={imageSrc}\n        containerStyle={StyleSheet.flatten([\n          styles.imageContainer,\n          imageContainerStyle && imageContainerStyle,\n        ])}\n        style={{\n          ...StyleSheet.absoluteFillObject,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n        {...imageProps}\n      >\n        <View\n          style={StyleSheet.flatten([\n            styles.iconContainer,\n            iconContainerStyle && iconContainerStyle,\n          ])}\n        >\n          {icon && <Icon {...icon} />}\n        </View>\n      </ImageComponent>\n\n      <View\n        style={StyleSheet.flatten([\n          styles.contentContainer,\n          contentContainerStyle && contentContainerStyle,\n        ])}\n      >\n        <Text\n          testID=\"tileTitle\"\n          h4\n          style={StyleSheet.flatten([styles.text, titleStyle && titleStyle])}\n          numberOfLines={titleNumberOfLines}\n        >\n          {title}\n        </Text>\n        {children}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.node,\n  imageSrc: ImageNative.propTypes.source,\n  onPress: PropTypes.func,\n  activeOpacity: PropTypes.number,\n  containerStyle: ViewPropTypes.style,\n  imageContainerStyle: ViewPropTypes.style,\n  iconContainerStyle: ViewPropTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  titleStyle: TextPropTypes.style,\n  captionStyle: TextPropTypes.style,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  featured: PropTypes.bool,\n  children: PropTypes.node,\n  contentContainerStyle: ViewPropTypes.style,\n  titleNumberOfLines: PropTypes.number,\n  imageProps: PropTypes.object,\n  ImageComponent: PropTypes.elementType,\n};\n\nTile.defaultProps = {\n  width: Dimensions.get('window').width,\n  ImageComponent: Image,\n  imageProps: {},\n};\n\nconst styles = StyleSheet.create({\n  imageContainer: {\n    flex: 2,\n  },\n  text: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    marginBottom: 5,\n  },\n  contentContainer: {\n    paddingTop: 15,\n    paddingBottom: 5,\n    paddingLeft: 15,\n    paddingRight: 15,\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n  },\n});\n\nexport { Tile };\nexport default withTheme(Tile, 'Tile');\n"]},"metadata":{},"sourceType":"module"}