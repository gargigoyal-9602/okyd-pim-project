{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { runEngine } from '../../../framework/src/RunEngine';\nimport { Message } from '../../../framework/src/Message';\nimport MessageEnum, { getName } from '../../../framework/src/Messages/MessageEnum';\nexport default class SplashScreenAdapter {\n  constructor() {\n    this.send = void 0;\n\n    this.convert = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(from) {\n        var to;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              to = new Message(getName(MessageEnum.NavigationMessage));\n              to.addData(getName(MessageEnum.NavigationTargetMessage), 'Home');\n              to.addData(getName(MessageEnum.NavigationPropsMessage), from.getData(getName(MessageEnum.NavigationPropsMessage)));\n              return _context.abrupt(\"return\", to);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    const blockId = uuidv4();\n\n    this.send = message => runEngine.sendMessage(blockId, message);\n\n    runEngine.attachBuildingBlock(this, [getName(MessageEnum.SplashScreenCompleteMessage)]);\n  }\n\n  receive(from, message) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = _this;\n            _context2.next = 3;\n            return _this.convert(message);\n\n          case 3:\n            _context2.t1 = _context2.sent;\n\n            _context2.t0.send.call(_context2.t0, _context2.t1);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/adapters/src/SplashScreenAdapter.tsx"],"names":["v4","uuidv4","runEngine","Message","MessageEnum","getName","SplashScreenAdapter","constructor","send","convert","from","to","NavigationMessage","addData","NavigationTargetMessage","NavigationPropsMessage","getData","blockId","message","sendMessage","attachBuildingBlock","SplashScreenCompleteMessage","receive"],"mappings":";;AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,SAAT,QAA0B,kCAA1B;AAEA,SAASC,OAAT,QAAwB,gCAAxB;AACA,OAAOC,WAAP,IACEC,OADF,QAEO,6CAFP;AAIA,eAAe,MAAMC,mBAAN,CAA0B;AAGvCC,EAAAA,WAAW,GAAG;AAAA,SAFdC,IAEc;;AAAA,SAQdC,OARc;AAAA,0EAQJ,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACFC,cAAAA,EADE,GACG,IAAIR,OAAJ,CAAYE,OAAO,CAACD,WAAW,CAACQ,iBAAb,CAAnB,CADH;AAERD,cAAAA,EAAE,CAACE,OAAH,CAAWR,OAAO,CAACD,WAAW,CAACU,uBAAb,CAAlB,EAAyD,MAAzD;AACAH,cAAAA,EAAE,CAACE,OAAH,CACER,OAAO,CAACD,WAAW,CAACW,sBAAb,CADT,EAEEL,IAAI,CAACM,OAAL,CAAaX,OAAO,CAACD,WAAW,CAACW,sBAAb,CAApB,CAFF;AAHQ,+CAODJ,EAPC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARI;;AAAA;AAAA;AAAA;AAAA;;AACZ,UAAMM,OAAO,GAAGhB,MAAM,EAAtB;;AACA,SAAKO,IAAL,GAAYU,OAAO,IAAIhB,SAAS,CAACiB,WAAV,CAAsBF,OAAtB,EAA+BC,OAA/B,CAAvB;;AACAhB,IAAAA,SAAS,CAACkB,mBAAV,CAA8B,IAA9B,EAA8C,CAC5Cf,OAAO,CAACD,WAAW,CAACiB,2BAAb,CADqC,CAA9C;AAGD;;AAYKC,EAAAA,OAAN,CAAcZ,IAAd,EAA4BQ,OAA5B,EAA6D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2BAC3D,KAD2D;AAAA;AAAA,mBAC3C,KAAI,CAACT,OAAL,CAAaS,OAAb,CAD2C;;AAAA;AAAA;;AAAA,yBACtDV,IADsD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE5D;;AAvBsC","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { runEngine } from '../../../framework/src/RunEngine';\nimport { IBlock } from '../../../framework/src/IBlock';\nimport { Message } from '../../../framework/src/Message';\nimport MessageEnum, {\n  getName\n} from '../../../framework/src/Messages/MessageEnum';\n\nexport default class SplashScreenAdapter {\n  send: (message: Message) => void;\n\n  constructor() {\n    const blockId = uuidv4();\n    this.send = message => runEngine.sendMessage(blockId, message);\n    runEngine.attachBuildingBlock(this as IBlock, [\n      getName(MessageEnum.SplashScreenCompleteMessage)\n    ]);\n  }\n\n  convert = async (from: Message): Promise<Message> => {\n    const to = new Message(getName(MessageEnum.NavigationMessage));\n    to.addData(getName(MessageEnum.NavigationTargetMessage), 'Home');\n    to.addData(\n      getName(MessageEnum.NavigationPropsMessage),\n      from.getData(getName(MessageEnum.NavigationPropsMessage))\n    );\n    return to;\n  };\n\n  async receive(from: string, message: Message): Promise<void> {\n    this.send(await this.convert(message));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}