{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/alert/src/AlertBlock.web.tsx\";\nimport React from \"react\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Message } from \"../../../framework/src/Message\";\nexport default class AlertBlock extends BlockComponent {\n  constructor(props) {\n    super(props);\n    this.messagePositiveButton = void 0;\n    this.messageNegativeButton = void 0;\n    this.messageNeutralButton = void 0;\n    this.subScribedMessages = [getName(MessageEnum.AlertMessage), getName(MessageEnum.NavigationPayLoadMessage)];\n    runEngine.attachBuildingBlock(this, this.subScribedMessages);\n    this.state = {\n      title: \"\",\n      body: \"\",\n      btnPositiveText: \"\",\n      btnNegativeText: \"\",\n      btnNeutralText: \"\"\n    };\n    this.GetTitleView = this.GetTitleView.bind(this);\n    this.GetMainView = this.GetMainView.bind(this);\n    this.receive = this.receive.bind(this);\n  }\n\n  render() {\n    return this.state.title || this.state.body || this.state.btnNeutralText || this.state.btnNegativeText || this.state.btnPositiveText ? /*#__PURE__*/React.createElement(this.GetMainView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }) : null;\n  }\n\n  onNegativeButtonPress() {\n    if (this.messageNegativeButton) {\n      this.send(this.messageNegativeButton);\n    } else {\n      this.props.navigation.goBack();\n    }\n  }\n\n  onPositiveButtonPress() {\n    if (this.messagePositiveButton) {\n      this.send(this.messagePositiveButton);\n    } else {\n      this.props.navigation.goBack();\n    }\n  }\n\n  onNeutralButtonPress() {\n    if (this.messageNeutralButton) {\n      this.send(this.messageNeutralButton);\n    } else {\n      this.props.navigation.goBack();\n    }\n  }\n\n  GetTitleView() {\n    return this.state.title ? /*#__PURE__*/React.createElement(Text, {\n      style: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, this.state.title) : null;\n  }\n\n  GetMainView() {\n    return /*#__PURE__*/React.createElement(View, {\n      style: styles.modalParentContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(this.GetTitleView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      style: styles.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, this.state.body), this.state.btnPositiveText || this.state.btnNegativeText || this.state.btnNeutralText ? /*#__PURE__*/React.createElement(View, {\n      style: styles.allButtonContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 98\n      }\n    }, //Neutral Button\n    this.state.btnNeutralText ? /*#__PURE__*/React.createElement(Button, {\n      onPress: () => {\n        this.onNeutralButtonPress();\n      },\n      title: this.state.btnNeutralText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 39\n      }\n    }) : null, //Positive & Negative Button Container\n    this.state.btnNegativeText || this.state.btnPositiveText ? /*#__PURE__*/React.createElement(View, {\n      style: styles.twoButtonContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, this.state.btnNegativeText ? /*#__PURE__*/React.createElement(Button, {\n      onPress: () => {\n        this.onNegativeButtonPress();\n      },\n      title: this.state.btnNegativeText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }) : null, this.state.btnPositiveText ? /*#__PURE__*/React.createElement(TouchableOpacity, {\n      style: styles.positiveButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onPress: () => {\n        this.onPositiveButtonPress();\n      },\n      title: this.state.btnPositiveText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    })) : null) : null) : null);\n  }\n\n  receive(from, message) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var alertType, title, body, btnPositiveText, btnPositiveMessage, btnNegativeText, btnNegativeMessage, btnNeutralText, btnNeutralMessage;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (getName(MessageEnum.AlertMessage) === message.id) {\n              _this.navigateToAlertPage(message);\n            } else if (getName(MessageEnum.NavigationPayLoadMessage) === message.id) {\n              alertType = message.getData(getName(MessageEnum.AlertTypeMessage));\n              title = message.getData(getName(MessageEnum.AlertTitleMessage));\n              body = message.getData(getName(MessageEnum.AlertBodyMessage));\n              btnPositiveText = message.getData(getName(MessageEnum.AlertButtonPositiveText));\n              btnPositiveMessage = message.getData(getName(MessageEnum.AlertButtonPositiveMessage));\n              btnNegativeText = message.getData(getName(MessageEnum.AlertButtonNegativeText));\n              btnNegativeMessage = message.getData(getName(MessageEnum.AlertButtonNegativeMessage));\n              btnNeutralText = message.getData(getName(MessageEnum.AlertButtonNeutralText));\n              btnNeutralMessage = message.getData(getName(MessageEnum.AlertButtonNeutralMessage));\n\n              _this.setState({\n                title: title,\n                body: body,\n                btnPositiveText: btnPositiveText,\n                btnNegativeText: btnNegativeText,\n                btnNeutralText: btnNeutralText\n              });\n\n              _this.messagePositiveButton = btnPositiveMessage;\n              _this.messageNegativeButton = btnNegativeMessage;\n              _this.messageNeutralButton = btnNeutralMessage;\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  navigateToAlertPage(message) {\n    const msg = new Message(getName(MessageEnum.NavigationAlertWebMessage));\n    msg.addData(getName(MessageEnum.NavigationPropsMessage), message.getData(getName(MessageEnum.NavigationPropsMessage)));\n    msg.copyAllPropertiesOf(message);\n    this.send(msg);\n  }\n\n}\nconst styles = StyleSheet.create({\n  allButtonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  body: {\n    padding: 0,\n    fontSize: 24,\n    marginBottom: 15,\n    marginTop: 7\n  },\n  twoButtonContainer: {\n    flexDirection: \"row\",\n    marginLeft: 40\n  },\n  positiveButton: {\n    marginLeft: 10\n  },\n  modalParentContainer: {\n    padding: 10,\n    flex: 1\n  },\n  title: {\n    padding: 0,\n    fontSize: 30,\n    fontWeight: \"bold\",\n    includeFontPadding: false\n  }\n});","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/alert/src/AlertBlock.web.tsx"],"names":["React","BlockComponent","runEngine","MessageEnum","getName","Message","AlertBlock","constructor","props","messagePositiveButton","messageNegativeButton","messageNeutralButton","subScribedMessages","AlertMessage","NavigationPayLoadMessage","attachBuildingBlock","state","title","body","btnPositiveText","btnNegativeText","btnNeutralText","GetTitleView","bind","GetMainView","receive","render","onNegativeButtonPress","send","navigation","goBack","onPositiveButtonPress","onNeutralButtonPress","styles","modalParentContainer","allButtonContainer","twoButtonContainer","positiveButton","from","message","id","navigateToAlertPage","alertType","getData","AlertTypeMessage","AlertTitleMessage","AlertBodyMessage","AlertButtonPositiveText","btnPositiveMessage","AlertButtonPositiveMessage","AlertButtonNegativeText","btnNegativeMessage","AlertButtonNegativeMessage","AlertButtonNeutralText","btnNeutralMessage","AlertButtonNeutralMessage","setState","msg","NavigationAlertWebMessage","addData","NavigationPropsMessage","copyAllPropertiesOf","StyleSheet","create","flexDirection","justifyContent","padding","fontSize","marginBottom","marginTop","marginLeft","flex","fontWeight","includeFontPadding"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport { IBlock } from \"../../../framework/src/IBlock\";\nimport MessageEnum, {\n  getName\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { View, Text, Button, TouchableOpacity, StyleSheet } from \"react-native\";\nimport { Platform, Alert } from \"react-native\";\nimport { Message } from \"../../../framework/src/Message\";\n\ninterface Props {\n  navigation: any;\n}\n\ninterface S {\n\n  title: string;\n  body: string;\n  btnPositiveText: string;\n  btnNegativeText: string;\n  btnNeutralText: string;\n\n}\n\ninterface SS { }\n\nexport default class AlertBlock extends BlockComponent<Props, S, SS> {\n\n  messagePositiveButton: any\n  messageNegativeButton: any\n  messageNeutralButton: any\n\n\n  constructor(props: Props) {\n    super(props);\n\n    this.subScribedMessages = [\n      getName(MessageEnum.AlertMessage),\n      getName(MessageEnum.NavigationPayLoadMessage),\n\n    ]\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n\n    this.state = {\n      title: \"\",\n      body: \"\",\n      btnPositiveText: \"\",\n      btnNegativeText: \"\",\n      btnNeutralText: \"\",\n    }\n\n    this.GetTitleView = this.GetTitleView.bind(this);\n    this.GetMainView = this.GetMainView.bind(this);\n\n    this.receive = this.receive.bind(this);\n  }\n\n\n  render() {\n\n    return (\n\n\n      \n\n        (this.state.title || this.state.body || this.state.btnNeutralText || this.state.btnNegativeText || this.state.btnPositiveText)\n        ?\n        <this.GetMainView></this.GetMainView>\n\n        : null\n\n      \n\n     \n      );\n}\n\n\n\nonNegativeButtonPress() {\n  if (this.messageNegativeButton) {\n\n    this.send(this.messageNegativeButton)\n\n  } else {\n    this.props.navigation.goBack();\n  }\n}\n\nonPositiveButtonPress() {\n  if (this.messagePositiveButton) {\n\n    this.send(this.messagePositiveButton)\n\n  } else {\n    this.props.navigation.goBack();\n  }\n}\nonNeutralButtonPress() {\n  if (this.messageNeutralButton) {\n\n    this.send(this.messageNeutralButton)\n\n  } else {\n    this.props.navigation.goBack();\n  }\n}\n\n\nGetTitleView() {\n\n  return (\n\n    this.state.title ?\n      <Text style={styles.title}>{this.state.title}</Text> : null\n\n  );\n}\n\n\nGetMainView() {\n\n  return (\n\n    <View\n      style={styles.modalParentContainer}\n    >\n\n\n      <this.GetTitleView></this.GetTitleView>\n\n      <Text style={styles.body}>{this.state.body}</Text>\n\n\n      {(this.state.btnPositiveText || this.state.btnNegativeText || this.state.btnNeutralText) ? <View style={styles.allButtonContainer}>\n\n\n\n        {\n          //Neutral Button\n\n          this.state.btnNeutralText ? <Button\n            onPress={() => {\n              this.onNeutralButtonPress()\n            }}\n            title={this.state.btnNeutralText}\n          /> : null\n        }\n\n\n\n        {\n          //Positive & Negative Button Container\n\n\n          (this.state.btnNegativeText || this.state.btnPositiveText) ?\n\n            <View style={styles.twoButtonContainer}>\n\n              {\n                this.state.btnNegativeText ?\n                  <Button\n                    onPress={() => {\n                      this.onNegativeButtonPress()\n                    }}\n                    title={this.state.btnNegativeText}\n                  /> : null\n              }\n              {\n\n                this.state.btnPositiveText ?\n                  <TouchableOpacity\n                    style={styles.positiveButton}\n                  >\n\n                    <Button\n                      onPress={() => {\n                        this.onPositiveButtonPress()\n                      }}\n                      title={this.state.btnPositiveText}\n                    />\n                  </TouchableOpacity> : null\n\n              }\n\n\n            </View>\n\n            : null\n\n\n        }\n\n\n      </View>\n\n        : null}\n\n\n    </View>\n\n\n\n\n  );\n\n}\n\n\nasync receive(from: string, message: Message) {\n\n  if (getName(MessageEnum.AlertMessage) === message.id) {\n    this.navigateToAlertPage(message);\n  } else if (getName(MessageEnum.NavigationPayLoadMessage) === message.id) {\n\n    let alertType = message.getData(getName(MessageEnum.AlertTypeMessage));\n    let title = message.getData(getName(MessageEnum.AlertTitleMessage));\n    let body = message.getData(getName(MessageEnum.AlertBodyMessage));\n\n    let btnPositiveText = message.getData(getName(MessageEnum.AlertButtonPositiveText));\n    let btnPositiveMessage = message.getData(getName(MessageEnum.AlertButtonPositiveMessage));\n\n    let btnNegativeText = message.getData(getName(MessageEnum.AlertButtonNegativeText));\n    let btnNegativeMessage = message.getData(getName(MessageEnum.AlertButtonNegativeMessage));\n\n    let btnNeutralText = message.getData(getName(MessageEnum.AlertButtonNeutralText));\n    let btnNeutralMessage = message.getData(getName(MessageEnum.AlertButtonNeutralMessage));\n\n    this.setState({ title: title, body: body, btnPositiveText: btnPositiveText, btnNegativeText: btnNegativeText, btnNeutralText: btnNeutralText })\n\n    this.messagePositiveButton = btnPositiveMessage;\n    this.messageNegativeButton = btnNegativeMessage;\n    this.messageNeutralButton = btnNeutralMessage;\n\n\n  }\n\n}\n\n\nnavigateToAlertPage(message: Message) {\n\n  const msg: Message = new Message(getName(MessageEnum.NavigationAlertWebMessage));\n  msg.addData(\n    getName(MessageEnum.NavigationPropsMessage),\n    message.getData(getName(MessageEnum.NavigationPropsMessage))\n  )\n\n  msg.copyAllPropertiesOf(message);\n\n  this.send(msg)\n}\n\n\n\n\n}\n\n\n\nconst styles = StyleSheet.create({\n  allButtonContainer: { flexDirection: \"row\", justifyContent: \"space-between\" },\n  body: { padding: 0, fontSize: 24, marginBottom: 15, marginTop: 7 },\n  twoButtonContainer: { flexDirection: \"row\", marginLeft: 40 },\n  positiveButton: { marginLeft: 10 },\n  modalParentContainer: {\n    padding: 10,\n    flex: 1\n  },\n  title: { padding: 0, fontSize: 30, fontWeight: \"bold\", includeFontPadding: false }\n});\n"]},"metadata":{},"sourceType":"module"}