{"ast":null,"code":"import _regeneratorRuntime from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/lp-greenapex/gargi/okydpim-36944-react-native/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport RichTextEditor from 'react-rte';\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, { getName } from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport { orderBy } from \"lodash\"; // Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"./assets\";\n// Customizable Area End\n\nexport const configJSON = require(\"./subCategories.config\");\nexport default class SubCategoriesController extends BlockComponent {\n  constructor(props) {\n    super(props);\n    this.auth = window.localStorage.getItem(\"auth\");\n    this.getCategoryApiCallId = \"\";\n    this.getSubCategoryApiCallId = \"\";\n    this.subCategoryDetailsApiCallId = \"\";\n    this.subCategoryCreateApiCallId = \"\";\n    this.subCategoryUpdateApiCallId = \"\";\n    this.deleteSubCategoryApiCallId = \"\";\n\n    this.getCategoryList = () => {\n      const headers = {\n        \"Content-Type\": configJSON.apiContentType,\n        token: this.auth\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getCategoryApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.categoryAPIEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpGetType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.getSubCategoryList = () => {\n      this.setState({\n        loader: true\n      });\n      const headers = {\n        \"Content-Type\": configJSON.apiContentType,\n        token: this.auth\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.getSubCategoryApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), configJSON.subCategoryAPIEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpGetType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.categoryDetails = subCatId => {\n      const headers = {\n        \"Content-Type\": configJSON.apiContentType,\n        token: this.auth\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.subCategoryDetailsApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), \"\".concat(configJSON.subCategoryAPIEndPoint, \"/\").concat(subCatId));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpGetType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.createSubCategory = values => {\n      const categoryId = values.categoryId,\n            parent_categories = values.parent_categories,\n            restValues = _objectWithoutProperties(values, [\"categoryId\", \"parent_categories\"]);\n\n      const headers = {\n        \"Content-Type\": configJSON.apiContentType,\n        token: this.auth\n      };\n      const httpBody = {\n        sub_category: _objectSpread({}, restValues),\n        parent_categories: parent_categories.id\n      };\n      const apiEndPoint = configJSON.subCategoryAPIEndPoint;\n      const methodType = configJSON.httpPostType;\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.subCategoryCreateApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), apiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(httpBody));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), methodType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.updateSubCategory = values => {\n      const subCategoryId = values.subCategoryId,\n            parent_categories = values.parent_categories,\n            restValues = _objectWithoutProperties(values, [\"subCategoryId\", \"parent_categories\"]);\n\n      const headers = {\n        \"Content-Type\": configJSON.apiContentType,\n        token: this.auth\n      };\n      const httpBody = {\n        sub_category: _objectSpread({}, restValues),\n        parent_categories: parent_categories.id\n      };\n      const apiEndPoint = \"\".concat(configJSON.subCategoryAPIEndPoint, \"/\").concat(values.subCategoryId);\n      const methodType = configJSON.httpPutType;\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.subCategoryUpdateApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), apiEndPoint);\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(httpBody));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), methodType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.deleteSubCategoryHandler = subCatId => {\n      const headers = {\n        token: this.auth\n      };\n      const requestMessage = new Message(getName(MessageEnum.RestAPIRequestMessage));\n      this.deleteSubCategoryApiCallId = requestMessage.messageId;\n      requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), \"\".concat(configJSON.subCategoryAPIEndPoint, \"/\").concat(subCatId));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n      requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), configJSON.httpDeleteType);\n      runEngine.sendMessage(requestMessage.id, requestMessage);\n      return true;\n    };\n\n    this.updateActiveStatus = (subCatId, active) => {\n      this.categoryDetails(subCatId);\n      setTimeout(() => {\n        var _catDetails$attribute, _catDetails$attribute2, _catDetails$attribute3, _catDetails$attribute4, _catDetails$attribute5, _catDetails$attribute6, _catDetails$attribute7, _catDetails$attribute8, _catDetails$attribute9;\n\n        const catDetails = this.state.categoryDetailsData;\n        const values = {\n          subCategoryId: subCatId,\n          name: catDetails === null || catDetails === void 0 ? void 0 : (_catDetails$attribute = catDetails.attributes) === null || _catDetails$attribute === void 0 ? void 0 : _catDetails$attribute.name,\n          description: catDetails === null || catDetails === void 0 ? void 0 : (_catDetails$attribute2 = catDetails.attributes) === null || _catDetails$attribute2 === void 0 ? void 0 : _catDetails$attribute2.description,\n          discount: catDetails === null || catDetails === void 0 ? void 0 : (_catDetails$attribute3 = catDetails.attributes) === null || _catDetails$attribute3 === void 0 ? void 0 : _catDetails$attribute3.discount,\n          active: active,\n          private: catDetails === null || catDetails === void 0 ? void 0 : (_catDetails$attribute4 = catDetails.attributes) === null || _catDetails$attribute4 === void 0 ? void 0 : _catDetails$attribute4.private,\n          default_category: catDetails === null || catDetails === void 0 ? void 0 : (_catDetails$attribute5 = catDetails.attributes) === null || _catDetails$attribute5 === void 0 ? void 0 : _catDetails$attribute5.default_category,\n          meta_title: catDetails === null || catDetails === void 0 ? void 0 : (_catDetails$attribute6 = catDetails.attributes) === null || _catDetails$attribute6 === void 0 ? void 0 : _catDetails$attribute6.meta_title,\n          meta_description: catDetails === null || catDetails === void 0 ? void 0 : (_catDetails$attribute7 = catDetails.attributes) === null || _catDetails$attribute7 === void 0 ? void 0 : _catDetails$attribute7.meta_description,\n          parent_categories: (catDetails === null || catDetails === void 0 ? void 0 : (_catDetails$attribute8 = catDetails.attributes) === null || _catDetails$attribute8 === void 0 ? void 0 : _catDetails$attribute8.categories.length) > 0 ? catDetails === null || catDetails === void 0 ? void 0 : (_catDetails$attribute9 = catDetails.attributes) === null || _catDetails$attribute9 === void 0 ? void 0 : _catDetails$attribute9.categories[0].id : []\n        };\n        this.updateSubCategory(values);\n        setTimeout(() => {\n          this.getSubCategoryList();\n        }, 1000);\n      }, 1000);\n    };\n\n    this.handleImageUpload = event => {\n      var file = event.target.files[0];\n      const reader = new FileReader();\n      var url = reader.readAsDataURL(file);\n\n      reader.onloadend = e => {\n        this.setState({\n          selectedFile: [reader.result]\n        });\n      };\n\n      console.log(url);\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onMenuToggle = () => {\n      this.setState({\n        menuCollapsed: !this.state.menuCollapsed\n      });\n    };\n\n    this.openSnackBarHandler = (type, message) => {\n      this.setState({\n        snackBar: {\n          show: true,\n          message: message,\n          type\n        }\n      });\n    };\n\n    this.closeSnackBarHandler = () => {\n      this.setState({\n        snackBar: {\n          show: false,\n          message: this.state.snackBar.message,\n          type: this.state.snackBar.type\n        }\n      });\n    };\n\n    this.handleSortingName = () => {\n      this.setState({\n        sortName: this.state.sortName !== 'asc' ? 'asc' : 'desc'\n      });\n      setTimeout(() => {\n        const sortedData = orderBy(this.state.subCategoryData, item => item.attributes.name.toLowerCase(), this.state.sortName);\n        this.setState({\n          subCategoryData: sortedData\n        });\n      }, 500);\n    };\n\n    this.handleSortingDiscount = () => {\n      this.setState({\n        sortDiscount: this.state.sortDiscount !== 'asc' ? 'asc' : 'desc'\n      });\n      setTimeout(() => {\n        const sortedData = orderBy(this.state.subCategoryData, item => item.attributes.discount, this.state.sortDiscount);\n        this.setState({\n          subCategoryData: sortedData\n        });\n      }, 500);\n    };\n\n    this.receive = this.receive.bind(this); // Customizable Area Start\n\n    this.subScribedMessages = [getName(MessageEnum.RestAPIResponceMessage)];\n    this.state = {\n      auth: \"\",\n      userType: configJSON.subscriber,\n      menuCollapsed: false,\n      categoryData: [],\n      subCategoryData: [],\n      categoryDetailsData: [],\n      modulesData: [],\n      rolesUpdateModal: false,\n      checkbox: false,\n      snackBar: {\n        show: false\n      },\n      loader: false,\n      selectedFile: null,\n      editor: RichTextEditor.createEmptyValue(),\n      sortDiscount: null,\n      sortName: null\n    }; // Customizable Area End\n\n    runEngine.attachBuildingBlock(this, this.subScribedMessages);\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _this.getSubCategoryList();\n\n            _this.getCategoryList();\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  } // Handler for Get Catrgory List\n\n\n  receive(from, message) {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var responseJson, errorReponse, apiRequestCallId, categoryData, _responseJson$data$at, errors, _this2$props;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            // Customizable Area Start\n            runEngine.debugLog(\"Message Recevied\", message);\n\n            if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n              responseJson = message.getData(getName(MessageEnum.RestAPIResponceSuccessMessage));\n              errorReponse = message.getData(getName(MessageEnum.RestAPIResponceErrorMessage));\n              apiRequestCallId = message.getData(getName(MessageEnum.RestAPIResponceDataMessage));\n\n              if (responseJson && !responseJson.errors) {\n                if (apiRequestCallId != null) {\n                  // Store All Category data\n                  if (apiRequestCallId === _this2.getCategoryApiCallId && responseJson !== undefined) {\n                    categoryData = [];\n                    responseJson.data.map(category => {\n                      categoryData.push({\n                        id: category.attributes.id,\n                        name: category.attributes.name\n                      });\n                    });\n\n                    _this2.setState({\n                      categoryData\n                    });\n                  } // Store All sub Category data\n\n\n                  if (apiRequestCallId === _this2.getSubCategoryApiCallId && responseJson !== undefined) {\n                    _this2.setState({\n                      subCategoryData: responseJson.data,\n                      loader: false\n                    });\n\n                    _this2.handleSortingName();\n                  } // Store sub category details\n\n\n                  if (apiRequestCallId === _this2.subCategoryDetailsApiCallId && responseJson !== undefined) {\n                    _this2.setState({\n                      categoryDetailsData: responseJson.data,\n                      editor: RichTextEditor.createValueFromString((_responseJson$data$at = responseJson.data.attributes) === null || _responseJson$data$at === void 0 ? void 0 : _responseJson$data$at.description, 'html')\n                    });\n                  } // Create Sub Category\n\n\n                  if (apiRequestCallId === _this2.subCategoryCreateApiCallId && responseJson !== undefined) {\n                    _this2.openSnackBarHandler('success', configJSON.successCreateMsgText);\n\n                    setTimeout(() => {\n                      //@ts-ignore\n                      _this2.props.history.push('/sub-categories');\n                    }, 1000);\n                  } // Update Sub Category\n\n\n                  if (apiRequestCallId === _this2.subCategoryUpdateApiCallId && responseJson !== undefined) {\n                    _this2.openSnackBarHandler('success', configJSON.successUpdateMsgText);\n\n                    setTimeout(() => {\n                      //@ts-ignore\n                      _this2.props.history.push('/sub-categories');\n                    }, 1000);\n                  } // Delete Sub Category\n\n\n                  if (apiRequestCallId === _this2.deleteSubCategoryApiCallId && responseJson !== undefined) {\n                    console.log(responseJson);\n\n                    if (!responseJson.error) {\n                      _this2.openSnackBarHandler('success', configJSON.deleteCategoryMsgText);\n\n                      setTimeout(() => {\n                        _this2.getSubCategoryList();\n                      }, 500);\n                    } else {\n                      _this2.openSnackBarHandler('error', responseJson.error.message);\n                    }\n                  }\n                }\n              } else {\n                errors = responseJson.errors;\n\n                _this2.parseApiCatchErrorResponse(errorReponse);\n\n                if (errors[0].token === 'Invalid token' || errors[0].token === 'Token has Expired') {\n                  AsyncStorage.setItem(\"auth\", \"\"); //@ts-ignore\n\n                  (_this2$props = _this2.props) === null || _this2$props === void 0 ? void 0 : _this2$props.history.push(\"/login\");\n                } else if (errors[0].message) {\n                  _this2.openSnackBarHandler('error', errors[0].message);\n                } else {\n                  if (apiRequestCallId === _this2.subCategoryCreateApiCallId) {\n                    _this2.openSnackBarHandler('error', configJSON.errorCreateMsgText);\n                  }\n                }\n              }\n            } // Customizable Area End\n\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  } // Customizable Area End\n\n\n}","map":{"version":3,"sources":["/home/lp-greenapex/gargi/okydpim-36944-react-native/src/packages/blocks/categoriessubcategories/src/SubCategoriesController.web.tsx"],"names":["RichTextEditor","Message","BlockComponent","MessageEnum","getName","runEngine","orderBy","configJSON","require","SubCategoriesController","constructor","props","auth","window","localStorage","getItem","getCategoryApiCallId","getSubCategoryApiCallId","subCategoryDetailsApiCallId","subCategoryCreateApiCallId","subCategoryUpdateApiCallId","deleteSubCategoryApiCallId","getCategoryList","headers","apiContentType","token","requestMessage","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","categoryAPIEndPoint","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","httpGetType","sendMessage","id","getSubCategoryList","setState","loader","subCategoryAPIEndPoint","categoryDetails","subCatId","createSubCategory","values","categoryId","parent_categories","restValues","httpBody","sub_category","apiEndPoint","methodType","httpPostType","RestAPIRequestBodyMessage","updateSubCategory","subCategoryId","httpPutType","deleteSubCategoryHandler","httpDeleteType","updateActiveStatus","active","setTimeout","catDetails","state","categoryDetailsData","name","attributes","description","discount","private","default_category","meta_title","meta_description","categories","length","handleImageUpload","event","file","target","files","reader","FileReader","url","readAsDataURL","onloadend","e","selectedFile","result","console","log","onMenuToggle","menuCollapsed","openSnackBarHandler","type","message","snackBar","show","closeSnackBarHandler","handleSortingName","sortName","sortedData","subCategoryData","item","toLowerCase","handleSortingDiscount","sortDiscount","receive","bind","subScribedMessages","RestAPIResponceMessage","userType","subscriber","categoryData","modulesData","rolesUpdateModal","checkbox","editor","createEmptyValue","attachBuildingBlock","componentDidMount","from","debugLog","responseJson","getData","RestAPIResponceSuccessMessage","errorReponse","RestAPIResponceErrorMessage","apiRequestCallId","RestAPIResponceDataMessage","errors","undefined","data","map","category","push","createValueFromString","successCreateMsgText","history","successUpdateMsgText","error","deleteCategoryMsgText","parseApiCatchErrorResponse","AsyncStorage","setItem","errorCreateMsgText"],"mappings":"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","sourcesContent":["import { AsyncStorage } from \"react-native\";\nimport RichTextEditor from 'react-rte';\nimport { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName,\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\nimport {orderBy} from \"lodash\"\n\n\n// Customizable Area Start\n// import { imgPasswordInVisible, imgPasswordVisible } from \"./assets\";\n// Customizable Area End\n\nexport const configJSON = require(\"./subCategories.config\");\n\ninterface SelectOptions {\n  value: string;\n  label: string;\n}\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  match: any;\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  auth: string | null | undefined;\n  userType: string;\n  menuCollapsed: boolean;\n  categoryData: object[];\n  subCategoryData: object[];\n  modulesData: object[];\n  categoryDetailsData: any;\n  rolesUpdateModal: boolean;\n  checkbox: boolean;\n  snackBar: {\n    show: boolean,\n    message?: string,\n    type?: \"success\" | \"info\" | \"warning\" | \"error\" | undefined\n  };\n  loader: boolean,\n  selectedFile: any,\n  editor: any,\n  sortDiscount:any,\n  sortName: any\n  // Customizable Area End\n}\n\ninterface SS {\n  id: any;\n}\n\ninterface CategoryDataType {\n  id: number,\n  name: string\n}\n\nexport default class SubCategoriesController extends BlockComponent<\n  Props,\n  S,\n  SS\n> {\n  auth: string | null | undefined = window.localStorage.getItem(\"auth\");\n  getCategoryApiCallId: string = \"\";\n  getSubCategoryApiCallId: string = \"\";\n  subCategoryDetailsApiCallId: string = \"\";\n  subCategoryCreateApiCallId: string = \"\";\n  subCategoryUpdateApiCallId: string = \"\";\n  deleteSubCategoryApiCallId: string = \"\";\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    this.subScribedMessages = [getName(MessageEnum.RestAPIResponceMessage)];\n\n    this.state = {\n      auth: \"\",\n      userType: configJSON.subscriber,\n      menuCollapsed: false,\n      categoryData: [],\n      subCategoryData: [],\n      categoryDetailsData: [],\n      modulesData: [],\n      rolesUpdateModal: false,\n      checkbox: false,\n      snackBar: {\n        show: false,\n      },\n      loader: false,\n      selectedFile: null,\n      editor: RichTextEditor.createEmptyValue(),\n      sortDiscount:null,\n      sortName:null\n    };\n    // Customizable Area End\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n  }\n\n  async componentDidMount() {\n    this.getSubCategoryList();\n    this.getCategoryList();\n  }\n\n  // Handler for Get Catrgory List\n  getCategoryList = (): boolean => {\n    const headers = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.auth,\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.getCategoryApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.categoryAPIEndPoint\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.httpGetType\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  // Handler for Get Catrgory List\n  getSubCategoryList = (): boolean => {\n    this.setState({\n      loader: true\n    });\n\n    const headers = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.auth,\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.getSubCategoryApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.subCategoryAPIEndPoint\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.httpGetType\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  // Handler for sub category details\n  categoryDetails = (subCatId: number): boolean => {\n    const headers = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.auth,\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.subCategoryDetailsApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      `${configJSON.subCategoryAPIEndPoint}/${subCatId}`\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.httpGetType\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  // Create Sub Category Handler\n  createSubCategory = (values: any): boolean => {\n    const {categoryId, parent_categories, ...restValues}  = values;\n    const headers = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.auth,\n    };\n    const httpBody = {\n      sub_category: {...restValues},\n      parent_categories: parent_categories.id\n    };\n    const apiEndPoint = configJSON.subCategoryAPIEndPoint;\n    const methodType = configJSON.httpPostType;\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.subCategoryCreateApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), apiEndPoint);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(httpBody));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), methodType);\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  // Update Category Handler\n  updateSubCategory = (values: any): boolean => {\n    const {subCategoryId, parent_categories,  ...restValues}  = values;\n    const headers = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.auth,\n    };\n    const httpBody = {\n      sub_category: {...restValues},\n      parent_categories: parent_categories.id\n    };\n    const apiEndPoint = `${configJSON.subCategoryAPIEndPoint}/${values.subCategoryId}`;\n    const methodType = configJSON.httpPutType;\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.subCategoryUpdateApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(getName(MessageEnum.RestAPIResponceEndPointMessage), apiEndPoint);\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestHeaderMessage), JSON.stringify(headers));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestBodyMessage), JSON.stringify(httpBody));\n    requestMessage.addData(getName(MessageEnum.RestAPIRequestMethodMessage), methodType);\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  // Delete Category handler\n  deleteSubCategoryHandler = (subCatId: number): boolean => {\n    const headers = {\n      token: this.auth,\n    };\n\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.deleteSubCategoryApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      `${configJSON.subCategoryAPIEndPoint}/${subCatId}`\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(headers)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.httpDeleteType\n    );\n\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n\n    return true;\n  };\n\n  // Update Active Status\n  updateActiveStatus = (subCatId: number, active: boolean) => {\n    this.categoryDetails(subCatId);\n    setTimeout(() => {\n      const catDetails = this.state.categoryDetailsData;\n      const values = {\n        subCategoryId: subCatId,\n        name: catDetails?.attributes?.name,\n        description: catDetails?.attributes?.description,\n        discount: catDetails?.attributes?.discount,\n        active: active,\n        private: catDetails?.attributes?.private,\n        default_category: catDetails?.attributes?.default_category,\n        meta_title: catDetails?.attributes?.meta_title,\n        meta_description: catDetails?.attributes?.meta_description,\n        parent_categories: catDetails?.attributes?.categories.length > 0 ? catDetails?.attributes?.categories[0].id : [],\n      };\n      this.updateSubCategory(values);\n      setTimeout(() => {\n        this.getSubCategoryList();\n      }, 1000);\n    }, 1000);\n  };\n\n  handleImageUpload = (event: any) => {\n    var file = event.target.files[0];\n    const reader = new FileReader();\n    var url = reader.readAsDataURL(file);\n\n    reader.onloadend = (e: any) => {\n      this.setState({ selectedFile: [reader.result] });\n    };\n    console.log(url);\n\n    this.setState({\n      selectedFile: event.target.files[0],\n    });\n  };\n\n  async receive(from: string, message: Message) {\n    // Customizable Area Start\n    runEngine.debugLog(\"Message Recevied\", message);\n\n    if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n      var responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      var errorReponse = message.getData(\n        getName(MessageEnum.RestAPIResponceErrorMessage)\n      );\n      const apiRequestCallId = message.getData(\n        getName(MessageEnum.RestAPIResponceDataMessage)\n      );\n      if (responseJson && !responseJson.errors) {\n        if (apiRequestCallId != null) {\n          // Store All Category data\n          if (\n            apiRequestCallId === this.getCategoryApiCallId &&\n            responseJson !== undefined\n          ) {\n            const categoryData: CategoryDataType[] = [];\n            responseJson.data.map((category: any) => {\n              categoryData.push({\n                id: category.attributes.id,\n                name: category.attributes.name,\n              })\n            })\n            this.setState({ categoryData });\n          }\n\n          // Store All sub Category data\n          if (\n            apiRequestCallId === this.getSubCategoryApiCallId &&\n            responseJson !== undefined\n          ) {\n            this.setState({\n              subCategoryData: responseJson.data,\n              loader: false\n            });\n            this.handleSortingName()\n          }\n\n          // Store sub category details\n          if (\n            apiRequestCallId === this.subCategoryDetailsApiCallId &&\n            responseJson !== undefined\n          ) {\n            this.setState({\n              categoryDetailsData: responseJson.data,\n              editor:  RichTextEditor.createValueFromString(responseJson.data.attributes?.description, 'html')\n            });\n          }\n\n          // Create Sub Category\n          if (apiRequestCallId === this.subCategoryCreateApiCallId && responseJson !== undefined) {\n            this.openSnackBarHandler('success', configJSON.successCreateMsgText);\n            setTimeout(() => {\n              //@ts-ignore\n              this.props.history.push('/sub-categories');\n            }, 1000);\n          }\n\n          // Update Sub Category\n          if (apiRequestCallId === this.subCategoryUpdateApiCallId && responseJson !== undefined) {\n            this.openSnackBarHandler('success', configJSON.successUpdateMsgText);\n            setTimeout(() => {\n              //@ts-ignore\n              this.props.history.push('/sub-categories');\n            }, 1000);\n          }\n\n          // Delete Sub Category\n          if (apiRequestCallId === this.deleteSubCategoryApiCallId && responseJson !== undefined) {\n            console.log(responseJson);\n            if(!responseJson.error) {\n              this.openSnackBarHandler('success', configJSON.deleteCategoryMsgText);\n              setTimeout(() => {\n                this.getSubCategoryList();\n              }, 500);\n            } else {\n              this.openSnackBarHandler('error', responseJson.error.message);\n            }\n          }\n        }\n      } else {\n        const errors = responseJson.errors;\n        this.parseApiCatchErrorResponse(errorReponse);\n\n        if(errors[0].token === 'Invalid token' ||errors[0].token ===  'Token has Expired') {\n          AsyncStorage.setItem(\"auth\", \"\");\n          //@ts-ignore\n          this.props?.history.push(\"/login\");\n        } else if(errors[0].message) {\n          this.openSnackBarHandler('error', errors[0].message);\n        } else {\n          if (apiRequestCallId === this.subCategoryCreateApiCallId) {\n            this.openSnackBarHandler('error', configJSON.errorCreateMsgText);\n          }\n        }\n      }\n    }\n    // Customizable Area End\n  }\n\n  onMenuToggle = () => {\n    this.setState({\n      menuCollapsed: !this.state.menuCollapsed,\n    });\n  };\n\n  // Open View Details Modal\n  openSnackBarHandler = (type: \"success\" | \"info\" | \"warning\" | \"error\" | undefined,  message: string): void => {\n    this.setState({ snackBar: {\n      show: true,\n      message: message,\n      type\n    } });\n  };\n\n  // Close View Details Modal\n  closeSnackBarHandler = () => {\n    this.setState({ snackBar: {\n      show: false,\n      message: this.state.snackBar.message,\n      type: this.state.snackBar.type\n    }});\n  };\n\n\n  // handle sorting of roleData\nhandleSortingName =()=>{\n   \n  this.setState({\n    sortName :this.state.sortName !== 'asc' ? 'asc' : 'desc'\n  })\n\n  \n  setTimeout(() => {\n    const sortedData = orderBy(this.state.subCategoryData, (item:any)=> item.attributes.name.toLowerCase(), this.state.sortName);\n  this.setState({\n    subCategoryData :sortedData \n  })\n    \n  }, 500);\n}\n\n  // handle sorting of roleData\n  handleSortingDiscount =()=>{\n   \n    this.setState({\n      sortDiscount :this.state.sortDiscount !== 'asc' ? 'asc' : 'desc',\n     \n    })\n\n    \n    setTimeout(() => {\n      const sortedData = orderBy(this.state.subCategoryData, (item:any)=> item.attributes.discount, this.state.sortDiscount);\n    this.setState({\n      subCategoryData :sortedData \n    })\n      \n    }, 500);\n\n  }\n  // Customizable Area End\n}\n"]},"metadata":{},"sourceType":"module"}